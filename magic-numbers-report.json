{
  "timestamp": "2025-07-26T03:22:00.251Z",
  "filesAnalyzed": 559,
  "totalMagicNumbers": 4655,
  "extractedConstants": [],
  "filesSummary": [
    {
      "file": "src\\lib\\design-system\\theme.ts",
      "count": 106,
      "topNumbers": [
        {
          "line": 5,
          "value": "50",
          "contexts": [],
          "usage": "value",
          "snippet": "50: '#f0f9ff',",
          "suggestedName": "CONSTANT_50"
        },
        {
          "line": 6,
          "value": "100",
          "contexts": [],
          "usage": "value",
          "snippet": "100: '#e0f2fe',",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 7,
          "value": "200",
          "contexts": [],
          "usage": "value",
          "snippet": "200: '#bae6fd',",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 8,
          "value": "300",
          "contexts": [],
          "usage": "300",
          "snippet": "300: '#7dd3fc',",
          "suggestedName": "CONSTANT_300"
        },
        {
          "line": 9,
          "value": "400",
          "contexts": [],
          "usage": "400",
          "snippet": "400: '#38bdf8',",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\lib\\analytics.ts",
      "count": 101,
      "topNumbers": [
        {
          "line": 120,
          "value": "7",
          "contexts": [],
          "usage": "value",
          "snippet": "startDate.setDate(endDate.getDate() - 7)",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 124,
          "value": "30",
          "contexts": [],
          "usage": "value",
          "snippet": "startDate.setDate(endDate.getDate() - 30)",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 128,
          "value": "90",
          "contexts": [],
          "usage": "value",
          "snippet": "startDate.setDate(endDate.getDate() - 90)",
          "suggestedName": "CONSTANT_90"
        },
        {
          "line": 134,
          "value": "30",
          "contexts": [],
          "usage": "value",
          "snippet": "startDate.setDate(endDate.getDate() - 30)",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 186,
          "value": "29",
          "contexts": [],
          "usage": "tier",
          "snippet": "SUM(CASE WHEN tier = 'pro' THEN 29 WHEN tier = 'enterprise' THEN 99 ELSE 0 END) as revenue",
          "suggestedName": "CONSTANT_29"
        }
      ]
    },
    {
      "file": "src\\lib\\design-system.ts",
      "count": 83,
      "topNumbers": [
        {
          "line": 7,
          "value": "200",
          "contexts": [],
          "usage": "value",
          "snippet": "200: '#bfdbfe',",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 8,
          "value": "300",
          "contexts": [],
          "usage": "300",
          "snippet": "300: '#93c5fd',",
          "suggestedName": "CONSTANT_300"
        },
        {
          "line": 9,
          "value": "400",
          "contexts": [],
          "usage": "400",
          "snippet": "400: '#60a5fa',",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 10,
          "value": "500",
          "contexts": [],
          "usage": "500",
          "snippet": "500: '#3b82f6',",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 11,
          "value": "600",
          "contexts": [],
          "usage": "600",
          "snippet": "600: '#2563eb',",
          "suggestedName": "CONSTANT_600"
        }
      ]
    },
    {
      "file": "src\\app\\settings\\resources\\page.tsx",
      "count": 83,
      "topNumbers": [
        {
          "line": 66,
          "value": "45",
          "contexts": [],
          "usage": "cpu",
          "snippet": "cpu: { usage: 45, cores: 8, model: 'Intel Core i7-10700K' },",
          "suggestedName": "CONSTANT_45"
        },
        {
          "line": 66,
          "value": "8",
          "contexts": [],
          "usage": "cpu",
          "snippet": "cpu: { usage: 45, cores: 8, model: 'Intel Core i7-10700K' },",
          "suggestedName": "CONSTANT_8"
        },
        {
          "line": 67,
          "value": "16",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "memory",
          "snippet": "memory: { total: 16 * 1024 * 1024 * 1024, used: 9 * 1024 * 1024 * 1024, free: 7 * 1024 * 1024 * 1024, percentage: 56.25 },",
          "suggestedName": "MAX_MEMORY_16"
        },
        {
          "line": 67,
          "value": "1024",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "memory",
          "snippet": "memory: { total: 16 * 1024 * 1024 * 1024, used: 9 * 1024 * 1024 * 1024, free: 7 * 1024 * 1024 * 1024, percentage: 56.25 },",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 67,
          "value": "1024",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "memory",
          "snippet": "memory: { total: 16 * 1024 * 1024 * 1024, used: 9 * 1024 * 1024 * 1024, free: 7 * 1024 * 1024 * 1024, percentage: 56.25 },",
          "suggestedName": "BYTES_PER_KB"
        }
      ]
    },
    {
      "file": "src\\lib\\automation\\workflows\\notification-system.ts",
      "count": 73,
      "topNumbers": [
        {
          "line": 11,
          "value": "250",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [250, 400],",
          "suggestedName": "CONSTANT_250"
        },
        {
          "line": 11,
          "value": "400",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [250, 400],",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 21,
          "value": "2",
          "contexts": [],
          "usage": "typeVersion",
          "snippet": "typeVersion: 2;",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 22,
          "value": "450",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [450, 400],",
          "suggestedName": "CONSTANT_450"
        },
        {
          "line": 22,
          "value": "400",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [450, 400],",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\lib\\analytics\\PredictiveAnalytics.ts",
      "count": 67,
      "topNumbers": [
        {
          "line": 45,
          "value": "0.05",
          "contexts": [
            "percentage"
          ],
          "usage": "errorRate",
          "snippet": "errorRate: 0.05;",
          "suggestedName": "PERCENTAGE_0_05"
        },
        {
          "line": 56,
          "value": "60000",
          "contexts": [],
          "usage": "value",
          "snippet": "this.collectSystemMetrics()}, 60000);",
          "suggestedName": "MILLISECONDS_PER_MINUTE"
        },
        {
          "line": 59,
          "value": "300000",
          "contexts": [],
          "usage": "value",
          "snippet": "this.analyzePatterns()}, 300000)",
          "suggestedName": "CONSTANT_300000"
        },
        {
          "line": 63,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "existingPatterns",
          "snippet": ") { const existingPatterns = this.behaviorHistory.get(userId) || []; const currentPattern =, existingPatterns[existingPatterns.length - 1] ||;",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 71,
          "value": "-9",
          "contexts": [],
          "usage": "value",
          "snippet": "...existingPatterns.slice(-9); currentPattern]);",
          "suggestedName": "CONSTANT_NEGATIVE_9"
        }
      ]
    },
    {
      "file": "src\\lib\\automation\\workflows\\testing-automation.ts",
      "count": 65,
      "topNumbers": [
        {
          "line": 12,
          "value": "250",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [250, 300],",
          "suggestedName": "CONSTANT_250"
        },
        {
          "line": 12,
          "value": "300",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [250, 300],",
          "suggestedName": "CONSTANT_300"
        },
        {
          "line": 22,
          "value": "250",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [250, 500],",
          "suggestedName": "CONSTANT_250"
        },
        {
          "line": 22,
          "value": "500",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [250, 500],",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 27,
          "value": "6",
          "contexts": [
            "time"
          ],
          "usage": "hoursInterval",
          "snippet": "hoursInterval: 6 // Run every 6 hours",
          "suggestedName": "TIMEOUT_6_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\AgentRefinerAgent.ts",
      "count": 63,
      "topNumbers": [
        {
          "line": 38,
          "value": "-100",
          "contexts": [],
          "usage": "accuracy",
          "snippet": "accuracy: number, // 0-100,",
          "suggestedName": "CONSTANT_NEGATIVE_100"
        },
        {
          "line": 76,
          "value": "-100",
          "contexts": [],
          "usage": "overallEfficiency",
          "snippet": "export interface PerformanceMetrics { overallEfficiency: number, // 0-100,",
          "suggestedName": "CONSTANT_NEGATIVE_100"
        },
        {
          "line": 77,
          "value": "-100",
          "contexts": [
            "percentage"
          ],
          "usage": "collaborationScore",
          "snippet": "collaborationScore: number, // 0-100,",
          "suggestedName": "PERCENTAGE__100"
        },
        {
          "line": 79,
          "value": "-100",
          "contexts": [],
          "usage": "specialization",
          "snippet": "specialization: number; // 0-100,",
          "suggestedName": "CONSTANT_NEGATIVE_100"
        },
        {
          "line": 101,
          "value": "0.4",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.4",
          "suggestedName": "CONSTANT_0_4"
        }
      ]
    },
    {
      "file": "src\\components\\collaboration\\CollaborationDashboard.tsx",
      "count": 63,
      "topNumbers": [
        {
          "line": 40,
          "value": "4",
          "contexts": [],
          "usage": "participants",
          "snippet": "participants: 4,",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 41,
          "value": "1000",
          "contexts": [],
          "usage": "lastActivity",
          "snippet": "lastActivity: new Date(Date.now() - 1000 * 60 * 15)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 41,
          "value": "60",
          "contexts": [],
          "usage": "lastActivity",
          "snippet": "lastActivity: new Date(Date.now() - 1000 * 60 * 15)",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 41,
          "value": "15",
          "contexts": [],
          "usage": "lastActivity",
          "snippet": "lastActivity: new Date(Date.now() - 1000 * 60 * 15)",
          "suggestedName": "CONSTANT_15"
        },
        {
          "line": 44,
          "value": "23",
          "contexts": [],
          "usage": "comments",
          "snippet": "comments: 23",
          "suggestedName": "CONSTANT_23"
        }
      ]
    },
    {
      "file": "src\\lib\\claude-code-integration.ts",
      "count": 62,
      "topNumbers": [
        {
          "line": 83,
          "value": "8000",
          "contexts": [
            "percentage"
          ],
          "usage": "tokenImpact",
          "snippet": "name = '/init-docs', description = 'Comprehensive documentation analysis and generation following Claude Code best practices', tokenImpact = 8000, memoryLevel: 'project' = 'project';",
          "suggestedName": "PERCENTAGE_8000"
        },
        {
          "line": 109,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1000))",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 111,
          "value": "15",
          "contexts": [],
          "usage": "components",
          "snippet": "components: 15;",
          "suggestedName": "CONSTANT_15"
        },
        {
          "line": 112,
          "value": "8",
          "contexts": [],
          "usage": "pages",
          "snippet": "pages: 8;",
          "suggestedName": "CONSTANT_8"
        },
        {
          "line": 113,
          "value": "12",
          "contexts": [
            "http"
          ],
          "usage": "apis",
          "snippet": "apis: 12;",
          "suggestedName": "HTTP_STATUS_12"
        }
      ]
    },
    {
      "file": "src\\services\\resource-aware-system.ts",
      "count": 59,
      "topNumbers": [
        {
          "line": 6,
          "value": "-100",
          "contexts": [
            "percentage"
          ],
          "usage": "usage",
          "snippet": "usage: number; // Percentage (0-100)",
          "suggestedName": "PERCENTAGE__100"
        },
        {
          "line": 14,
          "value": "-100",
          "contexts": [
            "percentage"
          ],
          "usage": "percentage",
          "snippet": "percentage: number; // Percentage (0-100)",
          "suggestedName": "PERCENTAGE__100"
        },
        {
          "line": 20,
          "value": "-100",
          "contexts": [
            "percentage"
          ],
          "usage": "percentage",
          "snippet": "percentage: number; // Percentage (0-100)",
          "suggestedName": "PERCENTAGE__100"
        },
        {
          "line": 27,
          "value": "-100",
          "contexts": [
            "percentage"
          ],
          "usage": "level",
          "snippet": "level: number; // Percentage (0-100)",
          "suggestedName": "PERCENTAGE__100"
        },
        {
          "line": 77,
          "value": "100",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "number",
          "snippet": "private maxHistorySize: number = 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\hierarchical-memory-system.ts",
      "count": 57,
      "topNumbers": [
        {
          "line": 39,
          "value": "15000",
          "contexts": [
            "limit"
          ],
          "usage": "maxTokens",
          "snippet": "maxTokens: 15000;",
          "suggestedName": "MAX_MAXTOKENS_15000"
        },
        {
          "line": 43,
          "value": "30",
          "contexts": [
            "limit"
          ],
          "usage": "parameters",
          "snippet": "parameters: { maxAge: 30;",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 45,
          "value": "0.3",
          "contexts": [],
          "usage": "temporalWeight",
          "snippet": "temporalWeight: 0.3 }",
          "suggestedName": "CONSTANT_0_3"
        },
        {
          "line": 46,
          "value": "0.9",
          "contexts": [
            "limit"
          ],
          "usage": "compactionThreshold",
          "snippet": "compactionThreshold: 0.9",
          "suggestedName": "MAX_COMPACTIONTHRESHOLD_0_9"
        },
        {
          "line": 49,
          "value": "50000",
          "contexts": [
            "limit"
          ],
          "usage": "maxTokens",
          "snippet": "maxTokens: 50000, // ./CLAUDE.md team-shared standards, currentTokens: 0;",
          "suggestedName": "MAX_MAXTOKENS_50000"
        }
      ]
    },
    {
      "file": "src\\lib\\automation\\workflows\\project-deployment.ts",
      "count": 54,
      "topNumbers": [
        {
          "line": 12,
          "value": "250",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [250, 300],",
          "suggestedName": "CONSTANT_250"
        },
        {
          "line": 12,
          "value": "300",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [250, 300],",
          "suggestedName": "CONSTANT_300"
        },
        {
          "line": 22,
          "value": "2",
          "contexts": [],
          "usage": "typeVersion",
          "snippet": "typeVersion: 2;",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 23,
          "value": "450",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [450, 300],",
          "suggestedName": "CONSTANT_450"
        },
        {
          "line": 23,
          "value": "300",
          "contexts": [],
          "usage": "position",
          "snippet": "position: [450, 300],",
          "suggestedName": "CONSTANT_300"
        }
      ]
    },
    {
      "file": "src\\packages\\self-check\\report-generator.ts",
      "count": 51,
      "topNumbers": [
        {
          "line": 76,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "${depReport.outdated.length > 0 ? depReport.outdated.map((dep) => `- ${dep}`).join('\\n') : '- All dependencies are current'}``",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 82,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "${securityReport.vulnerabilities.length > 0 ? securityReport.vulnerabilities.map((vuln) => `- ${vuln}`).join('\\n') : '- No security vulnerabilities detected'}``",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 108,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "| Module Completeness | ${moduleReport.missing.length === 0 ? '✅' : '⚠️'} | ${getModuleScore(moduleReport)}/100 |",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 108,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "| Module Completeness | ${moduleReport.missing.length === 0 ? '✅' : '⚠️'} | ${getModuleScore(moduleReport)}/100 |",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 109,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "| Dependency Health | ${depReport.outdated.length === 0 ? '✅' : '⚠️'} | ${getDependencyScore(depReport)}/100 |",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\AgentMonitor.ts",
      "count": 51,
      "topNumbers": [
        {
          "line": 82,
          "value": "30000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 30000)",
          "suggestedName": "CONSTANT_30000"
        },
        {
          "line": 106,
          "value": "-1",
          "contexts": [
            "http"
          ],
          "usage": "response_time",
          "snippet": "response_time: -1,",
          "suggestedName": "NOT_FOUND_INDEX"
        },
        {
          "line": 107,
          "value": "100",
          "contexts": [
            "percentage"
          ],
          "usage": "error_rate",
          "snippet": "error_rate: 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 121,
          "value": "100",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "_responseTime",
          "snippet": "const _responseTime = Math.random() * 100 + 50 // 50-150ms;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 121,
          "value": "50",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "_responseTime",
          "snippet": "const _responseTime = Math.random() * 100 + 50 // 50-150ms;",
          "suggestedName": "TIMEOUT_50_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\automation\\nodes\\agent-orchestration.ts",
      "count": 50,
      "topNumbers": [
        {
          "line": 22,
          "value": "4.1",
          "contexts": [],
          "usage": "typeVersion",
          "snippet": "typeVersion: 4.1,",
          "suggestedName": "CONSTANT_4_1"
        },
        {
          "line": 34,
          "value": "300000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "options",
          "snippet": "options: { timeout: config.timeout || 300000, // 5 minutes default, retry: config.retryConfig || { maxRetries: 3;",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 34,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "options",
          "snippet": "options: { timeout: config.timeout || 300000, // 5 minutes default, retry: config.retryConfig || { maxRetries: 3;",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 34,
          "value": "3",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "options",
          "snippet": "options: { timeout: config.timeout || 300000, // 5 minutes default, retry: config.retryConfig || { maxRetries: 3;",
          "suggestedName": "TIMEOUT_3_MS"
        },
        {
          "line": 35,
          "value": "5000",
          "contexts": [],
          "usage": "waitBetweenRetries",
          "snippet": "waitBetweenRetries: 5000",
          "suggestedName": "CONSTANT_5000"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\ToolsRefinerAgent.ts",
      "count": 49,
      "topNumbers": [
        {
          "line": 60,
          "value": "-100",
          "contexts": [],
          "usage": "reliability",
          "snippet": "reliability: number, // 0-100,",
          "suggestedName": "CONSTANT_NEGATIVE_100"
        },
        {
          "line": 71,
          "value": "-100",
          "contexts": [],
          "usage": "overallEfficiency",
          "snippet": "export interface ToolPerformanceAnalysis { overallEfficiency: number, // 0-100,",
          "suggestedName": "CONSTANT_NEGATIVE_100"
        },
        {
          "line": 74,
          "value": "-100",
          "contexts": [],
          "usage": "costEffectiveness",
          "snippet": "costEffectiveness: number, // 0-100",
          "suggestedName": "CONSTANT_NEGATIVE_100"
        },
        {
          "line": 96,
          "value": "0.4",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.4",
          "suggestedName": "CONSTANT_0_4"
        },
        {
          "line": 205,
          "value": "0.91",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 0.91",
          "suggestedName": "CONSTANT_0_91"
        }
      ]
    },
    {
      "file": "src\\lib\\roadmap\\RoadmapValidator.ts",
      "count": 48,
      "topNumbers": [
        {
          "line": 49,
          "value": "0",
          "contexts": [
            "time"
          ],
          "usage": "cumulativeDays",
          "snippet": "let cumulativeDays = 0; const startDate = new Date(), this.roadmap.phases.forEach((phase, index) => {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 57,
          "value": "24",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "expectedDate",
          "snippet": "expectedDate: new Date(startDate.getTime() + cumulativeDays * 24 * 60 * 60 * 1000, status: 'pending',",
          "suggestedName": "HOURS_PER_DAY"
        },
        {
          "line": 57,
          "value": "60",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "expectedDate",
          "snippet": "expectedDate: new Date(startDate.getTime() + cumulativeDays * 24 * 60 * 60 * 1000, status: 'pending',",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 57,
          "value": "60",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "expectedDate",
          "snippet": "expectedDate: new Date(startDate.getTime() + cumulativeDays * 24 * 60 * 60 * 1000, status: 'pending',",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 57,
          "value": "1000",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "expectedDate",
          "snippet": "expectedDate: new Date(startDate.getTime() + cumulativeDays * 24 * 60 * 60 * 1000, status: 'pending',",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\components\\LandingPageEnhanced.tsx",
      "count": 48,
      "topNumbers": [
        {
          "line": 49,
          "value": "0.1",
          "contexts": [
            "limit"
          ],
          "usage": "threshold",
          "snippet": "const [heroRef, heroInView]  = useInView({ threshold: 0.1 triggerOnce: true",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 52,
          "value": "0.1",
          "contexts": [
            "limit"
          ],
          "usage": "threshold",
          "snippet": "const [featuresRef, featuresInView] = useInView({ threshold: 0.1 triggerOnce: true",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 55,
          "value": "0.1",
          "contexts": [
            "limit"
          ],
          "usage": "threshold",
          "snippet": "const [benefitsRef, benefitsInView]  = useInView({ threshold: 0.1 triggerOnce: true",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 58,
          "value": "0.1",
          "contexts": [
            "limit"
          ],
          "usage": "threshold",
          "snippet": "const [statsRef, statsInView] = useInView({ threshold: 0.1 triggerOnce: true",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 69,
          "value": "30",
          "contexts": [],
          "usage": "initial",
          "snippet": "initial={{ opacity: 0, y: 30 } animate={heroInView ? { opacity: 1, y: 0 } : {}",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\lib\\admin.ts",
      "count": 47,
      "topNumbers": [
        {
          "line": 88,
          "value": "12",
          "contexts": [
            "limit"
          ],
          "usage": "projectCount",
          "snippet": "projectCount: 12;",
          "suggestedName": "MAX_PROJECTCOUNT_12"
        },
        {
          "line": 96,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "joinDate",
          "snippet": "joinDate: new Date('2024-02-20', lastActive: new Date(Date.now() - 1000 * 60 * 30, projectCount: 25;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 96,
          "value": "60",
          "contexts": [
            "limit"
          ],
          "usage": "joinDate",
          "snippet": "joinDate: new Date('2024-02-20', lastActive: new Date(Date.now() - 1000 * 60 * 30, projectCount: 25;",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 96,
          "value": "30",
          "contexts": [
            "limit"
          ],
          "usage": "joinDate",
          "snippet": "joinDate: new Date('2024-02-20', lastActive: new Date(Date.now() - 1000 * 60 * 30, projectCount: 25;",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 96,
          "value": "25",
          "contexts": [
            "limit"
          ],
          "usage": "joinDate",
          "snippet": "joinDate: new Date('2024-02-20', lastActive: new Date(Date.now() - 1000 * 60 * 30, projectCount: 25;",
          "suggestedName": "MAX_JOINDATE_25"
        }
      ]
    },
    {
      "file": "src\\lib\\advanced-monitoring.ts",
      "count": 44,
      "topNumbers": [
        {
          "line": 35,
          "value": "0.01",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "alertThresholds",
          "snippet": "private alertThresholds={ errorRate: 0.01; // 1%,",
          "suggestedName": "MAX_ALERTTHRESHOLDS_0_01"
        },
        {
          "line": 36,
          "value": "2000",
          "contexts": [
            "http"
          ],
          "usage": "responseTime",
          "snippet": "responseTime: 2000;",
          "suggestedName": "HTTP_STATUS_2000"
        },
        {
          "line": 38,
          "value": "0.80",
          "contexts": [],
          "usage": "cpuUsage",
          "snippet": "cpuUsage: 0.80; // 80%",
          "suggestedName": "CONSTANT_0_80"
        },
        {
          "line": 38,
          "value": "80",
          "contexts": [],
          "usage": "cpuUsage",
          "snippet": "cpuUsage: 0.80; // 80%",
          "suggestedName": "CONSTANT_80"
        },
        {
          "line": 98,
          "value": "24",
          "contexts": [
            "time"
          ],
          "usage": "_last24Hours",
          "snippet": "const _last24Hours = new Date(Date.now() - 24 * 60 * 60 * 1000); const recentEvents = this.securityEvents.filter(, event: any => event.timestamp > last24Hours;",
          "suggestedName": "HOURS_PER_DAY"
        }
      ]
    },
    {
      "file": "src\\components\\ClaudeCodeDashboard.tsx",
      "count": 42,
      "topNumbers": [
        {
          "line": 44,
          "value": "42000",
          "contexts": [],
          "usage": "currentTokens",
          "snippet": "currentTokens: 42000",
          "suggestedName": "CONSTANT_42000"
        },
        {
          "line": 45,
          "value": "200000",
          "contexts": [
            "limit"
          ],
          "usage": "maxTokens",
          "snippet": "maxTokens: 200000",
          "suggestedName": "MAX_MAXTOKENS_200000"
        },
        {
          "line": 46,
          "value": "0.21",
          "contexts": [
            "percentage"
          ],
          "usage": "utilizationRate",
          "snippet": "utilizationRate: 0.21,",
          "suggestedName": "PERCENTAGE_0_21"
        },
        {
          "line": 50,
          "value": "78",
          "contexts": [],
          "usage": "efficiency",
          "snippet": "efficiency: 78});",
          "suggestedName": "CONSTANT_78"
        },
        {
          "line": 56,
          "value": "8000",
          "contexts": [],
          "usage": "icon",
          "snippet": "icon: Sparkles, category: 'initialization', tokenImpact: 8000, estimatedTime: 12000}, { command: '/sync-docs', description: 'Synchronize documentation with project state',",
          "suggestedName": "CONSTANT_8000"
        }
      ]
    },
    {
      "file": "src\\app\\marketplace\\data\\marketplace-items.ts",
      "count": 42,
      "topNumbers": [
        {
          "line": 28,
          "value": "4.8",
          "contexts": [],
          "usage": "rating",
          "snippet": "rating: 4.8,",
          "suggestedName": "CONSTANT_4_8"
        },
        {
          "line": 29,
          "value": "12453",
          "contexts": [],
          "usage": "downloads",
          "snippet": "downloads: 12453,",
          "suggestedName": "CONSTANT_12453"
        },
        {
          "line": 43,
          "value": "49",
          "contexts": [],
          "usage": "price",
          "snippet": "price: 49,",
          "suggestedName": "CONSTANT_49"
        },
        {
          "line": 44,
          "value": "4.9",
          "contexts": [],
          "usage": "rating",
          "snippet": "rating: 4.9,",
          "suggestedName": "CONSTANT_4_9"
        },
        {
          "line": 45,
          "value": "8234",
          "contexts": [],
          "usage": "downloads",
          "snippet": "downloads: 8234,",
          "suggestedName": "CONSTANT_8234"
        }
      ]
    },
    {
      "file": "src\\lib\\token-optimization\\TokenAnalyzer.ts",
      "count": 41,
      "topNumbers": [
        {
          "line": 27,
          "value": "4",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return Math.ceil(text.length / 4);",
          "suggestedName": "MAX_VALUE_4"
        },
        {
          "line": 51,
          "value": "0.3",
          "contexts": [
            "limit"
          ],
          "usage": "recent",
          "snippet": "recent: Math.floor(totalTokens * 0.3),",
          "suggestedName": "MAX_RECENT_0_3"
        },
        {
          "line": 52,
          "value": "0.5",
          "contexts": [
            "limit"
          ],
          "usage": "current",
          "snippet": "current: Math.floor(totalTokens * 0.5),",
          "suggestedName": "HALF"
        },
        {
          "line": 53,
          "value": "0.2",
          "contexts": [
            "limit"
          ],
          "usage": "historical",
          "snippet": "historical: Math.floor(totalTokens * 0.2)",
          "suggestedName": "MAX_HISTORICAL_0_2"
        },
        {
          "line": 97,
          "value": "150000",
          "contexts": [],
          "usage": "targetTokens",
          "snippet": "const targetTokens = 150000; // 75% of 200K",
          "suggestedName": "CONSTANT_150000"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\bmad\\ArchitectAgent.old.ts",
      "count": 41,
      "topNumbers": [
        {
          "line": 279,
          "value": "0.4",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.4",
          "suggestedName": "CONSTANT_0_4"
        },
        {
          "line": 400,
          "value": "0.93",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 0.93",
          "suggestedName": "CONSTANT_0_93"
        },
        {
          "line": 417,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Core architectural principles",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 418,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Key constraints to consider",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 419,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "4. Quality attributes with approaches",
          "suggestedName": "CONSTANT_4"
        }
      ]
    },
    {
      "file": "src\\lib\\admin\\queries\\analytics-queries.ts",
      "count": 41,
      "topNumbers": [
        {
          "line": 11,
          "value": "7",
          "contexts": [
            "time"
          ],
          "usage": "days",
          "snippet": "const days = range === '24h' ? 1 : range === '7d' ? 7 : range === '30d' ? 30 : 90;",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 11,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "days",
          "snippet": "const days = range === '24h' ? 1 : range === '7d' ? 7 : range === '30d' ? 30 : 90;",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 11,
          "value": "90",
          "contexts": [
            "time"
          ],
          "usage": "days",
          "snippet": "const days = range === '24h' ? 1 : range === '7d' ? 7 : range === '30d' ? 30 : 90;",
          "suggestedName": "TIMEOUT_90_MS"
        },
        {
          "line": 74,
          "value": "100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "retentionRate",
          "snippet": "const retentionRate = totalUsers ? (returningUsers || 0) / totalUsers * 100 : 0;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 115,
          "value": "0",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "successRate",
          "snippet": "const successRate = totalProjects ? (completedProjects?.length || 0) / totalProjects * 100 : 0;",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\app\\evaluation\\page.tsx",
      "count": 40,
      "topNumbers": [
        {
          "line": 52,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "interval",
          "snippet": "const interval = setInterval(loadEvaluationData, 30000); // Refresh every 30 seconds",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 52,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "interval",
          "snippet": "const interval = setInterval(loadEvaluationData, 30000); // Refresh every 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 62,
          "value": "8.2",
          "contexts": [
            "limit"
          ],
          "usage": "dashboard",
          "snippet": "dashboard: { total: 8.2 },",
          "suggestedName": "MAX_DASHBOARD_8_2"
        },
        {
          "line": 63,
          "value": "8.2",
          "contexts": [
            "limit"
          ],
          "usage": "prompts",
          "snippet": "prompts: { total: 8.2 },",
          "suggestedName": "MAX_PROMPTS_8_2"
        },
        {
          "line": 64,
          "value": "8.2",
          "contexts": [
            "limit"
          ],
          "usage": "folders",
          "snippet": "folders: { total: 8.2 }",
          "suggestedName": "MAX_FOLDERS_8_2"
        }
      ]
    },
    {
      "file": "src\\lib\\api\\validation-schemas.ts",
      "count": 38,
      "topNumbers": [
        {
          "line": 11,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "limit",
          "snippet": "limit: z.coerce.number().int().min(1).max(100).default(20),",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 11,
          "value": "20",
          "contexts": [
            "limit"
          ],
          "usage": "limit",
          "snippet": "limit: z.coerce.number().int().min(1).max(100).default(20),",
          "suggestedName": "MAX_LIMIT_20"
        },
        {
          "line": 25,
          "value": "2",
          "contexts": [
            "limit"
          ],
          "usage": "name",
          "snippet": "name: z.string().min(2, 'Name must be at least 2 characters').max(100),",
          "suggestedName": "MAX_NAME_2"
        },
        {
          "line": 25,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "name",
          "snippet": "name: z.string().min(2, 'Name must be at least 2 characters').max(100),",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 28,
          "value": "8",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": ".min(8, 'Password must be at least 8 characters')",
          "suggestedName": "MAX_VALUE_8"
        }
      ]
    },
    {
      "file": "src\\lib\\cycle-detection.ts",
      "count": 37,
      "topNumbers": [
        {
          "line": 32,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "CYCLE_THRESHOLD",
          "snippet": "private attempts: Map<string ProblemAttempt[]> = new Map(, private readonly CYCLE_THRESHOLD = 3, // Number of similar attempts to consider a cycle</string>",
          "suggestedName": "MAX_CYCLE_THRESHOLD_3"
        },
        {
          "line": 33,
          "value": "30",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "TIME_WINDOW",
          "snippet": "private readonly TIME_WINDOW = 30 * 60 * 1000; // 30 minutes",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 33,
          "value": "60",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "TIME_WINDOW",
          "snippet": "private readonly TIME_WINDOW = 30 * 60 * 1000; // 30 minutes",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 33,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "TIME_WINDOW",
          "snippet": "private readonly TIME_WINDOW = 30 * 60 * 1000; // 30 minutes",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 33,
          "value": "30",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "TIME_WINDOW",
          "snippet": "private readonly TIME_WINDOW = 30 * 60 * 1000; // 30 minutes",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\components\\dashboard\\DashboardEnhanced.tsx",
      "count": 37,
      "topNumbers": [
        {
          "line": 11,
          "value": "10000",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "_generateMockData",
          "snippet": "const _generateMockData = () => ({ metrics: { totalUsers: Math.floor(Math.random() * 10000) + 5000, revenue: Math.floor(Math.random() * 50000) + 25000, conversionRate: (Math.random() * 5 + 2).toFixed(1, activeProjects: Math.floor(Math.random() * 100) + 50 },",
          "suggestedName": "MAX__GENERATEMOCKDATA_10000"
        },
        {
          "line": 11,
          "value": "5000",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "_generateMockData",
          "snippet": "const _generateMockData = () => ({ metrics: { totalUsers: Math.floor(Math.random() * 10000) + 5000, revenue: Math.floor(Math.random() * 50000) + 25000, conversionRate: (Math.random() * 5 + 2).toFixed(1, activeProjects: Math.floor(Math.random() * 100) + 50 },",
          "suggestedName": "MAX__GENERATEMOCKDATA_5000"
        },
        {
          "line": 11,
          "value": "50000",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "_generateMockData",
          "snippet": "const _generateMockData = () => ({ metrics: { totalUsers: Math.floor(Math.random() * 10000) + 5000, revenue: Math.floor(Math.random() * 50000) + 25000, conversionRate: (Math.random() * 5 + 2).toFixed(1, activeProjects: Math.floor(Math.random() * 100) + 50 },",
          "suggestedName": "MAX__GENERATEMOCKDATA_50000"
        },
        {
          "line": 11,
          "value": "25000",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "_generateMockData",
          "snippet": "const _generateMockData = () => ({ metrics: { totalUsers: Math.floor(Math.random() * 10000) + 5000, revenue: Math.floor(Math.random() * 50000) + 25000, conversionRate: (Math.random() * 5 + 2).toFixed(1, activeProjects: Math.floor(Math.random() * 100) + 50 },",
          "suggestedName": "MAX__GENERATEMOCKDATA_25000"
        },
        {
          "line": 11,
          "value": "5",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "_generateMockData",
          "snippet": "const _generateMockData = () => ({ metrics: { totalUsers: Math.floor(Math.random() * 10000) + 5000, revenue: Math.floor(Math.random() * 50000) + 25000, conversionRate: (Math.random() * 5 + 2).toFixed(1, activeProjects: Math.floor(Math.random() * 100) + 50 },",
          "suggestedName": "MAX__GENERATEMOCKDATA_5"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\bmad\\architecture\\prompts.ts",
      "count": 36,
      "topNumbers": [
        {
          "line": 15,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Key architectural principles (5-7 principles)",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 15,
          "value": "5",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Key architectural principles (5-7 principles)",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 15,
          "value": "-7",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Key architectural principles (5-7 principles)",
          "suggestedName": "CONSTANT_NEGATIVE_7"
        },
        {
          "line": 16,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Technical constraints and their implications",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 18,
          "value": "5",
          "contexts": [],
          "usage": "value",
          "snippet": "5. High-level architecture diagram description",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\AgentRegistry.ts",
      "count": 35,
      "topNumbers": [
        {
          "line": 86,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "registeredCount",
          "snippet": "{ await this.loader.discoverAgents(); let registeredCount = 0, // Register core agents;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 104,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (query.capabilities && query.capabilities.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 108,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (query.tags && query.tags.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 147,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (candidates.length === 0) { return null }",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 151,
          "value": "10",
          "contexts": [],
          "usage": "value",
          "snippet": "score += (10 - candidate.agent.priority) * 10",
          "suggestedName": "CONSTANT_10"
        }
      ]
    },
    {
      "file": "src\\components\\ShowcaseLandingPage.tsx",
      "count": 35,
      "topNumbers": [
        {
          "line": 80,
          "value": "0.5",
          "contexts": [],
          "usage": "_newValue",
          "snippet": "const _newValue = prev + (Math.random() - 0.5) * 5;",
          "suggestedName": "HALF"
        },
        {
          "line": 80,
          "value": "5",
          "contexts": [],
          "usage": "_newValue",
          "snippet": "const _newValue = prev + (Math.random() - 0.5) * 5;",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 81,
          "value": "20",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return Math.max(20, Math.min(80, newValue))",
          "suggestedName": "MAX_VALUE_20"
        },
        {
          "line": 81,
          "value": "80",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return Math.max(20, Math.min(80, newValue))",
          "suggestedName": "MAX_VALUE_80"
        },
        {
          "line": 83,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "prev",
          "snippet": "setCommandIndex(prev => (prev + 1) % claudeCommands.length)",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\app\\settings\\auto-compact\\page.tsx",
      "count": 35,
      "topNumbers": [
        {
          "line": 54,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "totalOriginalSize",
          "snippet": "totalOriginalSize: 0,",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 55,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "totalCompactedSize",
          "snippet": "totalCompactedSize: 0,",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 68,
          "value": "342",
          "contexts": [
            "limit"
          ],
          "usage": "totalFiles",
          "snippet": "totalFiles: 342,",
          "suggestedName": "MAX_TOTALFILES_342"
        },
        {
          "line": 69,
          "value": "287",
          "contexts": [],
          "usage": "processedFiles",
          "snippet": "processedFiles: 287,",
          "suggestedName": "CONSTANT_287"
        },
        {
          "line": 70,
          "value": "55",
          "contexts": [],
          "usage": "skippedFiles",
          "snippet": "skippedFiles: 55,",
          "suggestedName": "CONSTANT_55"
        }
      ]
    },
    {
      "file": "src\\lib\\backend\\adapters\\supabase.ts",
      "count": 34,
      "topNumbers": [
        {
          "line": 19,
          "value": "400",
          "contexts": [],
          "usage": "value",
          "snippet": "throw new BackendError(error.message, 'AUTH_ERROR', 400)}",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 21,
          "value": "400",
          "contexts": [],
          "usage": "value",
          "snippet": "throw new BackendError('User creation failed', 'AUTH_ERROR', 400)};",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 30,
          "value": "401",
          "contexts": [],
          "usage": "value",
          "snippet": "throw new BackendError(error.message, 'AUTH_ERROR', 401)}",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        },
        {
          "line": 32,
          "value": "401",
          "contexts": [],
          "usage": "value",
          "snippet": "throw new BackendError('Login failed', 'AUTH_ERROR', 401)}",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        },
        {
          "line": 39,
          "value": "400",
          "contexts": [],
          "usage": "value",
          "snippet": "throw new BackendError(error.message, 'AUTH_ERROR', 400)}",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\bmad\\ProjectManagerAgent.ts",
      "count": 34,
      "topNumbers": [
        {
          "line": 102,
          "value": "0.4",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.4",
          "suggestedName": "CONSTANT_0_4"
        },
        {
          "line": 192,
          "value": "0.92",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 0.92",
          "suggestedName": "CONSTANT_0_92"
        },
        {
          "line": 204,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. A clear project description (2-3 sentences)",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 204,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. A clear project description (2-3 sentences)",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 204,
          "value": "-3",
          "contexts": [],
          "usage": "value",
          "snippet": "2. A clear project description (2-3 sentences)",
          "suggestedName": "CONSTANT_NEGATIVE_3"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\PromptRefinerAgent.ts",
      "count": 34,
      "topNumbers": [
        {
          "line": 19,
          "value": "-100",
          "contexts": [],
          "usage": "score",
          "snippet": "export interface PromptClarity { score: number, // 0-100,",
          "suggestedName": "CONSTANT_NEGATIVE_100"
        },
        {
          "line": 47,
          "value": "0.3",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.3",
          "suggestedName": "CONSTANT_0_3"
        },
        {
          "line": 115,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Context (is sufficient context provided?)",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 116,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "4. Structure (is it well-organized?)",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 117,
          "value": "5",
          "contexts": [],
          "usage": "value",
          "snippet": "5. Ambiguities (what could be misunderstood?)",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\components\\ProductionShowcasePage.tsx",
      "count": 34,
      "topNumbers": [
        {
          "line": 101,
          "value": "12",
          "contexts": [],
          "usage": "activeUsers",
          "snippet": "activeUsers: 12",
          "suggestedName": "CONSTANT_12"
        },
        {
          "line": 102,
          "value": "98",
          "contexts": [],
          "usage": "systemHealth",
          "snippet": "systemHealth: 98",
          "suggestedName": "CONSTANT_98"
        },
        {
          "line": 103,
          "value": "78",
          "contexts": [],
          "usage": "memoryOptimization",
          "snippet": "memoryOptimization: 78});",
          "suggestedName": "CONSTANT_78"
        },
        {
          "line": 109,
          "value": "3",
          "contexts": [],
          "usage": "activeUsers",
          "snippet": "activeUsers: prev.activeUsers + Math.floor(Math.random() * 3) - 1,",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 111,
          "value": "95",
          "contexts": [],
          "usage": "value",
          "snippet": "95;",
          "suggestedName": "CONSTANT_95"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\SystemResourceMonitor.tsx",
      "count": 34,
      "topNumbers": [
        {
          "line": 24,
          "value": "0",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "operationCount",
          "snippet": "operationCount: 0",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 30,
          "value": "70",
          "contexts": [],
          "usage": "cpuWarning",
          "snippet": "cpuWarning: 70",
          "suggestedName": "CONSTANT_70"
        },
        {
          "line": 31,
          "value": "85",
          "contexts": [],
          "usage": "cpuCritical",
          "snippet": "cpuCritical: 85",
          "suggestedName": "CONSTANT_85"
        },
        {
          "line": 32,
          "value": "75",
          "contexts": [],
          "usage": "memoryWarning",
          "snippet": "memoryWarning: 75",
          "suggestedName": "CONSTANT_75"
        },
        {
          "line": 33,
          "value": "90",
          "contexts": [],
          "usage": "memoryCritical",
          "snippet": "memoryCritical: 90",
          "suggestedName": "CONSTANT_90"
        }
      ]
    },
    {
      "file": "src\\app\\marketing\\page.tsx",
      "count": 34,
      "topNumbers": [
        {
          "line": 46,
          "value": "2543",
          "contexts": [],
          "usage": "leads",
          "snippet": "leads: 2543,",
          "suggestedName": "CONSTANT_2543"
        },
        {
          "line": 47,
          "value": "187",
          "contexts": [],
          "usage": "conversions",
          "snippet": "conversions: 187,",
          "suggestedName": "CONSTANT_187"
        },
        {
          "line": 48,
          "value": "45680",
          "contexts": [],
          "usage": "revenue",
          "snippet": "revenue: 45680,",
          "suggestedName": "CONSTANT_45680"
        },
        {
          "line": 55,
          "value": "1876",
          "contexts": [],
          "usage": "leads",
          "snippet": "leads: 1876,",
          "suggestedName": "CONSTANT_1876"
        },
        {
          "line": 56,
          "value": "134",
          "contexts": [],
          "usage": "conversions",
          "snippet": "conversions: 134,",
          "suggestedName": "CONSTANT_134"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\specialized\\self-healing\\health-monitor.ts",
      "count": 32,
      "topNumbers": [
        {
          "line": 10,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "number",
          "snippet": "constructor(private checkInterval: number = 30000) { // 30 seconds default",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 10,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "number",
          "snippet": "constructor(private checkInterval: number = 30000) { // 30 seconds default",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 118,
          "value": "5000",
          "contexts": [
            "time"
          ],
          "usage": "timeout",
          "snippet": "timeout: 5000",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 131,
          "value": "100",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 100));",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 132,
          "value": "0.1",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "return Math.random() > 0.1; // 90% success rate",
          "suggestedName": "TEN_PERCENT"
        }
      ]
    },
    {
      "file": "src\\lib\\api\\rate-limiter.ts",
      "count": 31,
      "topNumbers": [
        {
          "line": 34,
          "value": "15",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "windowMs",
          "snippet": "windowMs: 15 * 60 * 1000, // 15 minutes",
          "suggestedName": "TIMEOUT_15_MS"
        },
        {
          "line": 34,
          "value": "60",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "windowMs",
          "snippet": "windowMs: 15 * 60 * 1000, // 15 minutes",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 34,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "windowMs",
          "snippet": "windowMs: 15 * 60 * 1000, // 15 minutes",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 34,
          "value": "15",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "windowMs",
          "snippet": "windowMs: 15 * 60 * 1000, // 15 minutes",
          "suggestedName": "TIMEOUT_15_MS"
        },
        {
          "line": 35,
          "value": "100",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "maxRequests",
          "snippet": "maxRequests: 100,",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\CPURateLimiter.ts",
      "count": 31,
      "topNumbers": [
        {
          "line": 3,
          "value": "-100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "maxCpuUsage",
          "snippet": "export interface RateLimiterConfig { maxCpuUsage: number // percentage (0-100, , maxMemoryUsage: number // percentage (0-100, ),",
          "suggestedName": "MAX_MAXCPUUSAGE__100"
        },
        {
          "line": 3,
          "value": "-100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "maxCpuUsage",
          "snippet": "export interface RateLimiterConfig { maxCpuUsage: number // percentage (0-100, , maxMemoryUsage: number // percentage (0-100, ),",
          "suggestedName": "MAX_MAXCPUUSAGE__100"
        },
        {
          "line": 26,
          "value": "70",
          "contexts": [
            "limit"
          ],
          "usage": "config",
          "snippet": "super(, this.config={ maxCpuUsage: 70;",
          "suggestedName": "MAX_CONFIG_70"
        },
        {
          "line": 27,
          "value": "80",
          "contexts": [
            "limit"
          ],
          "usage": "maxMemoryUsage",
          "snippet": "maxMemoryUsage: 80;",
          "suggestedName": "MAX_MAXMEMORYUSAGE_80"
        },
        {
          "line": 28,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "checkInterval",
          "snippet": "checkInterval: 1000;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\specialized\\self-healing\\strategies\\performance-strategy.ts",
      "count": 29,
      "topNumbers": [
        {
          "line": 13,
          "value": "5000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 5000, // 5 seconds",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 13,
          "value": "5",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 5000, // 5 seconds",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 19,
          "value": "30000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 30000, // 30 seconds",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 19,
          "value": "30",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 30000, // 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 25,
          "value": "10000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 10000, // 10 seconds",
          "suggestedName": "TEN_SECONDS_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\runtime\\AgentOrchestrator.ts",
      "count": 29,
      "topNumbers": [
        {
          "line": 44,
          "value": "5",
          "contexts": [
            "limit"
          ],
          "usage": "maxConcurrentAgents",
          "snippet": "maxConcurrentAgents: 5;",
          "suggestedName": "MAX_MAXCONCURRENTAGENTS_5"
        },
        {
          "line": 45,
          "value": "300000",
          "contexts": [
            "time"
          ],
          "usage": "timeoutMs",
          "snippet": "timeoutMs: 300000;",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 47,
          "value": "0.7",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.7 }",
          "suggestedName": "CONSTANT_0_7"
        },
        {
          "line": 99,
          "value": "0",
          "contexts": [],
          "usage": "priority",
          "snippet": "priority: 'high' as const dependencies: index > 0 ? [`quick-${index - 1}`] : any[]``",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 105,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "tasks.filter((t) => t.dependencies!.length > 0)",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\theme\\dark-mode.tsx",
      "count": 28,
      "topNumbers": [
        {
          "line": 86,
          "value": "-10",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "className=\"relative inline-flex h-10 w-10 items-center justify-center rounded-lg border border-gray-200 bg-white text-gray-900 transition-colors, hover: bg-gray-50, focus: outline-none,;",
          "suggestedName": "TIMEOUT__10_MS"
        },
        {
          "line": 86,
          "value": "-10",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "className=\"relative inline-flex h-10 w-10 items-center justify-center rounded-lg border border-gray-200 bg-white text-gray-900 transition-colors, hover: bg-gray-50, focus: outline-none,;",
          "suggestedName": "TIMEOUT__10_MS"
        },
        {
          "line": 86,
          "value": "-200",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "className=\"relative inline-flex h-10 w-10 items-center justify-center rounded-lg border border-gray-200 bg-white text-gray-900 transition-colors, hover: bg-gray-50, focus: outline-none,;",
          "suggestedName": "TIMEOUT__200_MS"
        },
        {
          "line": 86,
          "value": "-900",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "className=\"relative inline-flex h-10 w-10 items-center justify-center rounded-lg border border-gray-200 bg-white text-gray-900 transition-colors, hover: bg-gray-50, focus: outline-none,;",
          "suggestedName": "TIMEOUT__900_MS"
        },
        {
          "line": 86,
          "value": "-50",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "className=\"relative inline-flex h-10 w-10 items-center justify-center rounded-lg border border-gray-200 bg-white text-gray-900 transition-colors, hover: bg-gray-50, focus: outline-none,;",
          "suggestedName": "TIMEOUT__50_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\requirements\\ClientRequirementsProcessor.ts",
      "count": 28,
      "topNumbers": [
        {
          "line": 69,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Technical specifications mentioned",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 70,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Design preferences stated",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 71,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "4. Business constraints or goals",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 73,
          "value": "6",
          "contexts": [],
          "usage": "value",
          "snippet": "6. Security needs",
          "suggestedName": "CONSTANT_6"
        },
        {
          "line": 117,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "if (agents.size === 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\Dashboard.tsx",
      "count": 28,
      "topNumbers": [
        {
          "line": 52,
          "value": "2",
          "contexts": [],
          "usage": "deployTime",
          "snippet": "deployTime: Math.floor(Math.random() * 2) + 3,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 52,
          "value": "3",
          "contexts": [],
          "usage": "deployTime",
          "snippet": "deployTime: Math.floor(Math.random() * 2) + 3,",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 53,
          "value": "24",
          "contexts": [],
          "usage": "activeFeatures",
          "snippet": "activeFeatures: 24,",
          "suggestedName": "HOURS_PER_DAY"
        },
        {
          "line": 54,
          "value": "20",
          "contexts": [
            "http"
          ],
          "usage": "apiLatency",
          "snippet": "apiLatency: Math.floor(Math.random() * 20) + 35,",
          "suggestedName": "HTTP_STATUS_20"
        },
        {
          "line": 54,
          "value": "35",
          "contexts": [
            "http"
          ],
          "usage": "apiLatency",
          "snippet": "apiLatency: Math.floor(Math.random() * 20) + 35,",
          "suggestedName": "HTTP_STATUS_35"
        }
      ]
    },
    {
      "file": "src\\lib\\token-optimization\\ContentCompressor.ts",
      "count": 27,
      "topNumbers": [
        {
          "line": 7,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace(/(\\*{1,3})\\s+/g, '$1 ')",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 11,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace(/[^\\S\\n]{2,}/g, ' ');",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 22,
          "value": "80",
          "contexts": [],
          "usage": "Description",
          "snippet": ".replace(/^Description:\\s*\\n((?:^.{1,80}$\\s*)+)/gm, (match, desc) => {",
          "suggestedName": "CONSTANT_80"
        },
        {
          "line": 26,
          "value": "100",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": ".replace(/^(\\s*[-*+]\\s+)(.{1,100})\\n\\s*[-*+]\\s+(.{1,100})/gm, (match, bullet, first, second) => {",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 26,
          "value": "100",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": ".replace(/^(\\s*[-*+]\\s+)(.{1,100})\\n\\s*[-*+]\\s+(.{1,100})/gm, (match, bullet, first, second) => {",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\app\\settings\\llm\\page.tsx",
      "count": 27,
      "topNumbers": [
        {
          "line": 41,
          "value": "850",
          "contexts": [],
          "usage": "name",
          "snippet": "{ name: 'OpenAI GPT-4', available: true, latency: 850, cost: 0.03, priority: 1 },",
          "suggestedName": "CONSTANT_850"
        },
        {
          "line": 41,
          "value": "0.03",
          "contexts": [],
          "usage": "name",
          "snippet": "{ name: 'OpenAI GPT-4', available: true, latency: 850, cost: 0.03, priority: 1 },",
          "suggestedName": "CONSTANT_0_03"
        },
        {
          "line": 41,
          "value": "1",
          "contexts": [],
          "usage": "name",
          "snippet": "{ name: 'OpenAI GPT-4', available: true, latency: 850, cost: 0.03, priority: 1 },",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 42,
          "value": "920",
          "contexts": [],
          "usage": "name",
          "snippet": "{ name: 'Anthropic Claude', available: true, latency: 920, cost: 0.024, priority: 2 },",
          "suggestedName": "CONSTANT_920"
        },
        {
          "line": 42,
          "value": "0.024",
          "contexts": [],
          "usage": "name",
          "snippet": "{ name: 'Anthropic Claude', available: true, latency: 920, cost: 0.024, priority: 2 },",
          "suggestedName": "CONSTANT_0_024"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\AdminAnalytics.tsx",
      "count": 25,
      "topNumbers": [
        {
          "line": 31,
          "value": "1234",
          "contexts": [
            "limit"
          ],
          "usage": "totalUsers",
          "snippet": "totalUsers: 1234,",
          "suggestedName": "MAX_TOTALUSERS_1234"
        },
        {
          "line": 32,
          "value": "456",
          "contexts": [],
          "usage": "activeUsers",
          "snippet": "activeUsers: 456,",
          "suggestedName": "CONSTANT_456"
        },
        {
          "line": 33,
          "value": "789",
          "contexts": [
            "limit"
          ],
          "usage": "totalProjects",
          "snippet": "totalProjects: 789,",
          "suggestedName": "MAX_TOTALPROJECTS_789"
        },
        {
          "line": 34,
          "value": "123456",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "totalApiCalls",
          "snippet": "totalApiCalls: 123456,",
          "suggestedName": "MAX_TOTALAPICALLS_123456"
        },
        {
          "line": 35,
          "value": "9876",
          "contexts": [],
          "usage": "revenue",
          "snippet": "revenue: 9876,",
          "suggestedName": "CONSTANT_9876"
        }
      ]
    },
    {
      "file": "src\\lib\\admin\\queries\\system-queries.ts",
      "count": 24,
      "topNumbers": [
        {
          "line": 42,
          "value": "-1",
          "contexts": [],
          "usage": "latency",
          "snippet": "latency: -1,",
          "suggestedName": "NOT_FOUND_INDEX"
        },
        {
          "line": 43,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "poolSize",
          "snippet": "poolSize: 0,",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 57,
          "value": "10",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "poolSize",
          "snippet": "poolSize: 10, // Would get from connection pool",
          "suggestedName": "MAX_POOLSIZE_10"
        },
        {
          "line": 58,
          "value": "5",
          "contexts": [],
          "usage": "activeConnections",
          "snippet": "activeConnections: 5 // Would get from connection pool",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 63,
          "value": "-1",
          "contexts": [],
          "usage": "latency",
          "snippet": "latency: -1,",
          "suggestedName": "NOT_FOUND_INDEX"
        }
      ]
    },
    {
      "file": "src\\services\\analytics\\metrics-calculator.ts",
      "count": 23,
      "topNumbers": [
        {
          "line": 43,
          "value": "99.9",
          "contexts": [],
          "usage": "uptime",
          "snippet": "uptime: 99.9,",
          "suggestedName": "CONSTANT_99_9"
        },
        {
          "line": 44,
          "value": "0.9",
          "contexts": [],
          "usage": "apdex",
          "snippet": "apdex: 0.9",
          "suggestedName": "CONSTANT_0_9"
        },
        {
          "line": 105,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (sessionEvents.length === 1) {",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 118,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "const value = event.unit === 's' ? event.value * 1000 : event.value;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 165,
          "value": "100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "errorRate",
          "snippet": "this.metrics.performance.errorRate = (errorEvents / totalEvents) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\services\\analytics\\dashboard-generator.ts",
      "count": 23,
      "topNumbers": [
        {
          "line": 33,
          "value": "7",
          "contexts": [
            "time"
          ],
          "usage": "days",
          "snippet": "const days = 7;",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 44,
          "value": "23",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "dayEnd.setHours(23, 59, 59, 999);",
          "suggestedName": "TIMEOUT_23_MS"
        },
        {
          "line": 44,
          "value": "59",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "dayEnd.setHours(23, 59, 59, 999);",
          "suggestedName": "TIMEOUT_59_MS"
        },
        {
          "line": 44,
          "value": "59",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "dayEnd.setHours(23, 59, 59, 999);",
          "suggestedName": "TIMEOUT_59_MS"
        },
        {
          "line": 44,
          "value": "999",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "dayEnd.setHours(23, 59, 59, 999);",
          "suggestedName": "TIMEOUT_999_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\knowledge\\rag-engine.ts",
      "count": 23,
      "topNumbers": [
        {
          "line": 57,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "RAGQuerySchema",
          "snippet": "export const RAGQuerySchema = z.object({ question: z.string().min(1, context: z.string().optional(, filters: z.object({ type: z.array(z.string()).optional(, tags: z.array(z.string()).optional(, project: z.string().optional()}).optional(, options: z.object({ topK: z.number().min(1).max(100).optional(, includeScores: z.boolean().optional(, stream: z.boolean().optional()",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 66,
          "value": "1000",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "textSplitter",
          "snippet": "this.documentLoader = new DocumentLoader(, this.textSplitter = new RecursiveCharacterTextSplitter({ chunkSize: config.chunkSize || 1000,",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 67,
          "value": "200",
          "contexts": [],
          "usage": "chunkOverlap",
          "snippet": "chunkOverlap: config.chunkOverlap || 200",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 126,
          "value": "5",
          "contexts": [],
          "usage": "topK",
          "snippet": "topK: validated.options?.topK || this.config.retrievalTopK || 5,",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 148,
          "value": "5",
          "contexts": [],
          "usage": "topK",
          "snippet": "topK: validated.options?.topK || this.config.retrievalTopK || 5,",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\lib\\api\\validation-middleware.ts",
      "count": 23,
      "topNumbers": [
        {
          "line": 12,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "limit",
          "snippet": "limit: z.coerce.number().int().min(1).max(100).default(20),",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 12,
          "value": "20",
          "contexts": [
            "limit"
          ],
          "usage": "limit",
          "snippet": "limit: z.coerce.number().int().min(1).max(100).default(20),",
          "suggestedName": "MAX_LIMIT_20"
        },
        {
          "line": 37,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 400 }",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 61,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 400 }",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 94,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 500 }",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\PulsedAgentOrchestrator.ts",
      "count": 23,
      "topNumbers": [
        {
          "line": 11,
          "value": "-100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "maxMemoryUsage",
          "snippet": "maxMemoryUsage: number // percentage (0-100, , maxCpuUsage: number // percentage (0-100, ),",
          "suggestedName": "MAX_MAXMEMORYUSAGE__100"
        },
        {
          "line": 11,
          "value": "-100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "maxMemoryUsage",
          "snippet": "maxMemoryUsage: number // percentage (0-100, , maxCpuUsage: number // percentage (0-100, ),",
          "suggestedName": "MAX_MAXMEMORYUSAGE__100"
        },
        {
          "line": 38,
          "value": "2",
          "contexts": [
            "limit"
          ],
          "usage": "maxConcurrentAgents",
          "snippet": "maxConcurrentAgents: pulseConfig.maxConcurrentAgents || 2",
          "suggestedName": "MAX_MAXCONCURRENTAGENTS_2"
        },
        {
          "line": 41,
          "value": "2",
          "contexts": [
            "limit"
          ],
          "usage": "pulseConfig",
          "snippet": "this.pulseConfig={ maxConcurrentAgents: 2;",
          "suggestedName": "MAX_PULSECONFIG_2"
        },
        {
          "line": 42,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "pulseInterval",
          "snippet": "pulseInterval: 1000;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\bmad\\ArchitectAgent.ts",
      "count": 23,
      "topNumbers": [
        {
          "line": 53,
          "value": "0.4",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.4",
          "suggestedName": "CONSTANT_0_4"
        },
        {
          "line": 185,
          "value": "0.95",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 0.95,",
          "suggestedName": "CONSTANT_0_95"
        },
        {
          "line": 207,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace('{constraints}', JSON.stringify(constraints, null, 2))",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 208,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace('{qualityStandards}', JSON.stringify(qualityStandards, null, 2));",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 223,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace('{components}', JSON.stringify(components, null, 2))",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\lib\\tutorials\\InteractiveTutorialSystem.old.ts",
      "count": 22,
      "topNumbers": [
        {
          "line": 83,
          "value": "100",
          "contexts": [],
          "usage": "completionRewards",
          "snippet": "completionRewards: { points: 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 144,
          "value": "150",
          "contexts": [],
          "usage": "completionRewards",
          "snippet": "completionRewards: { points: 150;",
          "suggestedName": "CONSTANT_150"
        },
        {
          "line": 179,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "expected",
          "snippet": "expected: 50, // Minimum characters, errorMessage: 'Please provide a detailed description (at least 50 characters)'",
          "suggestedName": "MAX_EXPECTED_50"
        },
        {
          "line": 219,
          "value": "200",
          "contexts": [],
          "usage": "completionRewards",
          "snippet": "completionRewards: { points: 200;",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 296,
          "value": "250",
          "contexts": [],
          "usage": "completionRewards",
          "snippet": "completionRewards: { points: 250;",
          "suggestedName": "CONSTANT_250"
        }
      ]
    },
    {
      "file": "src\\services\\llm-fallback-system.ts",
      "count": 21,
      "topNumbers": [
        {
          "line": 91,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "max_tokens",
          "snippet": "max_tokens: options?.maxTokens || 1000,",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 92,
          "value": "0.7",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: options?.temperature || 0.7,",
          "suggestedName": "CONSTANT_0_7"
        },
        {
          "line": 97,
          "value": "-4",
          "contexts": [],
          "usage": "value",
          "snippet": "estimateCost: (tokens) => tokens * 0.00003 // GPT-4 pricing estimate",
          "suggestedName": "CONSTANT_NEGATIVE_4"
        },
        {
          "line": 107,
          "value": "2",
          "contexts": [],
          "usage": "priority",
          "snippet": "priority: 2,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 118,
          "value": "503",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "return response.status !== 503;",
          "suggestedName": "HTTP_STATUS_503"
        }
      ]
    },
    {
      "file": "src\\services\\evaluation-monitor.ts",
      "count": 21,
      "topNumbers": [
        {
          "line": 40,
          "value": "100",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "number",
          "snippet": "private maxHistorySize: number = 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 45,
          "value": "5",
          "contexts": [],
          "usage": "critical",
          "snippet": "critical: 5,",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 46,
          "value": "7",
          "contexts": [],
          "usage": "warning",
          "snippet": "warning: 7,",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 47,
          "value": "8",
          "contexts": [],
          "usage": "good",
          "snippet": "good: 8,",
          "suggestedName": "CONSTANT_8"
        },
        {
          "line": 48,
          "value": "9",
          "contexts": [],
          "usage": "excellent",
          "snippet": "excellent: 9",
          "suggestedName": "CONSTANT_9"
        }
      ]
    },
    {
      "file": "src\\lib\\token-optimization\\StrategyManager.ts",
      "count": 21,
      "topNumbers": [
        {
          "line": 15,
          "value": "0.7",
          "contexts": [],
          "usage": "targetUtilization",
          "snippet": "targetUtilization: 0.7,",
          "suggestedName": "CONSTANT_0_7"
        },
        {
          "line": 16,
          "value": "0.1",
          "contexts": [
            "percentage"
          ],
          "usage": "compressionRatio",
          "snippet": "compressionRatio: 0.1,",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 21,
          "value": "10",
          "contexts": [],
          "usage": "priority",
          "snippet": "priority: 10,",
          "suggestedName": "CONSTANT_10"
        },
        {
          "line": 27,
          "value": "9",
          "contexts": [],
          "usage": "priority",
          "snippet": "priority: 9,",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 33,
          "value": "7",
          "contexts": [],
          "usage": "priority",
          "snippet": "priority: 7,",
          "suggestedName": "DAYS_PER_WEEK"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\AgentCoordinator.ts",
      "count": 21,
      "topNumbers": [
        {
          "line": 72,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "taskCounter",
          "snippet": "let taskCounter = 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 116,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "i",
          "snippet": "for (let i = 0; i < phaseResults.length; i++) { const result = phaseResults[i]; const _taskId = phase[i]; const task = plan.tasks.find(t => t.id === taskId)!;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 123,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (phaseIndex < plan.execution_order.length - 1) {",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 134,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "progress",
          "snippet": "plan.progress = (completedTasks.length / plan.tasks.length) * 100",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 142,
          "value": "100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "_successRate",
          "snippet": "const _successRate = (completedTasks.length / plan.tasks.length) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\runtime\\ResourceMonitor.ts",
      "count": 21,
      "topNumbers": [
        {
          "line": 46,
          "value": "60",
          "contexts": [
            "time",
            "limit",
            "dimension"
          ],
          "usage": "number",
          "snippet": "private maxHistorySize: number = 60; // Keep 1 minute of history at 1s intervals",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 46,
          "value": "1",
          "contexts": [
            "time",
            "limit",
            "dimension"
          ],
          "usage": "number",
          "snippet": "private maxHistorySize: number = 60; // Keep 1 minute of history at 1s intervals",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 54,
          "value": "70",
          "contexts": [],
          "usage": "warning",
          "snippet": "warning: 70;",
          "suggestedName": "CONSTANT_70"
        },
        {
          "line": 55,
          "value": "85",
          "contexts": [],
          "usage": "critical",
          "snippet": "critical: 85;",
          "suggestedName": "CONSTANT_85"
        },
        {
          "line": 58,
          "value": "75",
          "contexts": [],
          "usage": "memory",
          "snippet": "memory: { warning: 75;",
          "suggestedName": "CONSTANT_75"
        }
      ]
    },
    {
      "file": "src\\services\\white-label-service.ts",
      "count": 20,
      "topNumbers": [
        {
          "line": 233,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "return JSON.stringify(this.config, null, 2);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 334,
          "value": "-9",
          "contexts": [],
          "usage": "domainRegex",
          "snippet": "const domainRegex = /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i;",
          "suggestedName": "CONSTANT_NEGATIVE_9"
        },
        {
          "line": 334,
          "value": "-9",
          "contexts": [],
          "usage": "domainRegex",
          "snippet": "const domainRegex = /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i;",
          "suggestedName": "CONSTANT_NEGATIVE_9"
        },
        {
          "line": 334,
          "value": "2",
          "contexts": [],
          "usage": "domainRegex",
          "snippet": "const domainRegex = /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i;",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 355,
          "value": "150",
          "contexts": [
            "dimension"
          ],
          "usage": "width",
          "snippet": "width: 150,",
          "suggestedName": "WIDTH_150PX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\specialized\\self-healing\\strategies\\security-strategy.ts",
      "count": 20,
      "topNumbers": [
        {
          "line": 15,
          "value": "90000",
          "contexts": [
            "time",
            "limit",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 90000, // 1.5 minutes",
          "suggestedName": "TIMEOUT_90000_MS"
        },
        {
          "line": 15,
          "value": "1.5",
          "contexts": [
            "time",
            "limit",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 90000, // 1.5 minutes",
          "suggestedName": "TIMEOUT_1_5_MS"
        },
        {
          "line": 21,
          "value": "60000",
          "contexts": [
            "time",
            "limit",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 60000, // 1 minute",
          "suggestedName": "MILLISECONDS_PER_MINUTE"
        },
        {
          "line": 27,
          "value": "30000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 30000, // 30 seconds",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 27,
          "value": "30",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 30000, // 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\bmad\\architecture\\infrastructure-planner.ts",
      "count": 20,
      "topNumbers": [
        {
          "line": 12,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace('{components}', JSON.stringify(components, null, 2))",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 13,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace('{overview}', JSON.stringify(overview, null, 2))",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 14,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace('{timeline}', JSON.stringify(timeline, null, 2));",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 17,
          "value": "0.3",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.3,",
          "suggestedName": "CONSTANT_0_3"
        },
        {
          "line": 68,
          "value": "50",
          "contexts": [],
          "usage": "value",
          "snippet": "breakdown['CDN'] = 50;",
          "suggestedName": "CONSTANT_50"
        }
      ]
    },
    {
      "file": "src\\lib\\health\\HealthCheckService.ts",
      "count": 19,
      "topNumbers": [
        {
          "line": 79,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (unhealthyCount > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 80,
          "value": "0",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "overallStatus",
          "snippet": "overallStatus = 'unhealthy'} else if (degradedCount > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 104,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "number",
          "snippet": "startPeriodicChecks(intervalMs: number = 30000) {",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 133,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return acc + ((total - idle) / total) * 100",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 134,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "}, 0) / cpus.length",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\health\\AlertingService.ts",
      "count": 19,
      "topNumbers": [
        {
          "line": 39,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "cooldownPeriod",
          "snippet": "cooldownPeriod: 5 * 60 * 1000, // 5 minutes, maxAlertsPerHour: 10;",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 39,
          "value": "60",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "cooldownPeriod",
          "snippet": "cooldownPeriod: 5 * 60 * 1000, // 5 minutes, maxAlertsPerHour: 10;",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 39,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "cooldownPeriod",
          "snippet": "cooldownPeriod: 5 * 60 * 1000, // 5 minutes, maxAlertsPerHour: 10;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 39,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "cooldownPeriod",
          "snippet": "cooldownPeriod: 5 * 60 * 1000, // 5 minutes, maxAlertsPerHour: 10;",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 39,
          "value": "10",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "cooldownPeriod",
          "snippet": "cooldownPeriod: 5 * 60 * 1000, // 5 minutes, maxAlertsPerHour: 10;",
          "suggestedName": "TIMEOUT_10_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\specialized\\SelfHealingAgent.ts",
      "count": 19,
      "topNumbers": [
        {
          "line": 132,
          "value": "5000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 5000",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 138,
          "value": "10000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 10000",
          "suggestedName": "TEN_SECONDS_MS"
        },
        {
          "line": 144,
          "value": "30000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 30000",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 147,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "maxAttempts",
          "snippet": "maxAttempts: 3,",
          "suggestedName": "MAX_MAXATTEMPTS_3"
        },
        {
          "line": 148,
          "value": "2",
          "contexts": [],
          "usage": "priority",
          "snippet": "priority: 2",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\components\\LandingPageProduction.tsx",
      "count": 19,
      "topNumbers": [
        {
          "line": 36,
          "value": "48",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "hours",
          "snippet": "const [timeLeft, setTimeLeft] = useState({ hours: 48, minutes: 0, seconds: 0 });",
          "suggestedName": "TIMEOUT_48_MS"
        },
        {
          "line": 41,
          "value": "20",
          "contexts": [],
          "usage": "handleScroll",
          "snippet": "const handleScroll = () => setScrolled(window.scrollY > 20);",
          "suggestedName": "CONSTANT_20"
        },
        {
          "line": 53,
          "value": "59",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "minutes",
          "snippet": "return { ...prev, minutes: prev.minutes - 1, seconds: 59 };",
          "suggestedName": "TIMEOUT_59_MS"
        },
        {
          "line": 55,
          "value": "59",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "hours",
          "snippet": "return { hours: prev.hours - 1, minutes: 59, seconds: 59 };",
          "suggestedName": "TIMEOUT_59_MS"
        },
        {
          "line": 55,
          "value": "59",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "hours",
          "snippet": "return { hours: prev.hours - 1, minutes: 59, seconds: 59 };",
          "suggestedName": "TIMEOUT_59_MS"
        }
      ]
    },
    {
      "file": "src\\packages\\self-check\\causal-feedback-replayer.ts",
      "count": 18,
      "topNumbers": [
        {
          "line": 15,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "logData",
          "snippet": "const logData = logs || logger.getLogs(, if (logData.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 58,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "total",
          "snippet": "const total =, stat.additions + stat.deletions + stat.edits + stat.retentions, if (total < 3) {;",
          "suggestedName": "MAX_TOTAL_3"
        },
        {
          "line": 67,
          "value": "0.4",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "if (deletionRate > 0.4) {",
          "suggestedName": "PERCENTAGE_0_4"
        },
        {
          "line": 76,
          "value": "0.3",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "else if (retentionRate < 0.3 && editRate > 0.3) {",
          "suggestedName": "PERCENTAGE_0_3"
        },
        {
          "line": 76,
          "value": "0.3",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "else if (retentionRate < 0.3 && editRate > 0.3) {",
          "suggestedName": "PERCENTAGE_0_3"
        }
      ]
    },
    {
      "file": "src\\lib\\design-system\\components.tsx",
      "count": 18,
      "topNumbers": [
        {
          "line": 40,
          "value": "1.02",
          "contexts": [],
          "usage": "whileHover",
          "snippet": "const whileHover={{ scale: disabled || loading ? 1 : 1.02  };",
          "suggestedName": "CONSTANT_1_02"
        },
        {
          "line": 42,
          "value": "0.98",
          "contexts": [],
          "usage": "whileTap",
          "snippet": "const whileTap={{ scale: disabled || loading ? 1 : 0.98 }",
          "suggestedName": "CONSTANT_0_98"
        },
        {
          "line": 89,
          "value": "-4",
          "contexts": [],
          "usage": "whileHover",
          "snippet": "const whileHover={interactive ? { y: -4 } : {},",
          "suggestedName": "CONSTANT_NEGATIVE_4"
        },
        {
          "line": 134,
          "value": "-10",
          "contexts": [],
          "usage": "initial",
          "snippet": "initial={{ opacity: 0, y: -10 } animate={{ opacity: 1, y: 0 }",
          "suggestedName": "CONSTANT_NEGATIVE_10"
        },
        {
          "line": 135,
          "value": "-10",
          "contexts": [
            "time"
          ],
          "usage": "exit",
          "snippet": "exit={{ opacity: 0, y: -10 } className={cn(`'flex items-start p-4 rounded-lg border' config.bg className",
          "suggestedName": "TIMEOUT__10_MS"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\button-basic.tsx",
      "count": 18,
      "topNumbers": [
        {
          "line": 9,
          "value": "-2",
          "contexts": [
            "time",
            "limit",
            "dimension"
          ],
          "usage": "visible",
          "snippet": "\"\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\"\" { variants: { variant: {",
          "suggestedName": "TIMEOUT__2_MS"
        },
        {
          "line": 9,
          "value": "-1",
          "contexts": [
            "time",
            "limit",
            "dimension"
          ],
          "usage": "visible",
          "snippet": "\"\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\"\" { variants: { variant: {",
          "suggestedName": "NOT_FOUND_INDEX"
        },
        {
          "line": 9,
          "value": "-50",
          "contexts": [
            "time",
            "limit",
            "dimension"
          ],
          "usage": "visible",
          "snippet": "\"\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\"\" { variants: { variant: {",
          "suggestedName": "TIMEOUT__50_MS"
        },
        {
          "line": 9,
          "value": "-4",
          "contexts": [
            "time",
            "limit",
            "dimension"
          ],
          "usage": "visible",
          "snippet": "\"\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\"\" { variants: { variant: {",
          "suggestedName": "TIMEOUT__4_MS"
        },
        {
          "line": 9,
          "value": "-0",
          "contexts": [
            "time",
            "limit",
            "dimension"
          ],
          "usage": "visible",
          "snippet": "\"\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\"\" { variants: { variant: {",
          "suggestedName": "TIMEOUT__0_MS"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\icons\\technology-icons.tsx",
      "count": 18,
      "topNumbers": [
        {
          "line": 11,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 14,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "cx",
          "snippet": "<circle cx=\"12\" cy=\"10\" r=\"3\" strokeWidth={2} />",
          "suggestedName": "CX_2PX"
        },
        {
          "line": 31,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 41,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "cx",
          "snippet": "<ellipse cx=\"12\" cy=\"5\" rx=\"9\" ry=\"3\" strokeWidth={2} />",
          "suggestedName": "CX_2PX"
        },
        {
          "line": 45,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        }
      ]
    },
    {
      "file": "src\\lib\\token-optimization\\TokenBudgetManager.ts",
      "count": 17,
      "topNumbers": [
        {
          "line": 4,
          "value": "200000",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "private maxTokens: number = 200000;",
          "suggestedName": "MAX_NUMBER_200000"
        },
        {
          "line": 5,
          "value": "0.75",
          "contexts": [],
          "usage": "number",
          "snippet": "private targetUtilization: number = 0.75; // 150K tokens (75% of 200K)",
          "suggestedName": "THREE_QUARTERS"
        },
        {
          "line": 5,
          "value": "75",
          "contexts": [],
          "usage": "number",
          "snippet": "private targetUtilization: number = 0.75; // 150K tokens (75% of 200K)",
          "suggestedName": "CONSTANT_75"
        },
        {
          "line": 20,
          "value": "0.15",
          "contexts": [],
          "usage": "coreMemory",
          "snippet": "coreMemory: Math.floor(targetTokens * 0.15),        // 22.5K - Essential project info",
          "suggestedName": "CONSTANT_0_15"
        },
        {
          "line": 20,
          "value": "22.",
          "contexts": [],
          "usage": "coreMemory",
          "snippet": "coreMemory: Math.floor(targetTokens * 0.15),        // 22.5K - Essential project info",
          "suggestedName": "CONSTANT_22_"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\runtime\\AgentRuntime.ts",
      "count": 17,
      "topNumbers": [
        {
          "line": 61,
          "value": "5",
          "contexts": [
            "limit"
          ],
          "usage": "config",
          "snippet": "super(, this.config={ maxConcurrentAgents: 5;",
          "suggestedName": "MAX_CONFIG_5"
        },
        {
          "line": 62,
          "value": "300000",
          "contexts": [
            "time"
          ],
          "usage": "timeoutMs",
          "snippet": "timeoutMs: 300000;",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 66,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "sharedMemoryLimit",
          "snippet": "sharedMemoryLimit: 1000;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 113,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. What input to give each agent",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 114,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Dependencies between agents",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\docker\\AgentContainer.ts",
      "count": 17,
      "topNumbers": [
        {
          "line": 58,
          "value": "-9",
          "contexts": [],
          "usage": "value",
          "snippet": "if (!this.containerId && output.match(/^[a-f0-9]{64};$/) {)} {",
          "suggestedName": "CONSTANT_NEGATIVE_9"
        },
        {
          "line": 58,
          "value": "64",
          "contexts": [],
          "usage": "value",
          "snippet": "if (!this.containerId && output.match(/^[a-f0-9]{64};$/) {)} {",
          "suggestedName": "CONSTANT_64"
        },
        {
          "line": 59,
          "value": "12",
          "contexts": [],
          "usage": "containerId",
          "snippet": "this.containerId = output.substring(0, 12);",
          "suggestedName": "CONSTANT_12"
        },
        {
          "line": 79,
          "value": "5000",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "setTimeout(() => this.start(, 5000)",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 265,
          "value": "85",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "if (stats.cpuPercent > 85) {",
          "suggestedName": "PERCENTAGE_85"
        }
      ]
    },
    {
      "file": "src\\lib\\health\\external-services-health.ts",
      "count": 16,
      "topNumbers": [
        {
          "line": 22,
          "value": "10000",
          "contexts": [
            "time"
          ],
          "usage": "signal",
          "snippet": "signal: AbortSignal.timeout(10000); // 10 second timeout",
          "suggestedName": "TEN_SECONDS_MS"
        },
        {
          "line": 22,
          "value": "10",
          "contexts": [
            "time"
          ],
          "usage": "signal",
          "snippet": "signal: AbortSignal.timeout(10000); // 10 second timeout",
          "suggestedName": "TIMEOUT_10_MS"
        },
        {
          "line": 31,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "details",
          "snippet": "details: { models: data.data?.length || 0,",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 34,
          "value": "401",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "timestamp: new Date()} else if (response.status === 401) {",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        },
        {
          "line": 39,
          "value": "429",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "timestamp: new Date()} else if (response.status === 429) {",
          "suggestedName": "HTTP_STATUS_429"
        }
      ]
    },
    {
      "file": "src\\lib\\data\\MockDataGenerator.ts",
      "count": 16,
      "topNumbers": [
        {
          "line": 84,
          "value": "10",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "number",
          "snippet": "generateMockData(schemaName: string, count: number = 10): any[] {",
          "suggestedName": "MAX_NUMBER_10"
        },
        {
          "line": 89,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "i",
          "snippet": "for (let i = 0; i < count; i++) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 111,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "return faker.lorem.words(3);",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 117,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "_max",
          "snippet": "const _max = field.max || 1000;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 125,
          "value": "2",
          "contexts": [],
          "usage": "years",
          "snippet": "return faker.date.past({ years: 2",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\runtime\\PulsedExecutor.ts",
      "count": 16,
      "topNumbers": [
        {
          "line": 29,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "config",
          "snippet": "this.config={ minInterval: 1000,      // 1 second",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 30,
          "value": "3000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "maxInterval",
          "snippet": "maxInterval: 3000,      // 3 seconds",
          "suggestedName": "TIMEOUT_3000_MS"
        },
        {
          "line": 30,
          "value": "3",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "maxInterval",
          "snippet": "maxInterval: 3000,      // 3 seconds",
          "suggestedName": "TIMEOUT_3_MS"
        },
        {
          "line": 32,
          "value": "500",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "maxExecutionTime",
          "snippet": "maxExecutionTime: 500,  // 500ms per pulse",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 182,
          "value": "85",
          "contexts": [],
          "usage": "value",
          "snippet": "if (this.resourceMetrics.cpuUsage > 85 || this.resourceMetrics.memoryUsage > 85) {",
          "suggestedName": "CONSTANT_85"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\icons\\navigation-icons.tsx",
      "count": 16,
      "topNumbers": [
        {
          "line": 8,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "x",
          "snippet": "<rect x=\"3\" y=\"3\" width=\"7\" height=\"7\" strokeWidth={2} />",
          "suggestedName": "X_2PX"
        },
        {
          "line": 9,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "x",
          "snippet": "<rect x=\"14\" y=\"3\" width=\"7\" height=\"7\" strokeWidth={2} />",
          "suggestedName": "X_2PX"
        },
        {
          "line": 10,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "x",
          "snippet": "<rect x=\"14\" y=\"14\" width=\"7\" height=\"7\" strokeWidth={2} />",
          "suggestedName": "X_2PX"
        },
        {
          "line": 11,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "x",
          "snippet": "<rect x=\"3\" y=\"14\" width=\"7\" height=\"7\" strokeWidth={2} />",
          "suggestedName": "X_2PX"
        },
        {
          "line": 19,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "cx",
          "snippet": "<circle cx=\"12\" cy=\"12\" r=\"3\" strokeWidth={2} />",
          "suggestedName": "CX_2PX"
        }
      ]
    },
    {
      "file": "src\\lib\\api-middleware.ts",
      "count": 15,
      "topNumbers": [
        {
          "line": 29,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "if (response.status >= 400) {",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 49,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 500 }",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 69,
          "value": "200",
          "contexts": [
            "http",
            "percentage"
          ],
          "usage": "response",
          "snippet": "return (handler: ApiHandler): ApiHandler: (any) =>  { return async (request: NextRequest, context?) => { const response = await handler(request, context, // Only track successful operations, if (response.status === 200 || response.status === 201) {;",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 69,
          "value": "201",
          "contexts": [
            "http",
            "percentage"
          ],
          "usage": "response",
          "snippet": "return (handler: ApiHandler): ApiHandler: (any) =>  { return async (request: NextRequest, context?) => { const response = await handler(request, context, // Only track successful operations, if (response.status === 200 || response.status === 201) {;",
          "suggestedName": "HTTP_STATUS_CREATED"
        },
        {
          "line": 85,
          "value": "100",
          "contexts": [],
          "usage": "prompt",
          "snippet": "prompt: body.prompt?.substring(0, 100) // First 100 chars",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\database\\connection-pool.ts",
      "count": 15,
      "topNumbers": [
        {
          "line": 21,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "config",
          "snippet": "this.config={ maxConnections: config.maxConnections || 10,",
          "suggestedName": "MAX_CONFIG_10"
        },
        {
          "line": 22,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "idleTimeout",
          "snippet": "idleTimeout: config.idleTimeout || 30000, // 30 seconds, connectionTimeout: config.connectionTimeout || 5000, // 5 seconds, retryAttempts: config.retryAttempts || 3,",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 22,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "idleTimeout",
          "snippet": "idleTimeout: config.idleTimeout || 30000, // 30 seconds, connectionTimeout: config.connectionTimeout || 5000, // 5 seconds, retryAttempts: config.retryAttempts || 3,",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 22,
          "value": "5000",
          "contexts": [
            "time"
          ],
          "usage": "idleTimeout",
          "snippet": "idleTimeout: config.idleTimeout || 30000, // 30 seconds, connectionTimeout: config.connectionTimeout || 5000, // 5 seconds, retryAttempts: config.retryAttempts || 3,",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 22,
          "value": "5",
          "contexts": [
            "time"
          ],
          "usage": "idleTimeout",
          "snippet": "idleTimeout: config.idleTimeout || 30000, // 30 seconds, connectionTimeout: config.connectionTimeout || 5000, // 5 seconds, retryAttempts: config.retryAttempts || 3,",
          "suggestedName": "TIMEOUT_5_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\AgentSystem.ts",
      "count": 15,
      "topNumbers": [
        {
          "line": 53,
          "value": "5",
          "contexts": [
            "limit"
          ],
          "usage": "orchestrator",
          "snippet": "this.orchestrator = new EnhancedAgentOrchestrator({ maxConcurrentTasks: this.config.maxConcurrentTasks || 5,",
          "suggestedName": "MAX_ORCHESTRATOR_5"
        },
        {
          "line": 148,
          "value": "3",
          "contexts": [],
          "usage": "retries",
          "snippet": "retries: 3",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 363,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (Object.keys(capabilities) {.}length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 373,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "pulsedExecutor",
          "snippet": "this.pulsedExecutor = new PulsedExecutor({ minInterval: 1000;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 374,
          "value": "3000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "maxInterval",
          "snippet": "maxInterval: 3000;",
          "suggestedName": "TIMEOUT_3000_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\bmad\\AnalystAgent.ts",
      "count": 15,
      "topNumbers": [
        {
          "line": 36,
          "value": "0.3",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.3, // Lower temperature for more consistent analysis",
          "suggestedName": "CONSTANT_0_3"
        },
        {
          "line": 103,
          "value": "0.95",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 0.95",
          "suggestedName": "CONSTANT_0_95"
        },
        {
          "line": 120,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Assumptions (things we assume to be true);",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 126,
          "value": "0.1",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.1,",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 141,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "- Acceptance criteria (at least 3)",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\components\\ProjectGenerator.tsx",
      "count": 15,
      "topNumbers": [
        {
          "line": 20,
          "value": "2",
          "contexts": [],
          "usage": "dependencies",
          "snippet": "dependencies: { 'react': '^18.0.0', 'react-dom': '^18.0.0', 'next': '^14.0.0', 'typescript': '^5.0.0', '@types/react': '^18.0.0', '@types/node': '^20.0.0' }, null, 2)    })",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 59,
          "value": "6",
          "contexts": [],
          "usage": "value",
          "snippet": "${config.features.slice(0, 6).map((feature) => `</div>",
          "suggestedName": "CONSTANT_6"
        },
        {
          "line": 87,
          "value": "214",
          "contexts": [],
          "usage": "rgb",
          "snippet": "--background-start-rgb: 214, 219, 220",
          "suggestedName": "CONSTANT_214"
        },
        {
          "line": 87,
          "value": "219",
          "contexts": [],
          "usage": "rgb",
          "snippet": "--background-start-rgb: 214, 219, 220",
          "suggestedName": "CONSTANT_219"
        },
        {
          "line": 87,
          "value": "220",
          "contexts": [],
          "usage": "rgb",
          "snippet": "--background-start-rgb: 214, 219, 220",
          "suggestedName": "CONSTANT_220"
        }
      ]
    },
    {
      "file": "src\\components\\DesignSystemShowcase.tsx",
      "count": 15,
      "topNumbers": [
        {
          "line": 31,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "{Object.entries(shades as Record<string string>).slice(2, 7).map(([shade, value]) => (\\n    </string>",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 31,
          "value": "7",
          "contexts": [],
          "usage": "value",
          "snippet": "{Object.entries(shades as Record<string string>).slice(2, 7).map(([shade, value]) => (\\n    </string>",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 108,
          "value": "75",
          "contexts": [],
          "usage": "value",
          "snippet": "<UnifiedProgress value={75} variant=\"primary\" showValue     />",
          "suggestedName": "CONSTANT_75"
        },
        {
          "line": 163,
          "value": "25",
          "contexts": [],
          "usage": "value",
          "snippet": "<UnifiedProgress value={25} variant=\"primary\" showValue     />",
          "suggestedName": "CONSTANT_25"
        },
        {
          "line": 164,
          "value": "50",
          "contexts": [
            "time",
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "<UnifiedProgress value={50} variant=\"secondary\" showValue size=\"lg\"      />",
          "suggestedName": "TIMEOUT_50_MS"
        }
      ]
    },
    {
      "file": "src\\components\\analytics\\PredictiveInsights.tsx",
      "count": 15,
      "topNumbers": [
        {
          "line": 56,
          "value": "87",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 87,",
          "suggestedName": "CONSTANT_87"
        },
        {
          "line": 59,
          "value": "15400",
          "contexts": [],
          "usage": "value",
          "snippet": "value: 15400,",
          "suggestedName": "CONSTANT_15400"
        },
        {
          "line": 67,
          "value": "92",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 92,",
          "suggestedName": "CONSTANT_92"
        },
        {
          "line": 70,
          "value": "-4200",
          "contexts": [],
          "usage": "value",
          "snippet": "value: -4200,",
          "suggestedName": "CONSTANT_NEGATIVE_4200"
        },
        {
          "line": 78,
          "value": "78",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 78,",
          "suggestedName": "CONSTANT_78"
        }
      ]
    },
    {
      "file": "src\\app\\api\\monitoring\\vitals\\route.ts",
      "count": 15,
      "topNumbers": [
        {
          "line": 32,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 400 }",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 72,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 500 }",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 112,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 500 }",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 118,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (metrics.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 120,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "count",
          "snippet": "count: 0,",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\templates.ts",
      "count": 14,
      "topNumbers": [
        {
          "line": 77,
          "value": "12",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "LIMIT 12;",
          "suggestedName": "MAX_VALUE_12"
        },
        {
          "line": 85,
          "value": "20",
          "contexts": [
            "limit"
          ],
          "usage": "limit",
          "snippet": "static async getTemplatesByCategory(category: string, limit = 20): Promise<any> {",
          "suggestedName": "MAX_LIMIT_20"
        },
        {
          "line": 203,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (existingPurchase.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 271,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "templateCount",
          "snippet": "templateCount: (cat.template_count as number) || 0",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 298,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "reviews",
          "snippet": "reviews: data.review_count || 0,",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\epc\\epc-engine.ts",
      "count": 14,
      "topNumbers": [
        {
          "line": 12,
          "value": "-100",
          "contexts": [],
          "usage": "score",
          "snippet": "score: number, // 0-100 confidence score",
          "suggestedName": "CONSTANT_NEGATIVE_100"
        },
        {
          "line": 25,
          "value": "60000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "number",
          "snippet": "private cacheExpiry: number = 60000; // 1 minute cache",
          "suggestedName": "MILLISECONDS_PER_MINUTE"
        },
        {
          "line": 50,
          "value": "100",
          "contexts": [],
          "usage": "score",
          "snippet": "score: 100 }",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 77,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "score",
          "snippet": "result.score = Math.max(0, 100 - totalIssues * 10);",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 77,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "score",
          "snippet": "result.score = Math.max(0, 100 - totalIssues * 10);",
          "suggestedName": "MAX_SCORE_10"
        }
      ]
    },
    {
      "file": "src\\lib\\admin\\queries\\stats-queries.ts",
      "count": 14,
      "topNumbers": [
        {
          "line": 70,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return count || 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 75,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 94,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return count || 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 99,
          "value": "7",
          "contexts": [],
          "usage": "value",
          "snippet": "weekStart.setDate(weekStart.getDate() - 7);",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 106,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return count || 0;",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\LiveProjectPreview.tsx",
      "count": 14,
      "topNumbers": [
        {
          "line": 57,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "setIsGenerating(false)}, 1000)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 97,
          "value": "234",
          "contexts": [],
          "usage": "className",
          "snippet": "<div className=\"text-3xl font-bold ${primaryColor.replace('bg-', 'text-')}\">1,234</div>",
          "suggestedName": "CONSTANT_234"
        },
        {
          "line": 99,
          "value": "567",
          "contexts": [],
          "usage": "className",
          "snippet": "<div className=\"bg-white p-6 rounded-lg shadow\" >className=\"text-3xl font-bold ${primaryColor.replace('bg-', 'text-')}\">567</div>",
          "suggestedName": "CONSTANT_567"
        },
        {
          "line": 101,
          "value": "89",
          "contexts": [],
          "usage": "className",
          "snippet": "<div className=\"bg-white p-6 rounded-lg shadow\" >className=\"text-3xl font-bold ${primaryColor.replace('bg-', 'text-')}\">89%</div>",
          "suggestedName": "CONSTANT_89"
        },
        {
          "line": 138,
          "value": "2",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "className",
          "snippet": "<div className=\"text-xs text-gray-500\">2 minutes ago</div>",
          "suggestedName": "TIMEOUT_2_MS"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\icons\\status-icons.tsx",
      "count": 14,
      "topNumbers": [
        {
          "line": 12,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 25,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 38,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 51,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 64,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\icons\\media-icons.tsx",
      "count": 14,
      "topNumbers": [
        {
          "line": 11,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 24,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 37,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 50,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 63,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        }
      ]
    },
    {
      "file": "src\\components\\analytics\\advanced\\OverviewTab.tsx",
      "count": 14,
      "topNumbers": [
        {
          "line": 43,
          "value": "12",
          "contexts": [],
          "usage": "trend",
          "snippet": "trend={{ value: 12, isPositive: true }}",
          "suggestedName": "CONSTANT_12"
        },
        {
          "line": 51,
          "value": "23",
          "contexts": [],
          "usage": "trend",
          "snippet": "trend={{ value: 23, isPositive: true }}",
          "suggestedName": "CONSTANT_23"
        },
        {
          "line": 59,
          "value": "8",
          "contexts": [],
          "usage": "trend",
          "snippet": "trend={{ value: 8, isPositive: true }}",
          "suggestedName": "CONSTANT_8"
        },
        {
          "line": 67,
          "value": "5",
          "contexts": [],
          "usage": "trend",
          "snippet": "trend={{ value: 5, isPositive: false }}",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 77,
          "value": "300",
          "contexts": [
            "dimension"
          ],
          "usage": "width",
          "snippet": "<ResponsiveContainer width=\"100%\" height={300}>",
          "suggestedName": "WIDTH_300PX"
        }
      ]
    },
    {
      "file": "src\\app\\contact\\page.tsx",
      "count": 14,
      "topNumbers": [
        {
          "line": 41,
          "value": "4",
          "contexts": [],
          "usage": "rows",
          "snippet": "<Textarea =\"How can we help you?\" rows={4} />",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 68,
          "value": "555",
          "contexts": [],
          "usage": "className",
          "snippet": "<p className=\"text-gray-600\">+1 (555) 123-4567</p>",
          "suggestedName": "CONSTANT_555"
        },
        {
          "line": 68,
          "value": "123",
          "contexts": [],
          "usage": "className",
          "snippet": "<p className=\"text-gray-600\">+1 (555) 123-4567</p>",
          "suggestedName": "CONSTANT_123"
        },
        {
          "line": 68,
          "value": "-4567",
          "contexts": [],
          "usage": "className",
          "snippet": "<p className=\"text-gray-600\">+1 (555) 123-4567</p>",
          "suggestedName": "CONSTANT_NEGATIVE_4567"
        },
        {
          "line": 82,
          "value": "123",
          "contexts": [],
          "usage": "value",
          "snippet": "123 Innovation Drive<br />",
          "suggestedName": "CONSTANT_123"
        }
      ]
    },
    {
      "file": "src\\app\\analytics\\page.tsx",
      "count": 14,
      "topNumbers": [
        {
          "line": 27,
          "value": "1247",
          "contexts": [
            "limit"
          ],
          "usage": "totalUsers",
          "snippet": "setData({ totalUsers: 1247,",
          "suggestedName": "MAX_TOTALUSERS_1247"
        },
        {
          "line": 28,
          "value": "89",
          "contexts": [],
          "usage": "activeUsers",
          "snippet": "activeUsers: 89,",
          "suggestedName": "CONSTANT_89"
        },
        {
          "line": 29,
          "value": "5643",
          "contexts": [],
          "usage": "pageViews",
          "snippet": "pageViews: 5643,",
          "suggestedName": "CONSTANT_5643"
        },
        {
          "line": 30,
          "value": "34.2",
          "contexts": [
            "percentage"
          ],
          "usage": "bounceRate",
          "snippet": "bounceRate: 34.2,",
          "suggestedName": "PERCENTAGE_34_2"
        },
        {
          "line": 32,
          "value": "1543",
          "contexts": [
            "percentage"
          ],
          "usage": "path",
          "snippet": "{ path: '/', views: 1543, percentage: 27.3 },",
          "suggestedName": "PERCENTAGE_1543"
        }
      ]
    },
    {
      "file": "src\\utils\\formatting.ts",
      "count": 13,
      "topNumbers": [
        {
          "line": 12,
          "value": "2",
          "contexts": [],
          "usage": "formatBytes",
          "snippet": "export function formatBytes(bytes: number, decimals = 2): number, decimals = 2) {",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 12,
          "value": "2",
          "contexts": [],
          "usage": "formatBytes",
          "snippet": "export function formatBytes(bytes: number, decimals = 2): number, decimals = 2) {",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 13,
          "value": "1024",
          "contexts": [],
          "usage": "k",
          "snippet": "if (bytes === 0) {r}eturn '0 Bytes'; const k = 1024; const _dm = decimals < 0 ? 0 : decimals;",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 21,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "_seconds",
          "snippet": "const _seconds = Math.floor(ms / 1000); const _minutes = Math.floor(seconds / 60); const _hours  = Math.floor(minutes / 60);",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 21,
          "value": "60",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "_seconds",
          "snippet": "const _seconds = Math.floor(ms / 1000); const _minutes = Math.floor(seconds / 60); const _hours  = Math.floor(minutes / 60);",
          "suggestedName": "SECONDS_PER_MINUTE"
        }
      ]
    },
    {
      "file": "src\\utils\\constants.ts",
      "count": 13,
      "topNumbers": [
        {
          "line": 28,
          "value": "200",
          "contexts": [
            "http"
          ],
          "usage": "_HTTP_STATUS",
          "snippet": "export const _HTTP_STATUS={ OK: 200,",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 29,
          "value": "201",
          "contexts": [],
          "usage": "CREATED",
          "snippet": "CREATED: 201,",
          "suggestedName": "HTTP_STATUS_CREATED"
        },
        {
          "line": 30,
          "value": "204",
          "contexts": [],
          "usage": "NO_CONTENT",
          "snippet": "NO_CONTENT: 204,",
          "suggestedName": "HTTP_STATUS_NO_CONTENT"
        },
        {
          "line": 31,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "BAD_REQUEST",
          "snippet": "BAD_REQUEST: 400,",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 32,
          "value": "401",
          "contexts": [],
          "usage": "UNAUTHORIZED",
          "snippet": "UNAUTHORIZED: 401,",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        }
      ]
    },
    {
      "file": "src\\services\\auto-compact-system.ts",
      "count": 13,
      "topNumbers": [
        {
          "line": 55,
          "value": "10",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "maxFileSize",
          "snippet": "maxFileSize: 10, // 10MB max",
          "suggestedName": "MAX_MAXFILESIZE_10"
        },
        {
          "line": 115,
          "value": "1024",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "if (stats.size > this.config.threshold * 1024 &&",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 116,
          "value": "1024",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "stats.size < this.config.maxFileSize * 1024 * 1024) {",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 116,
          "value": "1024",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "stats.size < this.config.maxFileSize * 1024 * 1024) {",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 170,
          "value": "100",
          "contexts": [
            "limit",
            "percentage",
            "dimension"
          ],
          "usage": "reductionPercentage",
          "snippet": "const reductionPercentage = (reduction / originalSize) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\knowledge\\text-splitter.ts",
      "count": 13,
      "topNumbers": [
        {
          "line": 25,
          "value": "0",
          "contexts": [],
          "usage": "chunks",
          "snippet": "const chunks: TextChunk[] = [], let currentChunk = ''; let currentIndex = 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 26,
          "value": "0",
          "contexts": [],
          "usage": "chunkIndex",
          "snippet": "let chunkIndex = 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 27,
          "value": "0",
          "contexts": [],
          "usage": "startIndex",
          "snippet": "let startIndex = 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 49,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "return $2};",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 55,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "currentLength",
          "snippet": "let currentLength = 0;",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\ide\\kiro-server-mock.ts",
      "count": 13,
      "topNumbers": [
        {
          "line": 78,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 85,
          "value": "36",
          "contexts": [],
          "usage": "newProject",
          "snippet": "{ Math.random().toString(36).substring(7); const newProject: KiroProject={",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 85,
          "value": "7",
          "contexts": [],
          "usage": "newProject",
          "snippet": "{ Math.random().toString(36).substring(7); const newProject: KiroProject={",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 155,
          "value": "36",
          "contexts": [
            "limit"
          ],
          "usage": "terminal",
          "snippet": "{ Math.random().toString(36).substring(7); const terminal: KiroTerminal={",
          "suggestedName": "MAX_TERMINAL_36"
        },
        {
          "line": 155,
          "value": "7",
          "contexts": [
            "limit"
          ],
          "usage": "terminal",
          "snippet": "{ Math.random().toString(36).substring(7); const terminal: KiroTerminal={",
          "suggestedName": "DAYS_PER_WEEK"
        }
      ]
    },
    {
      "file": "src\\lib\\epc\\inference-telemetry.ts",
      "count": 13,
      "topNumbers": [
        {
          "line": 49,
          "value": "30000",
          "contexts": [],
          "usage": "value",
          "snippet": "this.flushBuffer()}, 30000)",
          "suggestedName": "CONSTANT_30000"
        },
        {
          "line": 138,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (this.buffer.length === 0) {r}eturn null, try {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 144,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "fs.writeFileSync(this.currentLog, JSON.stringify(allData, null, 2);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 166,
          "value": "0",
          "contexts": [
            "time",
            "limit",
            "percentage"
          ],
          "usage": "durationCount",
          "snippet": "let durationCount = 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 183,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "issue",
          "snippet": "for (const issue of entry.preflightCheck.issues) { issueCount.set(issue, (issueCount.get(issue) || 0) + 1)",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\GracefulShutdownManager.ts",
      "count": 13,
      "topNumbers": [
        {
          "line": 11,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "number",
          "snippet": "private shutdownTimeout: number = 30000 // 30 seconds default:",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 11,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "number",
          "snippet": "private shutdownTimeout: number = 30000 // 30 seconds default:",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 56,
          "value": "5000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 5000)}",
          "suggestedName": "CONSTANT_5000"
        },
        {
          "line": 107,
          "value": "10",
          "contexts": [
            "time"
          ],
          "usage": "_createDatabaseShutdownHandler",
          "snippet": "export const _createDatabaseShutdownHandler = (db): ShutdownHandler: any => ({ name: 'database', priority: 10, timeout: 10000, handler: async () => {",
          "suggestedName": "TIMEOUT_10_MS"
        },
        {
          "line": 107,
          "value": "10000",
          "contexts": [
            "time",
            "port"
          ],
          "usage": "_createDatabaseShutdownHandler",
          "snippet": "export const _createDatabaseShutdownHandler = (db): ShutdownHandler: any => ({ name: 'database', priority: 10, timeout: 10000, handler: async () => {",
          "suggestedName": "TEN_SECONDS_MS"
        }
      ]
    },
    {
      "file": "src\\components\\InferenceSafeMode.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 73,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "checkEnvironment(, fetchStats(); // Refresh stats every 30 seconds;",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 75,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "_interval",
          "snippet": "const _interval = setInterval(fetchStats, 30000);",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 140,
          "value": "0",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "{status?.issues && status.issues.length > 0  && (Alert>\r</Alert>",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 146,
          "value": "3",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "{status.issues.slice(0, 3).map((issue, i) => (\\n    </ul>",
          "suggestedName": "HTTP_STATUS_3"
        },
        {
          "line": 149,
          "value": "3",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "{status.issues.length > 3  && (",
          "suggestedName": "MAX_VALUE_3"
        }
      ]
    },
    {
      "file": "src\\components\\GuidedProjectBuilder.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 58,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!value || value.length < 3) {r}eturn 'Project name must be at least 3 characters'; return null",
          "suggestedName": "MAX_VALUE_3"
        },
        {
          "line": 75,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!value || value.length < 50) {r}eturn 'Please provide at least 50 characters to describe your project'; return null },",
          "suggestedName": "MAX_VALUE_50"
        },
        {
          "line": 186,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "_progress",
          "snippet": "const _progress = ((currentStep + 1) / steps.length) * 100;",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 186,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "_progress",
          "snippet": "const _progress = ((currentStep + 1) / steps.length) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 196,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return Object.keys(stepErrors).length === 0",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\FreeTierManager.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 44,
          "value": "12.5",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: 12.5,",
          "suggestedName": "MAX_SIZE_12_5"
        },
        {
          "line": 52,
          "value": "8.3",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: 8.3,",
          "suggestedName": "MAX_SIZE_8_3"
        },
        {
          "line": 57,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "MAX_FREE_PROJECTS",
          "snippet": "const MAX_FREE_PROJECTS = 3;",
          "suggestedName": "MAX_MAX_FREE_PROJECTS_3"
        },
        {
          "line": 58,
          "value": "50",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "MAX_PROJECT_SIZE_MB",
          "snippet": "const MAX_PROJECT_SIZE_MB = 50;",
          "suggestedName": "MAX_MAX_PROJECT_SIZE_MB_50"
        },
        {
          "line": 62,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "totalStorageUsed",
          "snippet": "const totalStorageUsed = activeProjects.reduce((sum, p) => sum + p.size, 0);",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\FlowchartBuilder.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 17,
          "value": "250",
          "contexts": [],
          "usage": "position",
          "snippet": "position: { x: 250, y: 25 },",
          "suggestedName": "CONSTANT_250"
        },
        {
          "line": 17,
          "value": "25",
          "contexts": [],
          "usage": "position",
          "snippet": "position: { x: 250, y: 25 },",
          "suggestedName": "CONSTANT_25"
        },
        {
          "line": 20,
          "value": "100",
          "contexts": [],
          "usage": "position",
          "snippet": "position: { x: 100, y: 125 },",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 20,
          "value": "125",
          "contexts": [],
          "usage": "position",
          "snippet": "position: { x: 100, y: 125 },",
          "suggestedName": "CONSTANT_125"
        },
        {
          "line": 23,
          "value": "400",
          "contexts": [],
          "usage": "position",
          "snippet": "position: { x: 400, y: 125 },",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\icons\\business-icons.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 11,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 24,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 37,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 50,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 63,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        }
      ]
    },
    {
      "file": "src\\components\\knowledge\\RAGKnowledgeBase.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 76,
          "value": "10",
          "contexts": [],
          "usage": "options",
          "snippet": "options: { topK: 10",
          "suggestedName": "CONSTANT_10"
        },
        {
          "line": 79,
          "value": "0",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "if (response.sources.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 149,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (result.errors.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 243,
          "value": "6",
          "contexts": [],
          "usage": "rows",
          "snippet": "const rows={6/>\r</Textarea>",
          "suggestedName": "CONSTANT_6"
        },
        {
          "line": 318,
          "value": "1048576",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "<Progress value={(stats.size / 1048576) * 10} className=\"h-2\"   />",
          "suggestedName": "BYTES_PER_MB"
        }
      ]
    },
    {
      "file": "src\\components\\dashboard\\EnterpriseDashboard.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 95,
          "value": "7",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "<option value=\"7d\">Last 7 days</option>",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 96,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "<option value=\"30d\">Last 30 days</option>",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 97,
          "value": "90",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "<option value=\"90d\">Last 90 days</option>",
          "suggestedName": "TIMEOUT_90_MS"
        },
        {
          "line": 186,
          "value": "100",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "{formatPercentage(systemMetrics.errorRate * 100)}/>",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 189,
          "value": "100",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "const value={systemMetrics.errorRate * 100}",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\AdminDashboard.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 36,
          "value": "1000000",
          "contexts": [],
          "usage": "value",
          "snippet": "if (num >= 1000000) {;",
          "suggestedName": "CONSTANT_1000000"
        },
        {
          "line": 37,
          "value": "1000000",
          "contexts": [],
          "usage": "value",
          "snippet": "return (num / 1000000).toFixed(1) + 'M' }; else if (num >= 1000) {",
          "suggestedName": "CONSTANT_1000000"
        },
        {
          "line": 37,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "return (num / 1000000).toFixed(1) + 'M' }; else if (num >= 1000) {",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 38,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "return (num / 1000).toFixed(1) + 'K'};",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 59,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "seconds",
          "snippet": "const seconds = Math.floor((new Date().getTime() - new Date(timestamp).getTime()) / 1000, if (seconds < 60) {r}eturn 'Just now', const minutes = Math.floor(seconds / 60);",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\apps\\ui-builder\\app.config.ts",
      "count": 13,
      "topNumbers": [
        {
          "line": 9,
          "value": "-1",
          "contexts": [],
          "usage": "historyIndex",
          "snippet": "historyIndex: -1,",
          "suggestedName": "NOT_FOUND_INDEX"
        },
        {
          "line": 10,
          "value": "100",
          "contexts": [],
          "usage": "zoom",
          "snippet": "zoom: 100,",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 17,
          "value": "25",
          "contexts": [
            "limit"
          ],
          "usage": "minZoom",
          "snippet": "minZoom: 25,",
          "suggestedName": "MAX_MINZOOM_25"
        },
        {
          "line": 18,
          "value": "200",
          "contexts": [
            "limit"
          ],
          "usage": "maxZoom",
          "snippet": "maxZoom: 200,",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 19,
          "value": "25",
          "contexts": [
            "time"
          ],
          "usage": "zoomStep",
          "snippet": "zoomStep: 25,",
          "suggestedName": "TIMEOUT_25_MS"
        }
      ]
    },
    {
      "file": "src\\app\\analytics\\advanced\\page.tsx",
      "count": 13,
      "topNumbers": [
        {
          "line": 61,
          "value": "5000",
          "contexts": [
            "time"
          ],
          "usage": "interval",
          "snippet": "const interval = setInterval(loadData, 5000); // Update every 5 seconds",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 61,
          "value": "5",
          "contexts": [
            "time"
          ],
          "usage": "interval",
          "snippet": "const interval = setInterval(loadData, 5000); // Update every 5 seconds",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 79,
          "value": "10000",
          "contexts": [],
          "usage": "name",
          "snippet": "{ name: 'Visitors', value: 10000, fill: '#3b82f6' },",
          "suggestedName": "CONSTANT_10000"
        },
        {
          "line": 80,
          "value": "2500",
          "contexts": [],
          "usage": "name",
          "snippet": "{ name: 'Signups', value: 2500, fill: '#8b5cf6' },",
          "suggestedName": "CONSTANT_2500"
        },
        {
          "line": 81,
          "value": "1200",
          "contexts": [],
          "usage": "name",
          "snippet": "{ name: 'Trial', value: 1200, fill: '#f59e0b' },",
          "suggestedName": "CONSTANT_1200"
        }
      ]
    },
    {
      "file": "src\\lib\\knowledge\\vector-store.ts",
      "count": 12,
      "topNumbers": [
        {
          "line": 88,
          "value": "1000",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "number",
          "snippet": "protected chunkDocument(content: string, chunkSize: number = 1000,",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 89,
          "value": "200",
          "contexts": [],
          "usage": "number",
          "snippet": "overlap: number = 200): string[] {",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 90,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "chunks",
          "snippet": "const chunks: string[] = []; let start = 0, while (start < content.length) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 103,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "i",
          "snippet": "for (let i = 0; i < a.length; i++) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 124,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (document.content.length > 1000) {",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\lib\\epc\\self-heal-agent.ts",
      "count": 12,
      "topNumbers": [
        {
          "line": 45,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "JSON.stringify(this.healingHistory, null, 2))",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 71,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "Math.round((automatedCount / plan.actions.length) * 100) || 0;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 71,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "Math.round((automatedCount / plan.actions.length) * 100) || 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 239,
          "value": "7",
          "contexts": [],
          "usage": "value",
          "snippet": "new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString())",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 239,
          "value": "24",
          "contexts": [],
          "usage": "value",
          "snippet": "new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString())",
          "suggestedName": "HOURS_PER_DAY"
        }
      ]
    },
    {
      "file": "src\\lib\\backend\\adapters\\nocodb.ts",
      "count": 12,
      "topNumbers": [
        {
          "line": 7,
          "value": "16",
          "contexts": [],
          "usage": "r",
          "snippet": "const r = Math.random() * 16 | 0; const v = c === 'x' ? r : (r & 0x3 | 0x8);",
          "suggestedName": "CONSTANT_16"
        },
        {
          "line": 8,
          "value": "16",
          "contexts": [],
          "usage": "value",
          "snippet": "return v.toString(16)    })",
          "suggestedName": "CONSTANT_16"
        },
        {
          "line": 84,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!users || users.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 85,
          "value": "401",
          "contexts": [],
          "usage": "value",
          "snippet": "throw new BackendError('Invalid credentials', 'AUTH_ERROR', 401)};",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        },
        {
          "line": 91,
          "value": "401",
          "contexts": [],
          "usage": "value",
          "snippet": "throw new BackendError('Invalid credentials', 'AUTH_ERROR', 401)};",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\MasterDevAgent.ts",
      "count": 12,
      "topNumbers": [
        {
          "line": 63,
          "value": "300000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "analysisInterval",
          "snippet": "analysisInterval: 300000, // 5 minutes",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 63,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "analysisInterval",
          "snippet": "analysisInterval: 300000, // 5 minutes",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 64,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "criticalIssueThreshold",
          "snippet": "criticalIssueThreshold: 3,",
          "suggestedName": "MAX_CRITICALISSUETHRESHOLD_3"
        },
        {
          "line": 155,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "setTimeout(() => resolve(), 2000);",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 428,
          "value": "75",
          "contexts": [
            "percentage"
          ],
          "usage": "completionPercentage",
          "snippet": "completionPercentage: 75,",
          "suggestedName": "PERCENTAGE_75"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\specialized\\self-healing\\strategies\\build-strategy.ts",
      "count": 12,
      "topNumbers": [
        {
          "line": 14,
          "value": "30000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 30000, // 30 seconds",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 14,
          "value": "30",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 30000, // 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 21,
          "value": "60000",
          "contexts": [
            "time",
            "limit",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 60000, // 1 minute",
          "suggestedName": "MILLISECONDS_PER_MINUTE"
        },
        {
          "line": 27,
          "value": "45000",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 45000, // 45 seconds",
          "suggestedName": "TIMEOUT_45000_MS"
        },
        {
          "line": 27,
          "value": "45",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "estimatedDuration",
          "snippet": "estimatedDuration: 45000, // 45 seconds",
          "suggestedName": "TIMEOUT_45_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\AdvisorAgent.ts",
      "count": 12,
      "topNumbers": [
        {
          "line": 51,
          "value": "0.5",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.5",
          "suggestedName": "HALF"
        },
        {
          "line": 73,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "hasProjectContext",
          "snippet": "hasProjectContext: Object.keys(projectContext).length > 0,",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 188,
          "value": "0.7",
          "contexts": [],
          "usage": "confidence",
          "snippet": "let confidence = 0.7;",
          "suggestedName": "CONSTANT_0_7"
        },
        {
          "line": 191,
          "value": "5",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (situation.constraints.length > 5) {",
          "suggestedName": "MAX_VALUE_5"
        },
        {
          "line": 192,
          "value": "0.1",
          "contexts": [],
          "usage": "value",
          "snippet": "confidence -= 0.1;",
          "suggestedName": "TEN_PERCENT"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\icons\\action-icons.tsx",
      "count": 12,
      "topNumbers": [
        {
          "line": 11,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 24,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 37,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 50,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 63,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        }
      ]
    },
    {
      "file": "src\\components\\ide\\KiroIDE.tsx",
      "count": 12,
      "topNumbers": [
        {
          "line": 206,
          "value": "0",
          "contexts": [],
          "usage": "tabIndex",
          "snippet": "role=\"button\" tabIndex={0}></div>",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 241,
          "value": "20",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "defaultSize",
          "snippet": "<ResizablePanel defaultSize={20} minSize={15} maxSize={30}>",
          "suggestedName": "MAX_DEFAULTSIZE_20"
        },
        {
          "line": 241,
          "value": "15",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "defaultSize",
          "snippet": "<ResizablePanel defaultSize={20} minSize={15} maxSize={30}>",
          "suggestedName": "MAX_DEFAULTSIZE_15"
        },
        {
          "line": 241,
          "value": "30",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "defaultSize",
          "snippet": "<ResizablePanel defaultSize={20} minSize={15} maxSize={30}>",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 250,
          "value": "60",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "defaultSize",
          "snippet": "<ResizablePanel defaultSize={60}>",
          "suggestedName": "SECONDS_PER_MINUTE"
        }
      ]
    },
    {
      "file": "src\\components\\ide\\kiro\\ProjectGenerator.ts",
      "count": 12,
      "topNumbers": [
        {
          "line": 44,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "}, null, 2)",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 326,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "return JSON.stringify(configs[projectType] || configs.web, null, 2);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 347,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "return JSON.stringify(base, null, 2);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 407,
          "value": "3000",
          "contexts": [
            "port"
          ],
          "usage": "PORT",
          "snippet": "const PORT = process.env.PORT || 3000",
          "suggestedName": "DEFAULT_PORT_3000"
        },
        {
          "line": 422,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "res.status(500).send('Something broke!')",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\components\\health\\HealthCheckDashboard.tsx",
      "count": 12,
      "topNumbers": [
        {
          "line": 45,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "_interval",
          "snippet": "const _interval = setInterval(fetchHealthData, 30000) // 30 seconds;",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 45,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "_interval",
          "snippet": "const _interval = setInterval(fetchHealthData, 30000) // 30 seconds;",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 87,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "sizes",
          "snippet": "const sizes = ['B', 'KB', 'MB', 'GB', 'TB'], if (bytes = == 0) {r}eturn '0 B'; const _i = Math.floor(Math.log(bytes) / Math.log(1024);",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 87,
          "value": "1024",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "sizes",
          "snippet": "const sizes = ['B', 'KB', 'MB', 'GB', 'TB'], if (bytes = == 0) {r}eturn '0 B'; const _i = Math.floor(Math.log(bytes) / Math.log(1024);",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 91,
          "value": "86400",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "_days",
          "snippet": "const _days = Math.floor(seconds / 86400); const _hours = Math.floor((seconds % 86400) / 3600); const _minutes = Math.floor((seconds % 3600) / 60);",
          "suggestedName": "SECONDS_PER_DAY"
        }
      ]
    },
    {
      "file": "src\\app\\api\\n8n\\webhook\\route.ts",
      "count": 12,
      "topNumbers": [
        {
          "line": 25,
          "value": "36",
          "contexts": [],
          "usage": "deploymentId",
          "snippet": "deploymentId: 'deploy_' + Math.random().toString(36).substr(2, 9)",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 25,
          "value": "2",
          "contexts": [],
          "usage": "deploymentId",
          "snippet": "deploymentId: 'deploy_' + Math.random().toString(36).substr(2, 9)",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 25,
          "value": "9",
          "contexts": [],
          "usage": "deploymentId",
          "snippet": "deploymentId: 'deploy_' + Math.random().toString(36).substr(2, 9)",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 31,
          "value": "36",
          "contexts": [],
          "usage": "testId",
          "snippet": "testId: 'test_' + Math.random().toString(36).substr(2, 9)",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 31,
          "value": "2",
          "contexts": [],
          "usage": "testId",
          "snippet": "testId: 'test_' + Math.random().toString(36).substr(2, 9)",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\lib\\automation\\n8n-client.ts",
      "count": 11,
      "topNumbers": [
        {
          "line": 203,
          "value": "250",
          "contexts": [],
          "usage": "value",
          "snippet": "position: [number, number] = [250, 300]",
          "suggestedName": "CONSTANT_250"
        },
        {
          "line": 203,
          "value": "300",
          "contexts": [],
          "usage": "value",
          "snippet": "position: [number, number] = [250, 300]",
          "suggestedName": "CONSTANT_300"
        },
        {
          "line": 217,
          "value": "450",
          "contexts": [],
          "usage": "value",
          "snippet": "position: [number, number] = [450, 300]",
          "suggestedName": "CONSTANT_450"
        },
        {
          "line": 217,
          "value": "300",
          "contexts": [],
          "usage": "value",
          "snippet": "position: [number, number] = [450, 300]",
          "suggestedName": "CONSTANT_300"
        },
        {
          "line": 220,
          "value": "4.1",
          "contexts": [],
          "usage": "typeVersion",
          "snippet": "typeVersion: 4.1,",
          "suggestedName": "CONSTANT_4_1"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\ContainerizedPulseOrchestrator.ts",
      "count": 11,
      "topNumbers": [
        {
          "line": 12,
          "value": "60000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "number",
          "snippet": "private lastScaleCheck: Date = new Date(), private scaleCheckInterval: number = 60000 // 1 minute, constructor(config: Partial<OrchestratorConfig> = {},</OrchestratorConfig>",
          "suggestedName": "MILLISECONDS_PER_MINUTE"
        },
        {
          "line": 16,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "autoScaling",
          "snippet": "autoScaling: true, minAgentsPerType: 1, maxAgentsPerType: 3;",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 16,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "autoScaling",
          "snippet": "autoScaling: true, minAgentsPerType: 1, maxAgentsPerType: 3;",
          "suggestedName": "MAX_AUTOSCALING_3"
        },
        {
          "line": 17,
          "value": "70",
          "contexts": [
            "limit"
          ],
          "usage": "scaleUpThreshold",
          "snippet": "scaleUpThreshold: 70;",
          "suggestedName": "MAX_SCALEUPTHRESHOLD_70"
        },
        {
          "line": 18,
          "value": "30",
          "contexts": [
            "limit"
          ],
          "usage": "scaleDownThreshold",
          "snippet": "scaleDownThreshold: 30;",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\components\\analytics\\advanced\\UsersTab.tsx",
      "count": 11,
      "topNumbers": [
        {
          "line": 7,
          "value": "45",
          "contexts": [
            "percentage"
          ],
          "usage": "label",
          "snippet": "{ label: 'Organic Search', percentage: 45, color: 'bg-blue-600' },",
          "suggestedName": "PERCENTAGE_45"
        },
        {
          "line": 8,
          "value": "25",
          "contexts": [
            "percentage"
          ],
          "usage": "label",
          "snippet": "{ label: 'Direct', percentage: 25, color: 'bg-green-600' },",
          "suggestedName": "PERCENTAGE_25"
        },
        {
          "line": 9,
          "value": "20",
          "contexts": [
            "percentage"
          ],
          "usage": "label",
          "snippet": "{ label: 'Social Media', percentage: 20, color: 'bg-purple-600' },",
          "suggestedName": "PERCENTAGE_20"
        },
        {
          "line": 10,
          "value": "10",
          "contexts": [
            "percentage"
          ],
          "usage": "label",
          "snippet": "{ label: 'Referral', percentage: 10, color: 'bg-orange-600' }",
          "suggestedName": "PERCENTAGE_10"
        },
        {
          "line": 14,
          "value": "2456",
          "contexts": [
            "limit"
          ],
          "usage": "name",
          "snippet": "{ name: 'Power Users', description: 'Daily active', count: 2456 },",
          "suggestedName": "MAX_NAME_2456"
        }
      ]
    },
    {
      "file": "src\\app\\quickstart\\page.tsx",
      "count": 11,
      "topNumbers": [
        {
          "line": 36,
          "value": "2000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 2000);",
          "suggestedName": "CONSTANT_2000"
        },
        {
          "line": 50,
          "value": "2",
          "contexts": [],
          "usage": "id",
          "snippet": "id: 2,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 57,
          "value": "32",
          "contexts": [],
          "usage": "NEXTAUTH_SECRET",
          "snippet": "NEXTAUTH_SECRET=$(openssl rand -base64 32)`,",
          "suggestedName": "CONSTANT_32"
        },
        {
          "line": 61,
          "value": "3",
          "contexts": [],
          "usage": "id",
          "snippet": "id: 3,",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 69,
          "value": "4",
          "contexts": [],
          "usage": "id",
          "snippet": "id: 4,",
          "suggestedName": "CONSTANT_4"
        }
      ]
    },
    {
      "file": "src\\app\\deploy\\page.tsx",
      "count": 11,
      "topNumbers": [
        {
          "line": 88,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "i",
          "snippet": "for (let i = 0; i < deploymentSteps.length; i++) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 89,
          "value": "1500",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1500));",
          "suggestedName": "TIMEOUT_1500_MS"
        },
        {
          "line": 92,
          "value": "1.5",
          "contexts": [
            "time",
            "http",
            "percentage"
          ],
          "usage": "status",
          "snippet": "if (index < i) return { ...step, status: 'completed', duration: 1.5 };",
          "suggestedName": "TIMEOUT_1_5_MS"
        },
        {
          "line": 97,
          "value": "1500",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1500));",
          "suggestedName": "TIMEOUT_1500_MS"
        },
        {
          "line": 100,
          "value": "1.5",
          "contexts": [
            "time",
            "http",
            "percentage"
          ],
          "usage": "status",
          "snippet": "if (index <= i) return { ...step, status: 'completed', duration: 1.5 };",
          "suggestedName": "TIMEOUT_1_5_MS"
        }
      ]
    },
    {
      "file": "src\\app\\api\\analytics\\route.ts",
      "count": 11,
      "topNumbers": [
        {
          "line": 16,
          "value": "1247",
          "contexts": [
            "limit"
          ],
          "usage": "data",
          "snippet": "data = { totalUsers: 1247,",
          "suggestedName": "MAX_DATA_1247"
        },
        {
          "line": 17,
          "value": "89",
          "contexts": [],
          "usage": "activeUsers",
          "snippet": "activeUsers: 89,",
          "suggestedName": "CONSTANT_89"
        },
        {
          "line": 18,
          "value": "5643",
          "contexts": [],
          "usage": "pageViews",
          "snippet": "pageViews: 5643,",
          "suggestedName": "CONSTANT_5643"
        },
        {
          "line": 19,
          "value": "23.4",
          "contexts": [
            "percentage"
          ],
          "usage": "bounceRate",
          "snippet": "bounceRate: 23.4",
          "suggestedName": "PERCENTAGE_23_4"
        },
        {
          "line": 23,
          "value": "2341",
          "contexts": [],
          "usage": "data",
          "snippet": "data = { visits: 2341,",
          "suggestedName": "CONSTANT_2341"
        }
      ]
    },
    {
      "file": "src\\services\\analytics-engine.ts",
      "count": 10,
      "topNumbers": [
        {
          "line": 208,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (this.realtimeEvents.length > 1000) {",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 209,
          "value": "-1000",
          "contexts": [],
          "usage": "realtimeEvents",
          "snippet": "this.realtimeEvents = this.realtimeEvents.slice(-1000);",
          "suggestedName": "CONSTANT_NEGATIVE_1000"
        },
        {
          "line": 213,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "fiveMinutesAgo",
          "snippet": "const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 213,
          "value": "60",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "fiveMinutesAgo",
          "snippet": "const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 213,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "fiveMinutesAgo",
          "snippet": "const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\lib\\mcp\\mcp-orchestrator.ts",
      "count": 10,
      "topNumbers": [
        {
          "line": 224,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (step.dependsOn && step.dependsOn.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 236,
          "value": "0",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "results",
          "snippet": "{ MCPOrchestrationPlanSchema.parse(plan); const results = new Map<string MCPToolResult>(, if (validated.parallel && Object.keys(plan.dependencies) {.}length === 0) {</string>",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 259,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "if (readySteps.length === 0 && executing.size === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 259,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "if (readySteps.length === 0 && executing.size === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 281,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "value",
          "snippet": "if (executing.size > 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\breadcrumb\\breadcrumb-agent.ts",
      "count": 10,
      "topNumbers": [
        {
          "line": 54,
          "value": "100",
          "contexts": [],
          "usage": "alignmentScore",
          "snippet": "alignmentScore: 100 }",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 109,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!mapping.linked_to || mapping.linked_to.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 207,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "errorCount",
          "snippet": "const errorCount = result.issues.filter((i) => i.severity === 'error').length; const warningCount = result.issues.filter((i) => i.severity === 'warning').length; let score = 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 208,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "score -= errorCount * 10;",
          "suggestedName": "MAX_VALUE_10"
        },
        {
          "line": 209,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "score -= warningCount * 3;",
          "suggestedName": "MAX_VALUE_3"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\advisor\\DecisionMatrixCreator.ts",
      "count": 10,
      "topNumbers": [
        {
          "line": 14,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": ".slice(0, 3)",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 20,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".slice(0, 2)",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 31,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "1. 4-6 weighted criteria",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 31,
          "value": "-6",
          "contexts": [],
          "usage": "value",
          "snippet": "1. 4-6 weighted criteria",
          "suggestedName": "CONSTANT_NEGATIVE_6"
        },
        {
          "line": 32,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Scores for each option (1-10)",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\components\\AIChatWithSemantic.tsx",
      "count": 10,
      "topNumbers": [
        {
          "line": 28,
          "value": "7",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "maxContextSize",
          "snippet": "enableSemanticSearch = true, maxContextSize  = 7, onContextRetrieved}: AIChatWithSemanticProps, maxContextSize  = 7, onContextRetrieved",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 28,
          "value": "7",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "maxContextSize",
          "snippet": "enableSemanticSearch = true, maxContextSize  = 7, onContextRetrieved}: AIChatWithSemanticProps, maxContextSize  = 7, onContextRetrieved",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 66,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (relevantContext.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 83,
          "value": "0",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "context",
          "snippet": "context: relevantContext.slice(0, maxContextSize, // Limit context size, conversationHistory: messages.slice(-10) // Last 10 messages",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 83,
          "value": "-10",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "context",
          "snippet": "context: relevantContext.slice(0, maxContextSize, // Limit context size, conversationHistory: messages.slice(-10) // Last 10 messages",
          "suggestedName": "MAX_CONTEXT__10"
        }
      ]
    },
    {
      "file": "src\\components\\support\\AISupportChat.tsx",
      "count": 10,
      "topNumbers": [
        {
          "line": 75,
          "value": "3",
          "contexts": [],
          "usage": "context",
          "snippet": "context: { userId, projectId, documentationResults: docResults.slice(0, 3, availableTutorials: tutorials.map((t) => ({ id: t.id title: t.title }, conversationHistory: messages.slice(-5)})};",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 75,
          "value": "-5",
          "contexts": [],
          "usage": "context",
          "snippet": "context: { userId, projectId, documentationResults: docResults.slice(0, 3, availableTutorials: tutorials.map((t) => ({ id: t.id title: t.title }, conversationHistory: messages.slice(-5)})};",
          "suggestedName": "CONSTANT_NEGATIVE_5"
        },
        {
          "line": 120,
          "value": "3",
          "contexts": [],
          "usage": "metadata",
          "snippet": "metadata: { suggestedTutorials: tutorials.slice(0, 3).map((t) => t.id, actionButtons: tutorials.slice(0, 3).map((t) => ({ label: `Start: ${t.title}`,",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 120,
          "value": "3",
          "contexts": [],
          "usage": "metadata",
          "snippet": "metadata: { suggestedTutorials: tutorials.slice(0, 3).map((t) => t.id, actionButtons: tutorials.slice(0, 3).map((t) => ({ label: `Start: ${t.title}`,",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 143,
          "value": "5",
          "contexts": [],
          "usage": "actionButtons",
          "snippet": "metadata: { suggestedDocs: sections.map((s) => s.id, actionButtons: sections.slice(0, 5).map((s) => ({ label: s.title,",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\components\\monitoring\\WebVitals.tsx",
      "count": 10,
      "topNumbers": [
        {
          "line": 30,
          "value": "0.1",
          "contexts": [],
          "usage": "CLS",
          "snippet": "CLS: { good: 0.1, poor: 0.25 },",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 30,
          "value": "0.25",
          "contexts": [],
          "usage": "CLS",
          "snippet": "CLS: { good: 0.1, poor: 0.25 },",
          "suggestedName": "QUARTER"
        },
        {
          "line": 31,
          "value": "1800",
          "contexts": [],
          "usage": "FCP",
          "snippet": "FCP: { good: 1800, poor: 3000 },",
          "suggestedName": "CONSTANT_1800"
        },
        {
          "line": 31,
          "value": "3000",
          "contexts": [],
          "usage": "FCP",
          "snippet": "FCP: { good: 1800, poor: 3000 },",
          "suggestedName": "CONSTANT_3000"
        },
        {
          "line": 32,
          "value": "2500",
          "contexts": [],
          "usage": "LCP",
          "snippet": "LCP: { good: 2500, poor: 4000 },",
          "suggestedName": "CONSTANT_2500"
        }
      ]
    },
    {
      "file": "src\\app\\settings\\api-keys\\page.tsx",
      "count": 10,
      "topNumbers": [
        {
          "line": 46,
          "value": "15234",
          "contexts": [],
          "usage": "usage",
          "snippet": "usage: 15234",
          "suggestedName": "CONSTANT_15234"
        },
        {
          "line": 58,
          "value": "3421",
          "contexts": [],
          "usage": "usage",
          "snippet": "usage: 3421",
          "suggestedName": "CONSTANT_3421"
        },
        {
          "line": 70,
          "value": "32",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "randomString",
          "snippet": "const randomString = Array.from({ length: 32 }, () =>",
          "suggestedName": "TIMEOUT_32_MS"
        },
        {
          "line": 71,
          "value": "36",
          "contexts": [],
          "usage": "value",
          "snippet": "Math.random().toString(36).charAt(2)",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 71,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "Math.random().toString(36).charAt(2)",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\app\\chat\\page.tsx",
      "count": 10,
      "topNumbers": [
        {
          "line": 72,
          "value": "1500",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 1500);",
          "suggestedName": "CONSTANT_1500"
        },
        {
          "line": 96,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "setTimeout(() => setCopiedId(null), 2000);",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 141,
          "value": "-8",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "<div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${",
          "suggestedName": "TIMEOUT__8_MS"
        },
        {
          "line": 141,
          "value": "-8",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "<div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${",
          "suggestedName": "TIMEOUT__8_MS"
        },
        {
          "line": 141,
          "value": "-0",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "<div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${",
          "suggestedName": "TIMEOUT__0_MS"
        }
      ]
    },
    {
      "file": "src\\app\\api\\webhooks\\stripe\\route.ts",
      "count": 10,
      "topNumbers": [
        {
          "line": 13,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Missing stripe signature' }, { status: 400",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 18,
          "value": "36",
          "contexts": [],
          "usage": "event",
          "snippet": "const event= { id: 'evt_' + Math.random().toString(36).substr(2, 9), type: 'payment_intent.succeeded',",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 18,
          "value": "2",
          "contexts": [],
          "usage": "event",
          "snippet": "const event= { id: 'evt_' + Math.random().toString(36).substr(2, 9), type: 'payment_intent.succeeded',",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 18,
          "value": "9",
          "contexts": [],
          "usage": "event",
          "snippet": "const event= { id: 'evt_' + Math.random().toString(36).substr(2, 9), type: 'payment_intent.succeeded',",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 20,
          "value": "36",
          "contexts": [],
          "usage": "id",
          "snippet": "id: 'pi_' + Math.random().toString(36).substr(2, 9), amount: 2000,",
          "suggestedName": "CONSTANT_36"
        }
      ]
    },
    {
      "file": "src\\packages\\causal-engine\\scorer.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 71,
          "value": "0.5",
          "contexts": [],
          "usage": "value",
          "snippet": "return 0.5; // unknown gets neutral",
          "suggestedName": "HALF"
        },
        {
          "line": 75,
          "value": "0.75",
          "contexts": [
            "limit"
          ],
          "usage": "retainScore",
          "snippet": "const retainScore = (stats.kept + 0.75 * stats.edited) / stats.total;",
          "suggestedName": "THREE_QUARTERS"
        },
        {
          "line": 79,
          "value": "0.5",
          "contexts": [],
          "usage": "finalScore",
          "snippet": "const finalScore = retainScore - deleteScore * 0.5;",
          "suggestedName": "HALF"
        },
        {
          "line": 95,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!stats || stats.total < 3) {",
          "suggestedName": "MAX_VALUE_3"
        },
        {
          "line": 98,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (stats.total < 10) {",
          "suggestedName": "MAX_VALUE_10"
        }
      ]
    },
    {
      "file": "src\\lib\\env\\EnvManager.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 169,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return { isValid: errors.filter((e)  = > e.severity === 'error').length === 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 201,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (changes.length > 0) { // Update config file",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 202,
          "value": "2",
          "contexts": [],
          "usage": "lastUpdated",
          "snippet": "this.config.lastUpdated = timestamp, fs.writeFileSync(this.configPath, JSON.stringify(this.config, null, 2, // Update history",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 228,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (history.length > 100) {",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 229,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "history.splice(0, history.length - 100)}",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\docs\\DynamicDocumentationSystem.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 149,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "### 2. Caching",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 152,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "### 3. Database Optimization",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 157,
          "value": "4",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "### 4. CDN Integration",
          "suggestedName": "PERCENTAGE_4"
        },
        {
          "line": 208,
          "value": "60000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "value",
          "snippet": "setInterval(() => this.updateSystemState(), 60000); // Update every minute",
          "suggestedName": "MILLISECONDS_PER_MINUTE"
        },
        {
          "line": 244,
          "value": "150",
          "contexts": [
            "http"
          ],
          "usage": "avgResponseTime",
          "snippet": "avgResponseTime: 150,",
          "suggestedName": "HTTP_STATUS_150"
        }
      ]
    },
    {
      "file": "src\\lib\\docs\\generators\\troubleshooting-generator.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 17,
          "value": "20",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": ".limit(20);",
          "suggestedName": "MAX_VALUE_20"
        },
        {
          "line": 63,
          "value": "1",
          "contexts": [],
          "usage": "value",
          "snippet": "content += this.formatIssue(issue, index + 1);",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 170,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Run npm install --legacy-peer-deps",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 173,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "### 2. Authentication Errors",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 177,
          "value": "2",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "2. Check Supabase configuration",
          "suggestedName": "PERCENTAGE_2"
        }
      ]
    },
    {
      "file": "src\\lib\\backend\\migration.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 36,
          "value": "100",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "options",
          "snippet": "this.sourceAdapter = createBackendAdapter(sourceConfig, this.targetAdapter = createBackendAdapter(targetConfig), this.options={ batchSize: 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 99,
          "value": "0",
          "contexts": [],
          "usage": "offset",
          "snippet": "this.progress.currentCollection = collection; this.reportProgress(); let offset = 0; let hasMore = true;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 150,
          "value": "36",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).slice(-8) + 'Aa1!'}",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 150,
          "value": "-8",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).slice(-8) + 'Aa1!'}",
          "suggestedName": "CONSTANT_NEGATIVE_8"
        },
        {
          "line": 177,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return { valid: issues.length === 0, // issues",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\ai\\AIService.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 58,
          "value": "0.7",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: this.config.temperature || 0.7,",
          "suggestedName": "CONSTANT_0_7"
        },
        {
          "line": 59,
          "value": "2000",
          "contexts": [
            "limit"
          ],
          "usage": "max_tokens",
          "snippet": "max_tokens: this.config.maxTokens || 2000",
          "suggestedName": "MAX_MAX_TOKENS_2000"
        },
        {
          "line": 82,
          "value": "2000",
          "contexts": [
            "limit"
          ],
          "usage": "max_tokens",
          "snippet": "max_tokens: this.config.maxTokens || 2000,",
          "suggestedName": "MAX_MAX_TOKENS_2000"
        },
        {
          "line": 83,
          "value": "0.7",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: this.config.temperature || 0.7",
          "suggestedName": "CONSTANT_0_7"
        },
        {
          "line": 125,
          "value": "4",
          "contexts": [
            "limit"
          ],
          "usage": "usage",
          "snippet": "usage: { promptTokens: prompt.length / 4, // Rough estimate, completionTokens: message.length / 4,",
          "suggestedName": "MAX_USAGE_4"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\EnhancedAgentOrchestrator.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 50,
          "value": "5",
          "contexts": [
            "limit"
          ],
          "usage": "config",
          "snippet": "this.config={ maxConcurrentTasks: 5;",
          "suggestedName": "MAX_CONFIG_5"
        },
        {
          "line": 51,
          "value": "300000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "taskTimeout",
          "snippet": "taskTimeout: 300000, // 5 minutes",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 51,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "taskTimeout",
          "snippet": "taskTimeout: 300000, // 5 minutes",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 54,
          "value": "80",
          "contexts": [
            "limit"
          ],
          "usage": "resourceLimits",
          "snippet": "resourceLimits: { maxCpu: 80;",
          "suggestedName": "MAX_RESOURCELIMITS_80"
        },
        {
          "line": 55,
          "value": "80",
          "contexts": [
            "limit"
          ],
          "usage": "maxMemory",
          "snippet": "maxMemory: 80",
          "suggestedName": "MAX_MAXMEMORY_80"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\runners\\architect-agent.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 27,
          "value": "5000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 5000);",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 44,
          "value": "3000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 3000);",
          "suggestedName": "TIMEOUT_3000_MS"
        },
        {
          "line": 58,
          "value": "4000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 4000);",
          "suggestedName": "TIMEOUT_4000_MS"
        },
        {
          "line": 62,
          "value": "2",
          "contexts": [
            "limit"
          ],
          "usage": "minInstances",
          "snippet": "minInstances: 2;",
          "suggestedName": "MAX_MININSTANCES_2"
        },
        {
          "line": 63,
          "value": "20",
          "contexts": [
            "limit"
          ],
          "usage": "maxInstances",
          "snippet": "maxInstances: 20;",
          "suggestedName": "MAX_MAXINSTANCES_20"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\advisor\\ActionPlanner.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 26,
          "value": "12",
          "contexts": [],
          "usage": "value",
          "snippet": ".filter((r) => r.riskScore >= 12)",
          "suggestedName": "CONSTANT_12"
        },
        {
          "line": 32,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Short-term actions (1-4 weeks)",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 32,
          "value": "-4",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Short-term actions (1-4 weeks)",
          "suggestedName": "CONSTANT_NEGATIVE_4"
        },
        {
          "line": 33,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Long-term actions (1-3 months)",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 33,
          "value": "-3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Long-term actions (1-3 months)",
          "suggestedName": "CONSTANT_NEGATIVE_3"
        }
      ]
    },
    {
      "file": "src\\components\\AIChat.tsx",
      "count": 9,
      "topNumbers": [
        {
          "line": 58,
          "value": "0",
          "contexts": [],
          "usage": "value",
          "snippet": "const [currentQuestionIndex, setCurrentQuestionIndex]  = useState(0);",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 85,
          "value": "1500",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 1500)",
          "suggestedName": "CONSTANT_1500"
        },
        {
          "line": 91,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "askNextQuestion()}, 1000)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 129,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (currentQuestionIndex < chatQuestions.length - 1) {",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 130,
          "value": "1",
          "contexts": [],
          "usage": "prev",
          "snippet": "setCurrentQuestionIndex(prev => prev + 1)} else {",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\navigation.tsx",
      "count": 9,
      "topNumbers": [
        {
          "line": 23,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "maxItems",
          "snippet": "maxItems = 5}: BreadcrumbProps) { const displayItems =, items.length > maxItems, ? [",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 26,
          "value": "2",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "value",
          "snippet": "...items.slice(-(maxItems - 2))",
          "suggestedName": "TIMEOUT_2_MS"
        },
        {
          "line": 33,
          "value": "0",
          "contexts": [],
          "usage": "value",
          "snippet": "{index > 0 && (",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 77,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "isLast",
          "snippet": "const isLast = index === segments.length - 1;",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 148,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "hasChildren",
          "snippet": "const hasChildren  = item.children && item.children.length > 0; const isDropdownOpen = openDropdowns.has(item.label); const active  = isActive(item.href);",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\marketplace\\TemplateMarketplace.tsx",
      "count": 9,
      "topNumbers": [
        {
          "line": 41,
          "value": "2500",
          "contexts": [],
          "usage": "downloads",
          "snippet": "downloads: 2500",
          "suggestedName": "CONSTANT_2500"
        },
        {
          "line": 42,
          "value": "4.9",
          "contexts": [],
          "usage": "rating",
          "snippet": "rating: 4.9,",
          "suggestedName": "CONSTANT_4_9"
        },
        {
          "line": 43,
          "value": "49",
          "contexts": [],
          "usage": "price",
          "snippet": "price: 49",
          "suggestedName": "CONSTANT_49"
        },
        {
          "line": 52,
          "value": "1800",
          "contexts": [],
          "usage": "downloads",
          "snippet": "downloads: 1800",
          "suggestedName": "CONSTANT_1800"
        },
        {
          "line": 53,
          "value": "4.7",
          "contexts": [],
          "usage": "rating",
          "snippet": "rating: 4.7,",
          "suggestedName": "CONSTANT_4_7"
        }
      ]
    },
    {
      "file": "src\\components\\collaboration\\CollaborationWorkspace.tsx",
      "count": 9,
      "topNumbers": [
        {
          "line": 111,
          "value": "49",
          "contexts": [],
          "usage": "prev",
          "snippet": "setChanges(prev => [data.change, ...prev.slice(0, 49)]) // Keep last 50 changes    })",
          "suggestedName": "CONSTANT_49"
        },
        {
          "line": 111,
          "value": "50",
          "contexts": [],
          "usage": "prev",
          "snippet": "setChanges(prev => [data.change, ...prev.slice(0, 49)]) // Keep last 50 changes    })",
          "suggestedName": "CONSTANT_50"
        },
        {
          "line": 124,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "settings",
          "snippet": "settings: { allowGuests: true, maxParticipants: 10, permissions: { canEdit: true, canComment: true, canInvite: true, canExport: true",
          "suggestedName": "MAX_SETTINGS_10"
        },
        {
          "line": 136,
          "value": "100",
          "contexts": [],
          "usage": "value",
          "snippet": "if (Date.now() {%} 100 === 0) {",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 191,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{participants.length} participant{participants.length !== 1 ? 's' : ''}\r/>",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\analytics\\AnalyticsExport.tsx",
      "count": 9,
      "topNumbers": [
        {
          "line": 100,
          "value": "7",
          "contexts": [],
          "usage": "value",
          "snippet": "startDate.setDate(endDate.getDate() - 7);",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 103,
          "value": "30",
          "contexts": [],
          "usage": "value",
          "snippet": "startDate.setDate(endDate.getDate() - 30);",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 106,
          "value": "90",
          "contexts": [],
          "usage": "value",
          "snippet": "startDate.setDate(endDate.getDate() - 90);",
          "suggestedName": "CONSTANT_90"
        },
        {
          "line": 154,
          "value": "2",
          "contexts": [],
          "usage": "json",
          "snippet": "const json = JSON.stringify(exportData, null, 2);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 169,
          "value": "333",
          "contexts": [],
          "usage": "color",
          "snippet": "h1 { color: #333; }",
          "suggestedName": "CONSTANT_333"
        }
      ]
    },
    {
      "file": "src\\app\\api\\tutorials\\progress\\route.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 17,
          "value": "36",
          "contexts": [],
          "usage": "progress",
          "snippet": "const progress= { id: 'progress_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 17,
          "value": "2",
          "contexts": [],
          "usage": "progress",
          "snippet": "const progress= { id: 'progress_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 17,
          "value": "9",
          "contexts": [],
          "usage": "progress",
          "snippet": "const progress= { id: 'progress_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 18,
          "value": "75",
          "contexts": [
            "percentage"
          ],
          "usage": "timestamp",
          "snippet": "timestamp: new Date().toISOString(), progressPercentage: 75 }",
          "suggestedName": "PERCENTAGE_75"
        },
        {
          "line": 23,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Invalid input', details: error.errors }, { status: 400",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\app\\api\\backend-example\\route.ts",
      "count": 9,
      "topNumbers": [
        {
          "line": 6,
          "value": "200",
          "contexts": [
            "limit"
          ],
          "usage": "name",
          "snippet": "name: z.string().min(1).max(200),",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 7,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "description",
          "snippet": "description: z.string().max(1000),",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 18,
          "value": "36",
          "contexts": [],
          "usage": "project",
          "snippet": "const project = { id: 'proj_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 18,
          "value": "2",
          "contexts": [],
          "usage": "project",
          "snippet": "const project = { id: 'proj_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 18,
          "value": "9",
          "contexts": [],
          "usage": "project",
          "snippet": "const project = { id: 'proj_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_9"
        }
      ]
    },
    {
      "file": "src\\lib\\api-tracking.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 97,
          "value": "7",
          "contexts": [],
          "usage": "value",
          "snippet": "startTime.setDate(now.getDate() - 7);",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 100,
          "value": "30",
          "contexts": [],
          "usage": "value",
          "snippet": "startTime.setDate(now.getDate() - 30);",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 122,
          "value": "400",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "_errorCount",
          "snippet": "const _errorCount  = metrics.filter((m) => m.status_code >= 400).length;",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 124,
          "value": "100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "_errorRate",
          "snippet": "const _errorRate = (errorCount / totalCalls) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 144,
          "value": "10",
          "contexts": [],
          "usage": "value",
          "snippet": ".slice(0, 10);",
          "suggestedName": "CONSTANT_10"
        }
      ]
    },
    {
      "file": "src\\lib\\backend\\adapters\\strapi.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 91,
          "value": "404",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "if ((error as any) {.}statusCode === 404) {",
          "suggestedName": "HTTP_STATUS_NOT_FOUND"
        },
        {
          "line": 109,
          "value": "25",
          "contexts": [
            "limit"
          ],
          "usage": "page",
          "snippet": "const page  = options?.offset ? Math.floor(options.offset / (options?.limit || 25)) + 1 : 1;",
          "suggestedName": "MAX_PAGE_25"
        },
        {
          "line": 111,
          "value": "25",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "pageSize",
          "snippet": "const pageSize = options?.limit || 25;",
          "suggestedName": "MAX_PAGESIZE_25"
        },
        {
          "line": 146,
          "value": "404",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "if ((error as any) {.}statusCode === 404) {",
          "suggestedName": "HTTP_STATUS_NOT_FOUND"
        },
        {
          "line": 168,
          "value": "25",
          "contexts": [
            "limit"
          ],
          "usage": "page",
          "snippet": "const page  = options?.offset ? Math.floor(options.offset / (options?.limit || 25)) + 1 : 1;",
          "suggestedName": "MAX_PAGE_25"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\communication\\StatisticsManager.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 10,
          "value": "10000",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (this.messageHistory.length > 10000) {",
          "suggestedName": "MAX_VALUE_10000"
        },
        {
          "line": 11,
          "value": "-5000",
          "contexts": [],
          "usage": "messageHistory",
          "snippet": "this.messageHistory = this.messageHistory.slice(-5000);",
          "suggestedName": "CONSTANT_NEGATIVE_5000"
        },
        {
          "line": 38,
          "value": "0",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "if (requestResponsePairs.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 45,
          "value": "0",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "if (responseMessages.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 47,
          "value": "100",
          "contexts": [
            "limit",
            "http",
            "percentage"
          ],
          "usage": "success_rate",
          "snippet": "stats.success_rate = (successfulResponses / responseMessages.length) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\advisor\\RecommendationGenerator.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 13,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "${JSON.stringify(situation, null, 2)}",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 20,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "Create 4-6 actionable recommendations that:",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 20,
          "value": "-6",
          "contexts": [],
          "usage": "value",
          "snippet": "Create 4-6 actionable recommendations that:",
          "suggestedName": "CONSTANT_NEGATIVE_6"
        },
        {
          "line": 22,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Leverage opportunities",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 23,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Consider stakeholder interests",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\lib\\admin\\queries\\user-queries.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 19,
          "value": "20",
          "contexts": [
            "limit"
          ],
          "usage": "limit",
          "snippet": "limit = 20",
          "suggestedName": "MAX_LIMIT_20"
        },
        {
          "line": 63,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "total",
          "snippet": "total: count || 0,",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 66,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "totalPages",
          "snippet": "totalPages: Math.ceil((count || 0) / limit)",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 192,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return count || 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 201,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return count || 0;",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\button-premium.tsx",
      "count": 8,
      "topNumbers": [
        {
          "line": 36,
          "value": "600",
          "contexts": [],
          "usage": "value",
          "snippet": "setRipples(prev => prev.filter((r) => r.id !== newRipple.id))}, 600);",
          "suggestedName": "CONSTANT_600"
        },
        {
          "line": 47,
          "value": "1.05",
          "contexts": [],
          "usage": "_motionProps",
          "snippet": "const _motionProps  = asChild ? {} : { whileHover: { scale: variant === 'floating' ? 1.05 : 1.02 },",
          "suggestedName": "CONSTANT_1_05"
        },
        {
          "line": 47,
          "value": "1.02",
          "contexts": [],
          "usage": "_motionProps",
          "snippet": "const _motionProps  = asChild ? {} : { whileHover: { scale: variant === 'floating' ? 1.05 : 1.02 },",
          "suggestedName": "CONSTANT_1_02"
        },
        {
          "line": 48,
          "value": "0.98",
          "contexts": [],
          "usage": "whileTap",
          "snippet": "whileTap: { scale: 0.98 }",
          "suggestedName": "CONSTANT_0_98"
        },
        {
          "line": 71,
          "value": "10",
          "contexts": [],
          "usage": "style",
          "snippet": "const style={{ left: ripple.x - 10,",
          "suggestedName": "CONSTANT_10"
        }
      ]
    },
    {
      "file": "src\\components\\marketplace\\PluginManager.tsx",
      "count": 8,
      "topNumbers": [
        {
          "line": 83,
          "value": "3600",
          "contexts": [
            "time"
          ],
          "usage": "sessionTimeout",
          "snippet": "sessionTimeout: 3600",
          "suggestedName": "SECONDS_PER_HOUR"
        },
        {
          "line": 139,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2000));",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 157,
          "value": "1500",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1500));",
          "suggestedName": "TIMEOUT_1500_MS"
        },
        {
          "line": 228,
          "value": "-12",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "<div className={`w-12 h-12 rounded-lg flex items-center justify-center ${",
          "suggestedName": "TIMEOUT__12_MS"
        },
        {
          "line": 228,
          "value": "-12",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "<div className={`w-12 h-12 rounded-lg flex items-center justify-center ${",
          "suggestedName": "TIMEOUT__12_MS"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\SafeModeProcessor.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 21,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2000));",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 38,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (issues.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 103,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "i",
          "snippet": "for (let i = 0; i < batch.length; i++) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 109,
          "value": "100",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "value",
          "snippet": "setTimeout(resolve, Math.min(issue.estimatedTime * 100, 3000))",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 109,
          "value": "3000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "value",
          "snippet": "setTimeout(resolve, Math.min(issue.estimatedTime * 100, 3000))",
          "suggestedName": "TIMEOUT_3000_MS"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\mock-data.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 12,
          "value": "60",
          "contexts": [],
          "usage": "estimatedTime",
          "snippet": "estimatedTime: 60",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 22,
          "value": "120",
          "contexts": [],
          "usage": "estimatedTime",
          "snippet": "estimatedTime: 120",
          "suggestedName": "CONSTANT_120"
        },
        {
          "line": 31,
          "value": "15",
          "contexts": [],
          "usage": "line",
          "snippet": "line: 15,",
          "suggestedName": "CONSTANT_15"
        },
        {
          "line": 33,
          "value": "180",
          "contexts": [],
          "usage": "estimatedTime",
          "snippet": "estimatedTime: 180",
          "suggestedName": "CONSTANT_180"
        },
        {
          "line": 42,
          "value": "42",
          "contexts": [],
          "usage": "line",
          "snippet": "line: 42,",
          "suggestedName": "CONSTANT_42"
        }
      ]
    },
    {
      "file": "src\\app\\marketplace\\components\\MarketplaceItem.tsx",
      "count": 8,
      "topNumbers": [
        {
          "line": 35,
          "value": "-12",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "<div className={`w-12 h-12 rounded-lg flex items-center justify-center ${",
          "suggestedName": "TIMEOUT__12_MS"
        },
        {
          "line": 35,
          "value": "-12",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "<div className={`w-12 h-12 rounded-lg flex items-center justify-center ${",
          "suggestedName": "TIMEOUT__12_MS"
        },
        {
          "line": 40,
          "value": "-6",
          "contexts": [],
          "usage": "className",
          "snippet": "<item.icon className={`h-6 w-6 ${",
          "suggestedName": "CONSTANT_NEGATIVE_6"
        },
        {
          "line": 40,
          "value": "-6",
          "contexts": [],
          "usage": "className",
          "snippet": "<item.icon className={`h-6 w-6 ${",
          "suggestedName": "CONSTANT_NEGATIVE_6"
        },
        {
          "line": 65,
          "value": "0",
          "contexts": [],
          "usage": "value",
          "snippet": "{item.features.slice(0, 3).map((feature, index) => (",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\app\\api\\visual\\upload\\route.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 16,
          "value": "10",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "MAX_FILE_SIZE",
          "snippet": "const MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB",
          "suggestedName": "MAX_MAX_FILE_SIZE_10"
        },
        {
          "line": 16,
          "value": "1024",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "MAX_FILE_SIZE",
          "snippet": "const MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 16,
          "value": "1024",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "MAX_FILE_SIZE",
          "snippet": "const MAX_FILE_SIZE = 10 * 1024 * 1024; // 10MB",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 26,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 400 }",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 38,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 400 }",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\app\\api\\validated-chat\\route.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 26,
          "value": "36",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "response",
          "snippet": "const response= { id: 'msg_' + Math.random().toString(36).substr(2, 9), message: `You said: \"${validatedRequest.message}\". Here's my response...`,",
          "suggestedName": "TIMEOUT_36_MS"
        },
        {
          "line": 26,
          "value": "2",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "response",
          "snippet": "const response= { id: 'msg_' + Math.random().toString(36).substr(2, 9), message: `You said: \"${validatedRequest.message}\". Here's my response...`,",
          "suggestedName": "TIMEOUT_2_MS"
        },
        {
          "line": 26,
          "value": "9",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "response",
          "snippet": "const response= { id: 'msg_' + Math.random().toString(36).substr(2, 9), message: `You said: \"${validatedRequest.message}\". Here's my response...`,",
          "suggestedName": "TIMEOUT_9_MS"
        },
        {
          "line": 27,
          "value": "36",
          "contexts": [
            "http"
          ],
          "usage": "conversationId",
          "snippet": "conversationId: validatedRequest.conversationId || 'conv_' + Math.random().toString(36).substr(2, 9), timestamp: new Date().toISOString()",
          "suggestedName": "HTTP_STATUS_36"
        },
        {
          "line": 27,
          "value": "2",
          "contexts": [
            "http"
          ],
          "usage": "conversationId",
          "snippet": "conversationId: validatedRequest.conversationId || 'conv_' + Math.random().toString(36).substr(2, 9), timestamp: new Date().toISOString()",
          "suggestedName": "HTTP_STATUS_2"
        }
      ]
    },
    {
      "file": "src\\app\\api\\support\\chat\\route.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 22,
          "value": "36",
          "contexts": [],
          "usage": "chatSessionId",
          "snippet": "const chatSessionId = sessionId || 'session_' + Math.random().toString(36).substr(2, 9);",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 22,
          "value": "2",
          "contexts": [],
          "usage": "chatSessionId",
          "snippet": "const chatSessionId = sessionId || 'session_' + Math.random().toString(36).substr(2, 9);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 22,
          "value": "9",
          "contexts": [],
          "usage": "chatSessionId",
          "snippet": "const chatSessionId = sessionId || 'session_' + Math.random().toString(36).substr(2, 9);",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 66,
          "value": "36",
          "contexts": [
            "time"
          ],
          "usage": "id",
          "snippet": "id: 'msg_' + Math.random().toString(36).substr(2, 9),",
          "suggestedName": "TIMEOUT_36_MS"
        },
        {
          "line": 66,
          "value": "2",
          "contexts": [
            "time"
          ],
          "usage": "id",
          "snippet": "id: 'msg_' + Math.random().toString(36).substr(2, 9),",
          "suggestedName": "TIMEOUT_2_MS"
        }
      ]
    },
    {
      "file": "src\\app\\api\\collaboration\\rooms\\route.ts",
      "count": 8,
      "topNumbers": [
        {
          "line": 15,
          "value": "36",
          "contexts": [],
          "usage": "roomId",
          "snippet": "const roomId = 'room_' + Math.random().toString(36).substr(2, 9);",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 15,
          "value": "2",
          "contexts": [],
          "usage": "roomId",
          "snippet": "const roomId = 'room_' + Math.random().toString(36).substr(2, 9);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 15,
          "value": "9",
          "contexts": [],
          "usage": "roomId",
          "snippet": "const roomId = 'room_' + Math.random().toString(36).substr(2, 9);",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 22,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "maxParticipants",
          "snippet": "maxParticipants: maxParticipants || 10,",
          "suggestedName": "MAX_MAXPARTICIPANTS_10"
        },
        {
          "line": 35,
          "value": "201",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 201",
          "suggestedName": "HTTP_STATUS_CREATED"
        }
      ]
    },
    {
      "file": "src\\services\\error-logger.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 37,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "maxRetries",
          "snippet": "maxRetries: 3,",
          "suggestedName": "MAX_MAXRETRIES_3"
        },
        {
          "line": 38,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "retryDelay",
          "snippet": "retryDelay: 1000,",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 39,
          "value": "10",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "batchSize",
          "snippet": "batchSize: 10,",
          "suggestedName": "MAX_BATCHSIZE_10"
        },
        {
          "line": 40,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "flushInterval",
          "snippet": "flushInterval: 30000, // 30 seconds",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 40,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "flushInterval",
          "snippet": "flushInterval: 30000, // 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\packages\\causal-engine\\assistant-utils.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 29,
          "value": "0.7",
          "contexts": [],
          "usage": "value",
          "snippet": "suggested: score >= 0.7 && confidence !== 'low',",
          "suggestedName": "CONSTANT_0_7"
        },
        {
          "line": 30,
          "value": "0.4",
          "contexts": [],
          "usage": "deprioritize",
          "snippet": "deprioritize: score < 0.4 && confidence !== 'low' }    })",
          "suggestedName": "CONSTANT_0_4"
        },
        {
          "line": 38,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "limit: number = 3",
          "suggestedName": "MAX_NUMBER_3"
        },
        {
          "line": 58,
          "value": "3",
          "contexts": [],
          "usage": "_logs",
          "snippet": "const _logs = logger.getLogs(); const scorer = new CausalScorer(logs); const topComponents  = scorer.getTopComponents(3);",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 60,
          "value": "0.3",
          "contexts": [
            "limit"
          ],
          "usage": "lowComponents",
          "snippet": "const lowComponents = scorer.getLowPerformingComponents(0.3);",
          "suggestedName": "MAX_LOWCOMPONENTS_0_3"
        }
      ]
    },
    {
      "file": "src\\lib\\tutorials\\InteractiveTutorialSystem.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 67,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (missingPrereqs.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 170,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!currentStep.hints || currentStep.hints.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 175,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "hintIndex",
          "snippet": "const hintIndex = Math.min(progress.hintsUsed - 1, currentStep.hints.length - 1);",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 175,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "hintIndex",
          "snippet": "const hintIndex = Math.min(progress.hintsUsed - 1, currentStep.hints.length - 1);",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 211,
          "value": "10",
          "contexts": [],
          "usage": "baseScore",
          "snippet": "const baseScore = 10;",
          "suggestedName": "CONSTANT_10"
        }
      ]
    },
    {
      "file": "src\\lib\\collaboration\\RoomManager.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 25,
          "value": "0",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "value",
          "snippet": "if (rooms.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 44,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "maxParticipants",
          "snippet": "maxParticipants: 10,",
          "suggestedName": "MAX_MAXPARTICIPANTS_10"
        },
        {
          "line": 110,
          "value": "0",
          "contexts": [],
          "usage": "value",
          "snippet": "if (existingIndex >= 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 151,
          "value": "0",
          "contexts": [],
          "usage": "value",
          "snippet": "if (participantIndex >= 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 196,
          "value": "36",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2) + Date.now().toString(36);",
          "suggestedName": "CONSTANT_36"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\advisor\\StrategyDeveloper.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 20,
          "value": "2",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "Create 2-3 comprehensive strategies that:",
          "suggestedName": "PERCENTAGE_2"
        },
        {
          "line": 20,
          "value": "-3",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "Create 2-3 comprehensive strategies that:",
          "suggestedName": "PERCENTAGE__3"
        },
        {
          "line": 22,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Include phased approaches",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 23,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Define success criteria",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 24,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "4. Specify KPIs",
          "suggestedName": "CONSTANT_4"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\advisor\\SituationAnalyzer.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 17,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "${JSON.stringify(projectContext, null, 2)}",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 30,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Key context points",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 31,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Stakeholder analysis",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 32,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "4. Constraints",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 33,
          "value": "5",
          "contexts": [],
          "usage": "value",
          "snippet": "5. Opportunities",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\components\\SemanticSearchDemo.tsx",
      "count": 7,
      "topNumbers": [
        {
          "line": 35,
          "value": "10",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: 10",
          "suggestedName": "MAX_SIZE_10"
        },
        {
          "line": 109,
          "value": "100",
          "contexts": [],
          "usage": "value",
          "snippet": "<Badge>{(result.score * 100).toFixed(1)}%/>",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 113,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "className",
          "snippet": "{result.metadata && Object.keys(result.metadata).length > 0  && (div className=\"mt-2 flex gap-2 flex-wrap\">",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 124,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "className",
          "snippet": "{context7.length > 0  && (div className=\"mt-6\">",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 135,
          "value": "1",
          "contexts": [],
          "usage": "className",
          "snippet": "<Badge className=\"mb-1\">Chunk {index + 1}/>",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\DataSourceManager.tsx",
      "count": 7,
      "topNumbers": [
        {
          "line": 51,
          "value": "20",
          "contexts": [
            "percentage"
          ],
          "usage": "_generateMockData",
          "snippet": "const _generateMockData  = (): void => { const _schemas = ['users', 'products', 'orders', 'analytics'], const data = mockGenerator.generateRelatedData(schemas, 20); setGeneratedData(data);",
          "suggestedName": "PERCENTAGE_20"
        },
        {
          "line": 80,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1000))",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 199,
          "value": "5",
          "contexts": [],
          "usage": "value",
          "snippet": "{data[0] && Object.keys(data[0]).slice(0, 5).map((key) => (\\n    </tr>",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 205,
          "value": "5",
          "contexts": [],
          "usage": "value",
          "snippet": "{data.slice(0, 5).map((record, i) => (\\n    <tr key={i} className=\"border-t\">",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 206,
          "value": "5",
          "contexts": [],
          "usage": "className",
          "snippet": "{Object.values(record).slice(0, 5).map((value, j) => (\\n    <td key={j} className=\"p-3\">",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\components\\ContainerMonitor.tsx",
      "count": 7,
      "topNumbers": [
        {
          "line": 27,
          "value": "45",
          "contexts": [],
          "usage": "cpu",
          "snippet": "cpu: 45,",
          "suggestedName": "CONSTANT_45"
        },
        {
          "line": 28,
          "value": "512",
          "contexts": [],
          "usage": "memory",
          "snippet": "memory: 512,",
          "suggestedName": "CONSTANT_512"
        },
        {
          "line": 34,
          "value": "23",
          "contexts": [],
          "usage": "cpu",
          "snippet": "cpu: 23,",
          "suggestedName": "CONSTANT_23"
        },
        {
          "line": 35,
          "value": "1024",
          "contexts": [],
          "usage": "memory",
          "snippet": "memory: 1024,",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 40,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 1000)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\loading.tsx",
      "count": 7,
      "topNumbers": [
        {
          "line": 53,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "{[0, 1, 2].map((i) => (\\n    </div>",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 140,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "{[0, 1, 2, 3, 4].map((i) => (\\n    </div>",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 140,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "{[0, 1, 2, 3, 4].map((i) => (\\n    </div>",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 140,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "{[0, 1, 2, 3, 4].map((i) => (\\n    </div>",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 172,
          "value": "3",
          "contexts": [],
          "usage": "lines",
          "snippet": "<Skeleton variant=\"text\" lines={3/>",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\components\\mcp\\MCPOrchestrator.tsx",
      "count": 7,
      "topNumbers": [
        {
          "line": 114,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (planSteps.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 261,
          "value": "3",
          "contexts": [],
          "usage": "rows",
          "snippet": "=\"Enter JSON object\"rows={3/>",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 305,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "className",
          "snippet": "{planSteps.length > 0  && (div className=\"space-y-2\">",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 310,
          "value": "1",
          "contexts": [],
          "usage": "value",
          "snippet": "<Badge>{index + 1}/>",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 330,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "disabled",
          "snippet": "const disabled={loading || planSteps.length === 0};",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\docs\\DocumentationViewer.tsx",
      "count": 7,
      "topNumbers": [
        {
          "line": 44,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "sections",
          "snippet": "const sections = documentationSystem.getAllSections(, if (sections.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 127,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": ") : searchResults.length > 0 ? (",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 161,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "sections",
          "snippet": "const sections = documentationSystem.getSectionsByCategory(category.id, if (sections.length === 0) {r}eturn null, return (",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 204,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{userProgress.sectionsCompleted?.length || 0} / {documentationSystem.getAllSections().length}</span>",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 239,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "<TabsTrigger value=\"content\">Content {selectedSection.codeExamples.length > 0  && (</TabsTrigger>",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\agents\\AgentMonitoringDashboard.tsx",
      "count": 7,
      "topNumbers": [
        {
          "line": 73,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "interval",
          "snippet": "interval = setInterval(updateMetrics, 2000)",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 92,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "setTimeout(() => setIsRefreshing(false, 1000)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 160,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{systemMetrics?.activeAgents || 0} / {agents.length}",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 171,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "className",
          "snippet": "<div className=\"text-2xl font-bold\">{systemMetrics?.queueLength || 0}</div>",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 183,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "? Math.round((systemMetrics.completedTasks / systemMetrics.totalTasks) * 100)",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\EnhancedAdminPanel.tsx",
      "count": 7,
      "topNumbers": [
        {
          "line": 45,
          "value": "45",
          "contexts": [],
          "usage": "className",
          "snippet": "<span className=\"font-medium\">45%</span>",
          "suggestedName": "CONSTANT_45"
        },
        {
          "line": 48,
          "value": "3",
          "contexts": [],
          "usage": "className",
          "snippet": "<span className=\"font-medium\">3</span>",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 66,
          "value": "3",
          "contexts": [],
          "usage": "className",
          "snippet": "<span className=\"font-medium\">3 issues</span>",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 82,
          "value": "92",
          "contexts": [],
          "usage": "className",
          "snippet": "<span className=\"font-medium\">92/100</span>",
          "suggestedName": "CONSTANT_92"
        },
        {
          "line": 82,
          "value": "100",
          "contexts": [],
          "usage": "className",
          "snippet": "<span className=\"font-medium\">92/100</span>",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\app\\api\\templates\\route.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 24,
          "value": "1250",
          "contexts": [],
          "usage": "downloads",
          "snippet": "downloads: 1250,",
          "suggestedName": "CONSTANT_1250"
        },
        {
          "line": 25,
          "value": "4.8",
          "contexts": [],
          "usage": "rating",
          "snippet": "rating: 4.8",
          "suggestedName": "CONSTANT_4_8"
        },
        {
          "line": 34,
          "value": "890",
          "contexts": [],
          "usage": "downloads",
          "snippet": "downloads: 890,",
          "suggestedName": "CONSTANT_890"
        },
        {
          "line": 35,
          "value": "4.6",
          "contexts": [],
          "usage": "rating",
          "snippet": "rating: 4.6",
          "suggestedName": "CONSTANT_4_6"
        },
        {
          "line": 44,
          "value": "567",
          "contexts": [],
          "usage": "downloads",
          "snippet": "downloads: 567,",
          "suggestedName": "CONSTANT_567"
        }
      ]
    },
    {
      "file": "src\\app\\api\\n8n\\workflows\\route.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 20,
          "value": "36",
          "contexts": [],
          "usage": "workflow",
          "snippet": "const workflow = { id: 'workflow_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 20,
          "value": "2",
          "contexts": [],
          "usage": "workflow",
          "snippet": "const workflow = { id: 'workflow_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 20,
          "value": "9",
          "contexts": [],
          "usage": "workflow",
          "snippet": "const workflow = { id: 'workflow_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 25,
          "value": "201",
          "contexts": [
            "http"
          ],
          "usage": "success",
          "snippet": "return NextResponse.json({ success: true, workflow }, { status: 201",
          "suggestedName": "HTTP_STATUS_CREATED"
        },
        {
          "line": 30,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Invalid input', details: error.errors }, { status: 400",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\app\\api\\n8n\\execute\\route.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 16,
          "value": "36",
          "contexts": [],
          "usage": "execution",
          "snippet": "const execution = { id: 'exec_' + Math.random().toString(36).substr(2, 9), workflowId: validatedData.workflowId,",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 16,
          "value": "2",
          "contexts": [],
          "usage": "execution",
          "snippet": "const execution = { id: 'exec_' + Math.random().toString(36).substr(2, 9), workflowId: validatedData.workflowId,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 16,
          "value": "9",
          "contexts": [],
          "usage": "execution",
          "snippet": "const execution = { id: 'exec_' + Math.random().toString(36).substr(2, 9), workflowId: validatedData.workflowId,",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 21,
          "value": "201",
          "contexts": [
            "http"
          ],
          "usage": "success",
          "snippet": "return NextResponse.json({ success: true, execution }, { status: 201",
          "suggestedName": "HTTP_STATUS_CREATED"
        },
        {
          "line": 26,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Invalid input', details: error.errors }, { status: 400",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\app\\api\\feedback\\route.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 15,
          "value": "36",
          "contexts": [],
          "usage": "feedback",
          "snippet": "const feedback = { id: 'feedback_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 15,
          "value": "2",
          "contexts": [],
          "usage": "feedback",
          "snippet": "const feedback = { id: 'feedback_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 15,
          "value": "9",
          "contexts": [],
          "usage": "feedback",
          "snippet": "const feedback = { id: 'feedback_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 23,
          "value": "201",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "}, { status: 201",
          "suggestedName": "HTTP_STATUS_CREATED"
        },
        {
          "line": 28,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Invalid input', details: error.errors }, { status: 400",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\app\\api\\errors\\route.ts",
      "count": 7,
      "topNumbers": [
        {
          "line": 17,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!Array.isArray(errors) || errors.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 20,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 400 }",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 52,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (criticalErrors.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 65,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 500 }",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 134,
          "value": "401",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 401 }",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        }
      ]
    },
    {
      "file": "src\\packages\\causal-engine\\explorer-ui.tsx",
      "count": 6,
      "topNumbers": [
        {
          "line": 25,
          "value": "85",
          "contexts": [],
          "usage": "impact",
          "snippet": "impact: 85;",
          "suggestedName": "CONSTANT_85"
        },
        {
          "line": 26,
          "value": "92",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 92;",
          "suggestedName": "CONSTANT_92"
        },
        {
          "line": 32,
          "value": "78",
          "contexts": [],
          "usage": "impact",
          "snippet": "impact: 78;",
          "suggestedName": "CONSTANT_78"
        },
        {
          "line": 33,
          "value": "87",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 87;",
          "suggestedName": "CONSTANT_87"
        },
        {
          "line": 38,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "setTopComponents(mockInsights.slice(0, 3));",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\lib\\email.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 72,
          "value": "1.6",
          "contexts": [
            "dimension"
          ],
          "usage": "family",
          "snippet": "body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6, color: #333 }",
          "suggestedName": "FAMILY_1_6PX"
        },
        {
          "line": 72,
          "value": "333",
          "contexts": [
            "dimension"
          ],
          "usage": "family",
          "snippet": "body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6, color: #333 }",
          "suggestedName": "FAMILY_333PX"
        },
        {
          "line": 123,
          "value": "1.6",
          "contexts": [
            "dimension"
          ],
          "usage": "family",
          "snippet": "body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif, line-height: 1.6, color: #333 }",
          "suggestedName": "FAMILY_1_6PX"
        },
        {
          "line": 123,
          "value": "333",
          "contexts": [
            "dimension"
          ],
          "usage": "family",
          "snippet": "body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif, line-height: 1.6, color: #333 }",
          "suggestedName": "FAMILY_333PX"
        },
        {
          "line": 172,
          "value": "1.6",
          "contexts": [
            "dimension"
          ],
          "usage": "family",
          "snippet": "body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6, color: #333 }",
          "suggestedName": "FAMILY_1_6PX"
        }
      ]
    },
    {
      "file": "src\\lib\\auth-helpers.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 24,
          "value": "24",
          "contexts": [
            "time"
          ],
          "usage": "expires",
          "snippet": "expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(); // 24 hours from now",
          "suggestedName": "HOURS_PER_DAY"
        },
        {
          "line": 24,
          "value": "60",
          "contexts": [
            "time"
          ],
          "usage": "expires",
          "snippet": "expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(); // 24 hours from now",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 24,
          "value": "60",
          "contexts": [
            "time"
          ],
          "usage": "expires",
          "snippet": "expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(); // 24 hours from now",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 24,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "expires",
          "snippet": "expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(); // 24 hours from now",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 24,
          "value": "24",
          "contexts": [
            "time"
          ],
          "usage": "expires",
          "snippet": "expires: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(); // 24 hours from now",
          "suggestedName": "HOURS_PER_DAY"
        }
      ]
    },
    {
      "file": "src\\lib\\validation\\schemas.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 11,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "name",
          "snippet": "name: z.string().min(1).max(100, role: z.enum(['user', 'admin', 'developer']),",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 38,
          "value": "200",
          "contexts": [
            "limit"
          ],
          "usage": "name",
          "snippet": "name: z.string().min(1).max(200, description: z.string().max(1000, type: ProjectTypeSchema;",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 38,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "name",
          "snippet": "name: z.string().min(1).max(200, description: z.string().max(1000, type: ProjectTypeSchema;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 57,
          "value": "2",
          "contexts": [
            "limit"
          ],
          "usage": "model",
          "snippet": "model: z.string().optional(, temperature: z.number().min(0).max(2).optional(, maxTokens: z.number().positive().optional(, stream: z.boolean().optional()",
          "suggestedName": "MAX_MODEL_2"
        },
        {
          "line": 67,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "PaginationSchema",
          "snippet": "export const PaginationSchema = z.object({ page: z.number().int().positive().default(1, limit: z.number().int().positive().max(100).default(10, total: z.number().int().nonnegative().optional(, hasMore: z.boolean().optional()",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\semantic\\SemanticSearchService.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 34,
          "value": "7",
          "contexts": [],
          "usage": "context7",
          "snippet": "context7: string[]; // Top 7 most relevant content chunks",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 108,
          "value": "7",
          "contexts": [
            "limit",
            "http",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: request.size || 7,",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 188,
          "value": "7",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: 7,",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 209,
          "value": "10",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: 10",
          "suggestedName": "MAX_SIZE_10"
        },
        {
          "line": 220,
          "value": "5",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: 5",
          "suggestedName": "MAX_SIZE_5"
        }
      ]
    },
    {
      "file": "src\\lib\\health\\database-health.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 95,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "_isHealthy",
          "snippet": "const _isHealthy = poolStats.idleCount > 0 || poolStats.totalCount < 10;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 95,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "_isHealthy",
          "snippet": "const _isHealthy = poolStats.idleCount > 0 || poolStats.totalCount < 10;",
          "suggestedName": "MAX__ISHEALTHY_10"
        },
        {
          "line": 165,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "if (queryTime > 1000) {",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 166,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status = 'unhealthy'} else if (queryTime > 500) {",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 194,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (unhealthyChecks.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\AgentCommunication.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 67,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "retry_count",
          "snippet": "retry_count: 0,",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 95,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "number",
          "snippet": "timeout: number = 30000",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 191,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (participants.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 219,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "getMessagesForAgent(agentId: string, limit: number = 50): AgentMessage[] {",
          "suggestedName": "MAX_NUMBER_50"
        },
        {
          "line": 246,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": ".reduce((sum, queue) => sum + queue.queue.length, 0);",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\specialized\\TypeScriptAgent.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 142,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (analysis.totalErrors > 100) {",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 264,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "fileErrorCount[error.file] = (fileErrorCount[error.file] || 0) + 1",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 264,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "fileErrorCount[error.file] = (fileErrorCount[error.file] || 0) + 1",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 407,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "score += 2",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 411,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return Math.min(score, 100); // Cap at 100",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\base\\ValidatedAgent.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 78,
          "value": "0.3",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.3 }",
          "suggestedName": "CONSTANT_0_3"
        },
        {
          "line": 79,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "z.string().min(10, // Input must be at least 10 characters",
          "suggestedName": "MAX_VALUE_10"
        },
        {
          "line": 79,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "z.string().min(10, // Input must be at least 10 characters",
          "suggestedName": "MAX_VALUE_10"
        },
        {
          "line": 99,
          "value": "0.95",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 0.95",
          "suggestedName": "CONSTANT_0_95"
        },
        {
          "line": 131,
          "value": "2",
          "contexts": [
            "limit"
          ],
          "usage": "role",
          "snippet": "role: z.string(, description: z.string().optional(, capabilities: z.array(z.string()).optional(, tools: z.array(z.string()).optional(, model: z.string().optional(, temperature: z.number().min(0).max(2).optional(, maxTokens: z.number().positive().optional(, systemPrompt: z.string().optional()",
          "suggestedName": "MAX_ROLE_2"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\advisor\\RiskAssessor.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 23,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Business risks",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 24,
          "value": "3",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "3. Operational risks",
          "suggestedName": "PERCENTAGE_3"
        },
        {
          "line": 25,
          "value": "4",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "4. Strategic risks",
          "suggestedName": "PERCENTAGE_4"
        },
        {
          "line": 28,
          "value": "-5",
          "contexts": [],
          "usage": "value",
          "snippet": "- Assess likelihood (1-5)",
          "suggestedName": "CONSTANT_NEGATIVE_5"
        },
        {
          "line": 29,
          "value": "-5",
          "contexts": [],
          "usage": "value",
          "snippet": "- Assess impact (1-5)",
          "suggestedName": "CONSTANT_NEGATIVE_5"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\advisor\\AlternativeEvaluator.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 19,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": ".slice(0, 3)",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 23,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "Identify 3-4 alternative approaches that:",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 23,
          "value": "-4",
          "contexts": [],
          "usage": "value",
          "snippet": "Identify 3-4 alternative approaches that:",
          "suggestedName": "CONSTANT_NEGATIVE_4"
        },
        {
          "line": 25,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Have different trade-offs",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 26,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "3. Might be more suitable under certain conditions",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\components\\MobileDashboard.tsx",
      "count": 6,
      "topNumbers": [
        {
          "line": 37,
          "value": "3",
          "contexts": [],
          "usage": "deployments",
          "snippet": "deployments: 3,",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 38,
          "value": "1234",
          "contexts": [],
          "usage": "activeUsers",
          "snippet": "activeUsers: 1234,",
          "suggestedName": "CONSTANT_1234"
        },
        {
          "line": 39,
          "value": "12450",
          "contexts": [],
          "usage": "revenue",
          "snippet": "revenue: 12450,",
          "suggestedName": "CONSTANT_12450"
        },
        {
          "line": 40,
          "value": "45678",
          "contexts": [
            "http"
          ],
          "usage": "apiCalls",
          "snippet": "apiCalls: 45678",
          "suggestedName": "HTTP_STATUS_45678"
        },
        {
          "line": 118,
          "value": "0",
          "contexts": [],
          "usage": "className",
          "snippet": "<div className=\"fixed inset-0 z-40 bg-black/50\" onClick={() => setIsMenuOpen(false)} role=\"button\" tabIndex={0}>",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\FeedbackWidget.tsx",
      "count": 6,
      "topNumbers": [
        {
          "line": 53,
          "value": "2000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 2000)} catch (error) {",
          "suggestedName": "CONSTANT_2000"
        },
        {
          "line": 69,
          "value": "1500",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "setTimeout(() => setShowThankYou(false, 1500)",
          "suggestedName": "TIMEOUT_1500_MS"
        },
        {
          "line": 166,
          "value": "4",
          "contexts": [],
          "usage": "rows",
          "snippet": "const rows={4/>",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 191,
          "value": "100",
          "contexts": [],
          "usage": "transform",
          "snippet": "from { transform: translateY(100%, opacity: 0",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 202,
          "value": "0.",
          "contexts": [],
          "usage": "animation",
          "snippet": ".animate-slide-up { animation: slide-up 0.3s ease-out",
          "suggestedName": "CONSTANT_0_"
        }
      ]
    },
    {
      "file": "src\\components\\marketplace\\TemplateInstaller.tsx",
      "count": 6,
      "topNumbers": [
        {
          "line": 101,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (missingRequired.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 114,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "i",
          "snippet": "for (let i = 0; i < installSteps.length; i++) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 122,
          "value": "1500",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1500));",
          "suggestedName": "TIMEOUT_1500_MS"
        },
        {
          "line": 156,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "progress",
          "snippet": "const progress = (completedSteps / installSteps.length) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 274,
          "value": "-3",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "className={`flex items-center gap-3 p-3 rounded-lg border ${",
          "suggestedName": "TIMEOUT__3_MS"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\SelfCheckTrigger.tsx",
      "count": 6,
      "topNumbers": [
        {
          "line": 20,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2000));",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 22,
          "value": "85",
          "contexts": [],
          "usage": "mockMetrics",
          "snippet": "const mockMetrics: HealthMetrics={ moduleScore: 85",
          "suggestedName": "CONSTANT_85"
        },
        {
          "line": 23,
          "value": "92",
          "contexts": [],
          "usage": "dependencyScore",
          "snippet": "dependencyScore: 92",
          "suggestedName": "CONSTANT_92"
        },
        {
          "line": 24,
          "value": "88",
          "contexts": [],
          "usage": "securityScore",
          "snippet": "securityScore: 88",
          "suggestedName": "CONSTANT_88"
        },
        {
          "line": 25,
          "value": "90",
          "contexts": [],
          "usage": "performanceScore",
          "snippet": "performanceScore: 90",
          "suggestedName": "CONSTANT_90"
        }
      ]
    },
    {
      "file": "src\\app\\collaborate\\dashboard\\page.tsx",
      "count": 6,
      "topNumbers": [
        {
          "line": 37,
          "value": "3",
          "contexts": [],
          "usage": "className",
          "snippet": "<div className=\"text-3xl font-bold text-blue-600\">3</div>",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 43,
          "value": "12",
          "contexts": [],
          "usage": "className",
          "snippet": "<div className=\"text-3xl font-bold text-green-600\">12</div>",
          "suggestedName": "CONSTANT_12"
        },
        {
          "line": 49,
          "value": "24",
          "contexts": [],
          "usage": "className",
          "snippet": "<div className=\"text-3xl font-bold text-purple-600\">24</div>",
          "suggestedName": "HOURS_PER_DAY"
        },
        {
          "line": 62,
          "value": "2",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "<p className=\"text-sm text-gray-600\">Last updated 2 hours ago</p>",
          "suggestedName": "TIMEOUT_2_MS"
        },
        {
          "line": 68,
          "value": "5",
          "contexts": [],
          "usage": "className",
          "snippet": "<span className=\"text-sm text-gray-500\">5 members</span>",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\app\\api\\semantic\\search\\route.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 11,
          "value": "1",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: z.number().min(1).max(100).optional().default(7),",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 11,
          "value": "100",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: z.number().min(1).max(100).optional().default(7),",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 11,
          "value": "7",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "size: z.number().min(1).max(100).optional().default(7),",
          "suggestedName": "DAYS_PER_WEEK"
        },
        {
          "line": 28,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Invalid request', details: error.errors }, { status: 400",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 32,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Search failed', message: error instanceof Error ? error.message : 'Unknown error' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\requirements\\process\\route.ts",
      "count": 6,
      "topNumbers": [
        {
          "line": 18,
          "value": "36",
          "contexts": [],
          "usage": "processed",
          "snippet": "const processed= { id: 'req_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 18,
          "value": "2",
          "contexts": [],
          "usage": "processed",
          "snippet": "const processed= { id: 'req_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 18,
          "value": "9",
          "contexts": [],
          "usage": "processed",
          "snippet": "const processed= { id: 'req_' + Math.random().toString(36).substr(2, 9), ...validatedData,",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 21,
          "value": "40",
          "contexts": [
            "time"
          ],
          "usage": "estimatedHours",
          "snippet": "estimatedHours: 40,",
          "suggestedName": "TIMEOUT_40_MS"
        },
        {
          "line": 32,
          "value": "201",
          "contexts": [
            "http"
          ],
          "usage": "success",
          "snippet": "return NextResponse.json({ success: true, processed }, { status: 201",
          "suggestedName": "HTTP_STATUS_CREATED"
        }
      ]
    },
    {
      "file": "src\\lib\\ai.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 34,
          "value": "0.7",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: options.temperature || 0.7,",
          "suggestedName": "CONSTANT_0_7"
        },
        {
          "line": 35,
          "value": "2000",
          "contexts": [
            "limit"
          ],
          "usage": "max_tokens",
          "snippet": "max_tokens: options.max_tokens || 2000,",
          "suggestedName": "MAX_MAX_TOKENS_2000"
        },
        {
          "line": 77,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Potential improvements",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 78,
          "value": "3",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "3. Security considerations;",
          "suggestedName": "PERCENTAGE_3"
        },
        {
          "line": 79,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "4. Performance optimizations`;``;",
          "suggestedName": "CONSTANT_4"
        }
      ]
    },
    {
      "file": "src\\lib\\knowledge\\document-loader.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 161,
          "value": "1024",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "files",
          "snippet": "const files: LoadedFile[]  = [], const _maxSize = options?.maxFileSize || 1024 * 1024 // 1MB default, // Default patterns;",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 161,
          "value": "1024",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "files",
          "snippet": "const files: LoadedFile[]  = [], const _maxSize = options?.maxFileSize || 1024 * 1024 // 1MB default, // Default patterns;",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 276,
          "value": "36",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2, 15)}",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 276,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2, 15)}",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 276,
          "value": "15",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2, 15)}",
          "suggestedName": "CONSTANT_15"
        }
      ]
    },
    {
      "file": "src\\lib\\docs\\search\\search-engine.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 23,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "limit: number = 10",
          "suggestedName": "MAX_NUMBER_10"
        },
        {
          "line": 54,
          "value": "2",
          "contexts": [
            "limit"
          ],
          "usage": "token",
          "snippet": ".filter(token => token.length > 2);",
          "suggestedName": "MAX_TOKEN_2"
        },
        {
          "line": 69,
          "value": "0.5",
          "contexts": [],
          "usage": "value",
          "snippet": "score += 0.5;",
          "suggestedName": "HALF"
        },
        {
          "line": 92,
          "value": "150",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return bestSentence.length > 150",
          "suggestedName": "MAX_VALUE_150"
        },
        {
          "line": 93,
          "value": "150",
          "contexts": [],
          "usage": "value",
          "snippet": "? bestSentence.substring(0, 150) + '...'",
          "suggestedName": "CONSTANT_150"
        }
      ]
    },
    {
      "file": "src\\lib\\database\\services\\feature-flag-service.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 41,
          "value": "100",
          "contexts": [
            "percentage"
          ],
          "usage": "value",
          "snippet": "if (data.rollout_percentage < 100 && userId) {",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 61,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "i",
          "snippet": "for (let i = 0; i < userId.length; i++) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 63,
          "value": "5",
          "contexts": [],
          "usage": "hash",
          "snippet": "hash = ((hash << 5) - hash) + char;",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 64,
          "value": "32",
          "contexts": [],
          "usage": "hash",
          "snippet": "hash = hash & hash; // Convert to 32-bit integer",
          "suggestedName": "CONSTANT_32"
        },
        {
          "line": 66,
          "value": "100",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.abs(hash) % 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\database\\services\\billing-service.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 51,
          "value": "30",
          "contexts": [],
          "usage": "current_period_end",
          "snippet": "current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 51,
          "value": "24",
          "contexts": [],
          "usage": "current_period_end",
          "snippet": "current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),",
          "suggestedName": "HOURS_PER_DAY"
        },
        {
          "line": 51,
          "value": "60",
          "contexts": [],
          "usage": "current_period_end",
          "snippet": "current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 51,
          "value": "60",
          "contexts": [],
          "usage": "current_period_end",
          "snippet": "current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 51,
          "value": "1000",
          "contexts": [],
          "usage": "current_period_end",
          "snippet": "current_period_end: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\lib\\collaboration\\ProjectManager.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 45,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (projects.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 68,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "static async getProjectChanges(projectId: string, limit: number = 50): Promise<ProjectChange[]> {",
          "suggestedName": "MAX_NUMBER_50"
        },
        {
          "line": 98,
          "value": "36",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2) + Date.now().toString(36);",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 98,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2) + Date.now().toString(36);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 98,
          "value": "36",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2) + Date.now().toString(36);",
          "suggestedName": "CONSTANT_36"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\index.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 95,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (registeredCount === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 98,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1000))",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 142,
          "value": "90",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "status: dashboard.overview.system_health_score >= 90 ? 'excellent'  : null",
          "suggestedName": "HTTP_STATUS_90"
        },
        {
          "line": 143,
          "value": "75",
          "contexts": [],
          "usage": "value",
          "snippet": "dashboard.overview.system_health_score >= 75 ? 'good'  : null",
          "suggestedName": "CONSTANT_75"
        },
        {
          "line": 144,
          "value": "50",
          "contexts": [],
          "usage": "value",
          "snippet": "dashboard.overview.system_health_score >= 50 ? 'fair' : 'poor'",
          "suggestedName": "CONSTANT_50"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\DockerAgentManager.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 11,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "cpuLimit",
          "snippet": "cpuLimit: string // e.g, ., \"0.5\" for 50% of one CPU,",
          "suggestedName": "MAX_CPULIMIT_50"
        },
        {
          "line": 195,
          "value": "2",
          "contexts": [],
          "usage": "1",
          "snippet": "1: '0.75', // Architect - highest priority, 2: '0.5';",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 204,
          "value": "2",
          "contexts": [],
          "usage": "1",
          "snippet": "1: '768m', // Architect, 2: '512m';",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 214,
          "value": "1024",
          "contexts": [],
          "usage": "value",
          "snippet": "return value * 1024 // Convert to MB",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 218,
          "value": "1024",
          "contexts": [],
          "usage": "value",
          "snippet": "return, value / 1024",
          "suggestedName": "BYTES_PER_KB"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\specialized\\DevOpsAgent.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 121,
          "value": "5000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 5000));",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 355,
          "value": "1",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "if (health.services.filter(s => s.status === 'down') {.}length > 1) {",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 401,
          "value": "100",
          "contexts": [],
          "usage": "cpu",
          "snippet": "return { cpu: Math.random() * 100,",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 402,
          "value": "100",
          "contexts": [],
          "usage": "memory",
          "snippet": "memory: Math.random() * 100,",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 403,
          "value": "100",
          "contexts": [],
          "usage": "disk",
          "snippet": "disk: Math.random() * 100,",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\runners\\frontend-agent.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 27,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2000);",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 35,
          "value": "3000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 3000);",
          "suggestedName": "TIMEOUT_3000_MS"
        },
        {
          "line": 47,
          "value": "2500",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2500);",
          "suggestedName": "TIMEOUT_2500_MS"
        },
        {
          "line": 55,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2000);",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 63,
          "value": "1500",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1500);",
          "suggestedName": "TIMEOUT_1500_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\runners\\backend-agent.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 27,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2000);",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 37,
          "value": "3000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 3000);",
          "suggestedName": "TIMEOUT_3000_MS"
        },
        {
          "line": 47,
          "value": "2500",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2500);",
          "suggestedName": "TIMEOUT_2500_MS"
        },
        {
          "line": 57,
          "value": "1500",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 1500);",
          "suggestedName": "TIMEOUT_1500_MS"
        },
        {
          "line": 66,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2000);",
          "suggestedName": "TIMEOUT_2000_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\mcp\\AgentMCPBridge.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 32,
          "value": "300000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "cacheTTL",
          "snippet": "cacheTTL: 300000, // 5 minutes",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 32,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "cacheTTL",
          "snippet": "cacheTTL: 300000, // 5 minutes",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 252,
          "value": "30000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 30000)    })",
          "suggestedName": "CONSTANT_30000"
        },
        {
          "line": 290,
          "value": "1000",
          "contexts": [
            "limit",
            "http",
            "dimension"
          ],
          "usage": "value",
          "snippet": "if (this.responseCache.size > 1000) {",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 295,
          "value": "100",
          "contexts": [],
          "usage": "i",
          "snippet": "for (let i = 0; i < 100; i++) {",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\base\\BaseAgent.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 30,
          "value": "1024",
          "contexts": [],
          "usage": "resources",
          "snippet": "resources: config.resources || { cpu: 1024;",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 32,
          "value": "300000",
          "contexts": [
            "time"
          ],
          "usage": "timeout",
          "snippet": "timeout: 300000",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 171,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "(this.state.metrics.tasksCompleted / totalTasks) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 210,
          "value": "0",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "if (this.state.taskQueue.length > 0 && this.state.status === 'ready') {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 247,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return this.state.taskQueue.length > 0 || this.state.currentTask !== undefined",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\base\\Agent.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 51,
          "value": "1024",
          "contexts": [],
          "usage": "resources",
          "snippet": "resources: config.resources || { cpu: 1024;",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 53,
          "value": "300000",
          "contexts": [
            "time"
          ],
          "usage": "timeout",
          "snippet": "timeout: 300000",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 256,
          "value": "0",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "if (this.state.taskQueue.length > 0 && this.state.status === 'ready') {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 329,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "(this.state.metrics.tasksCompleted / totalTasks) * 100",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 336,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return this.state.taskQueue.length > 0 || this.state.currentTask !== undefined",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\hooks\\useMCP.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 50,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "defaultTimeout",
          "snippet": "defaultTimeout: options.defaultTimeout || 30000,",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 51,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "maxRetries",
          "snippet": "maxRetries: 3",
          "suggestedName": "MAX_MAXRETRIES_3"
        },
        {
          "line": 56,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (options.autoConnect && options.autoConnect.length > 0) { autoConnectServers(options.autoConnect)}",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 197,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (errors.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 228,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (failures.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\DevelopmentWorkflow.tsx",
      "count": 5,
      "topNumbers": [
        {
          "line": 59,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (currentIndex < workflowPhases.length - 1) {",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 60,
          "value": "1",
          "contexts": [],
          "usage": "value",
          "snippet": "setActivePhase(workflowPhases[currentIndex + 1].id)",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 121,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ": isActive && taskIndex < 2",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 126,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "{(isCompleted || (isActive && taskIndex < 2))  && (",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 132,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "isCompleted || (isActive && taskIndex < 2)",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\components\\AdvancedCodeEditor.tsx",
      "count": 5,
      "topNumbers": [
        {
          "line": 123,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "setActiveFile(newOpenFiles[newOpenFiles.length - 1] || null)};",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 151,
          "value": "2000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 2000)",
          "suggestedName": "CONSTANT_2000"
        },
        {
          "line": 164,
          "value": "0",
          "contexts": [],
          "usage": "onClick",
          "snippet": "const onClick={() => handleFileClick(node)}</div role=\"button\" tabIndex={0}>",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 241,
          "value": "0",
          "contexts": [],
          "usage": "onClick",
          "snippet": "const onClick={() => setActiveFile(file)}</div role=\"button\" tabIndex={0}>",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 261,
          "value": "14",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "fontSize",
          "snippet": "fontSize: 14",
          "suggestedName": "MAX_FONTSIZE_14"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\use-toast.tsx",
      "count": 5,
      "topNumbers": [
        {
          "line": 8,
          "value": "1000000",
          "contexts": [
            "time"
          ],
          "usage": "TOAST_REMOVE_DELAY",
          "snippet": "const TOAST_REMOVE_DELAY = 1000000;",
          "suggestedName": "TIMEOUT_1000000_MS"
        },
        {
          "line": 24,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "count",
          "snippet": "let count = 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 27,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "count",
          "snippet": "count = (count + 1) % Number.MAX_SAFE_INTEGER;",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 175,
          "value": "-1",
          "contexts": [],
          "usage": "value",
          "snippet": "if (index > -1) {",
          "suggestedName": "NOT_FOUND_INDEX"
        },
        {
          "line": 176,
          "value": "1",
          "contexts": [],
          "usage": "value",
          "snippet": "listeners.splice(index, 1)",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\logo.tsx",
      "count": 5,
      "topNumbers": [
        {
          "line": 117,
          "value": "24",
          "contexts": [
            "dimension"
          ],
          "usage": "dimensions",
          "snippet": "const dimensions={ xs: 24",
          "suggestedName": "HOURS_PER_DAY"
        },
        {
          "line": 118,
          "value": "32",
          "contexts": [],
          "usage": "sm",
          "snippet": "sm: 32",
          "suggestedName": "CONSTANT_32"
        },
        {
          "line": 119,
          "value": "48",
          "contexts": [],
          "usage": "md",
          "snippet": "md: 48",
          "suggestedName": "CONSTANT_48"
        },
        {
          "line": 120,
          "value": "64",
          "contexts": [],
          "usage": "lg",
          "snippet": "lg: 64",
          "suggestedName": "CONSTANT_64"
        },
        {
          "line": 121,
          "value": "96",
          "contexts": [],
          "usage": "xl",
          "snippet": "xl: 96 }",
          "suggestedName": "CONSTANT_96"
        }
      ]
    },
    {
      "file": "src\\components\\dev-intelligence\\DevelopmentIntelligence.tsx",
      "count": 5,
      "topNumbers": [
        {
          "line": 108,
          "value": "8",
          "contexts": [],
          "usage": "value",
          "snippet": "if (score >= 8) return 'text-green-600';",
          "suggestedName": "CONSTANT_8"
        },
        {
          "line": 109,
          "value": "6",
          "contexts": [],
          "usage": "value",
          "snippet": "if (score >= 6) return 'text-yellow-600';",
          "suggestedName": "CONSTANT_6"
        },
        {
          "line": 110,
          "value": "4",
          "contexts": [],
          "usage": "value",
          "snippet": "if (score >= 4) return 'text-orange-600';",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 191,
          "value": "10",
          "contexts": [],
          "usage": "value",
          "snippet": "{intelligence.productionReadinessScore}/10",
          "suggestedName": "CONSTANT_10"
        },
        {
          "line": 387,
          "value": "10",
          "contexts": [],
          "usage": "Score",
          "snippet": "<p>Score: {score}/10</p>",
          "suggestedName": "CONSTANT_10"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\SafeModeHealthCheck.tsx",
      "count": 5,
      "topNumbers": [
        {
          "line": 26,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "maxIssuesPerBatch",
          "snippet": "maxIssuesPerBatch: 3,",
          "suggestedName": "MAX_MAXISSUESPERBATCH_3"
        },
        {
          "line": 27,
          "value": "300",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "maxTimePerBatch",
          "snippet": "maxTimePerBatch: 300, // 5 minutes",
          "suggestedName": "TIMEOUT_300_MS"
        },
        {
          "line": 27,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "maxTimePerBatch",
          "snippet": "maxTimePerBatch: 300, // 5 minutes",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 28,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "pauseBetweenBatches",
          "snippet": "pauseBetweenBatches: 30, // 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 28,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "pauseBetweenBatches",
          "snippet": "pauseBetweenBatches: 30, // 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\ConfigurationSection.tsx",
      "count": 5,
      "topNumbers": [
        {
          "line": 36,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "maxIssuesPerBatch",
          "snippet": "maxIssuesPerBatch: parseInt(e.target.value) || 3",
          "suggestedName": "MAX_MAXISSUESPERBATCH_3"
        },
        {
          "line": 54,
          "value": "60",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "value={Math.round(batchConfig.maxTimePerBatch / 60)}",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 58,
          "value": "5",
          "contexts": [
            "limit"
          ],
          "usage": "maxTimePerBatch",
          "snippet": "maxTimePerBatch: (parseInt(e.target.value) || 5) * 60",
          "suggestedName": "MAX_MAXTIMEPERBATCH_5"
        },
        {
          "line": 58,
          "value": "60",
          "contexts": [
            "limit"
          ],
          "usage": "maxTimePerBatch",
          "snippet": "maxTimePerBatch: (parseInt(e.target.value) || 5) * 60",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 80,
          "value": "30",
          "contexts": [],
          "usage": "pauseBetweenBatches",
          "snippet": "pauseBetweenBatches: parseInt(e.target.value) || 30",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\app\\folders\\page.tsx",
      "count": 5,
      "topNumbers": [
        {
          "line": 10,
          "value": "5",
          "contexts": [
            "time"
          ],
          "usage": "id",
          "snippet": "{ id: 1, name: 'Projects', items: 5 },",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 11,
          "value": "2",
          "contexts": [
            "time"
          ],
          "usage": "id",
          "snippet": "{ id: 2, name: 'Templates', items: 12 },",
          "suggestedName": "TIMEOUT_2_MS"
        },
        {
          "line": 11,
          "value": "12",
          "contexts": [
            "time"
          ],
          "usage": "id",
          "snippet": "{ id: 2, name: 'Templates', items: 12 },",
          "suggestedName": "TIMEOUT_12_MS"
        },
        {
          "line": 12,
          "value": "3",
          "contexts": [
            "time"
          ],
          "usage": "id",
          "snippet": "{ id: 3, name: 'Archives', items: 28 },",
          "suggestedName": "TIMEOUT_3_MS"
        },
        {
          "line": 12,
          "value": "28",
          "contexts": [
            "time"
          ],
          "usage": "id",
          "snippet": "{ id: 3, name: 'Archives', items: 28 },",
          "suggestedName": "TIMEOUT_28_MS"
        }
      ]
    },
    {
      "file": "src\\app\\api\\roadmap\\validate\\route.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 27,
          "value": "85",
          "contexts": [],
          "usage": "score",
          "snippet": "score: 85,",
          "suggestedName": "CONSTANT_85"
        },
        {
          "line": 35,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Invalid input', details: error.errors }, { status: 400",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 38,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to validate roadmap' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 57,
          "value": "85",
          "contexts": [],
          "usage": "lastValidated",
          "snippet": "lastValidated: new Date().toISOString(), score: 85",
          "suggestedName": "CONSTANT_85"
        },
        {
          "line": 63,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to get validation status' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\auth\\register\\route.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 20,
          "value": "36",
          "contexts": [],
          "usage": "id",
          "snippet": "id: 'user_' + Math.random().toString(36).substr(2, 9),",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 20,
          "value": "2",
          "contexts": [],
          "usage": "id",
          "snippet": "id: 'user_' + Math.random().toString(36).substr(2, 9),",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 20,
          "value": "9",
          "contexts": [],
          "usage": "id",
          "snippet": "id: 'user_' + Math.random().toString(36).substr(2, 9),",
          "suggestedName": "CONSTANT_9"
        },
        {
          "line": 33,
          "value": "201",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 201",
          "suggestedName": "HTTP_STATUS_CREATED"
        },
        {
          "line": 45,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\admin\\stats\\route.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 8,
          "value": "1247",
          "contexts": [
            "limit"
          ],
          "usage": "stats",
          "snippet": "const stats = { totalUsers: 1247,",
          "suggestedName": "MAX_STATS_1247"
        },
        {
          "line": 9,
          "value": "89",
          "contexts": [],
          "usage": "activeUsers",
          "snippet": "activeUsers: 89,",
          "suggestedName": "CONSTANT_89"
        },
        {
          "line": 10,
          "value": "456",
          "contexts": [
            "limit"
          ],
          "usage": "totalProjects",
          "snippet": "totalProjects: 456,",
          "suggestedName": "MAX_TOTALPROJECTS_456"
        },
        {
          "line": 11,
          "value": "234",
          "contexts": [],
          "usage": "deployments",
          "snippet": "deployments: 234,",
          "suggestedName": "CONSTANT_234"
        },
        {
          "line": 20,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to fetch stats' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\admin\\analytics\\route.ts",
      "count": 5,
      "topNumbers": [
        {
          "line": 12,
          "value": "1247",
          "contexts": [
            "limit"
          ],
          "usage": "analyticsData",
          "snippet": "const analyticsData = { totalUsers: 1247,",
          "suggestedName": "MAX_ANALYTICSDATA_1247"
        },
        {
          "line": 13,
          "value": "89",
          "contexts": [],
          "usage": "activeUsers",
          "snippet": "activeUsers: 89,",
          "suggestedName": "CONSTANT_89"
        },
        {
          "line": 14,
          "value": "5643",
          "contexts": [],
          "usage": "pageViews",
          "snippet": "pageViews: 5643,",
          "suggestedName": "CONSTANT_5643"
        },
        {
          "line": 15,
          "value": "23.4",
          "contexts": [
            "percentage"
          ],
          "usage": "bounceRate",
          "snippet": "bounceRate: 23.4,",
          "suggestedName": "PERCENTAGE_23_4"
        },
        {
          "line": 27,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\middleware.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 78,
          "value": "1000",
          "contexts": [
            "limit",
            "http",
            "percentage"
          ],
          "usage": "value",
          "snippet": "response.headers.set('X-RateLimit-Reset', Math.ceil(rateLimitResult.resetTime / 1000).toString());",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 85,
          "value": "1000",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "retryAfter",
          "snippet": "retryAfter: Math.ceil((rateLimitResult.resetTime - Date.now()) / 1000),",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 88,
          "value": "429",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 429,",
          "suggestedName": "HTTP_STATUS_429"
        },
        {
          "line": 91,
          "value": "1000",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "value",
          "snippet": "'Retry-After': Math.ceil((rateLimitResult.resetTime - Date.now()) / 1000).toString(),",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\utils\\helpers.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 29,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return str.slice(0, maxLength - 3) + '...';",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 29,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return str.slice(0, maxLength - 3) + '...';",
          "suggestedName": "MAX_VALUE_3"
        },
        {
          "line": 86,
          "value": "3",
          "contexts": [
            "time"
          ],
          "usage": "retries",
          "snippet": "const { retries = 3, delay = 1000, onRetry } = options;",
          "suggestedName": "TIMEOUT_3_MS"
        },
        {
          "line": 86,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "retries",
          "snippet": "const { retries = 3, delay = 1000, onRetry } = options;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\services\\analytics-websocket.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 37,
          "value": "5",
          "contexts": [],
          "usage": "reconnectionAttempts",
          "snippet": "reconnectionAttempts: 5,",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 38,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "reconnectionDelay",
          "snippet": "reconnectionDelay: 1000,",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 39,
          "value": "5000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "reconnectionDelayMax",
          "snippet": "reconnectionDelayMax: 5000",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 166,
          "value": "5000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 5000);",
          "suggestedName": "CONSTANT_5000"
        }
      ]
    },
    {
      "file": "src\\lib\\production-logger.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 7,
          "value": "2",
          "contexts": [],
          "usage": "ERROR",
          "snippet": "ERROR = 0, WARN = 1, INFO = 2;",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 8,
          "value": "3",
          "contexts": [],
          "usage": "DEBUG",
          "snippet": "DEBUG = 3;",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 19,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "maxLogs",
          "snippet": "private maxLogs = 1000; // Keep last 1000 logs in memory;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 19,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "maxLogs",
          "snippet": "private maxLogs = 1000; // Keep last 1000 logs in memory;",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\lib\\error-handling.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 14,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "number",
          "snippet": "public statusCode: number = 500,",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 61,
          "value": "500",
          "contexts": [],
          "usage": "value",
          "snippet": "500,",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 83,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "retries",
          "snippet": "const { fallbackValue, userMessage, retries = 0, retryDelay = 1000 } = options || {};",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 116,
          "value": "500",
          "contexts": [],
          "usage": "value",
          "snippet": "500,",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\lib\\mcp\\mcp-registry.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 155,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return { configured: missing.length === 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 169,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "2. Start the MCP, server: npm run,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 171,
          "value": "3",
          "contexts": [],
          "usage": "ws",
          "snippet": "3. The server will be available at, ws://localhost:3001/mcp",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 171,
          "value": "3001",
          "contexts": [],
          "usage": "ws",
          "snippet": "3. The server will be available at, ws://localhost:3001/mcp",
          "suggestedName": "CONSTANT_3001"
        }
      ]
    },
    {
      "file": "src\\lib\\docs\\progress\\progress-tracker.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 113,
          "value": "5",
          "contexts": [],
          "usage": "value",
          "snippet": "if (!progress) return availableSections.slice(0, 5);",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 120,
          "value": "5",
          "contexts": [],
          "usage": "value",
          "snippet": "return recommendations.slice(0, 5);",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 151,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return Math.round((progress.sectionsCompleted.length / totalSections) * 100);",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 154,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "getLeaderboard(limit: number = 10): Promise<any[]> {",
          "suggestedName": "MAX_NUMBER_10"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\agent-initializer.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 24,
          "value": "300000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "analysisInterval",
          "snippet": "analysisInterval: 300000, // 5 minutes",
          "suggestedName": "TIMEOUT_300000_MS"
        },
        {
          "line": 24,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "analysisInterval",
          "snippet": "analysisInterval: 300000, // 5 minutes",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 25,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "criticalIssueThreshold",
          "snippet": "criticalIssueThreshold: 3,",
          "suggestedName": "MAX_CRITICALISSUETHRESHOLD_3"
        },
        {
          "line": 50,
          "value": "5000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 5000);",
          "suggestedName": "CONSTANT_5000"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\mcp\\MCPIntegration.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 33,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "private messageIdCounter: number = 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 117,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "}, 30000); // 30 second timeout",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 117,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "}, 30000); // 30 second timeout",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 329,
          "value": "5000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 5000)    })",
          "suggestedName": "CONSTANT_5000"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\communication\\MessageQueue.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 12,
          "value": "1000",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "number",
          "snippet": "createQueue(agentId: string, maxSize: number = 1000): void {",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 37,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "getMessages(agentId: string, limit: number = 50): AgentMessage[] {",
          "suggestedName": "MAX_NUMBER_50"
        },
        {
          "line": 88,
          "value": "5000",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "}, 5000); // Check every 5 seconds",
          "suggestedName": "FIVE_SECONDS_MS"
        },
        {
          "line": 88,
          "value": "5",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "}, 5000); // Check every 5 seconds",
          "suggestedName": "TIMEOUT_5_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\communication\\ChannelManager.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 20,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "message_count",
          "snippet": "message_count: 0,",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 60,
          "value": "-1",
          "contexts": [],
          "usage": "value",
          "snippet": "if (index > -1) {",
          "suggestedName": "NOT_FOUND_INDEX"
        },
        {
          "line": 61,
          "value": "1",
          "contexts": [],
          "usage": "value",
          "snippet": "channel.participants.splice(index, 1);",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 70,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "updateChannelActivity(channelId: string, messageCount: number = 1): void {",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\archon\\advisor\\types.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 76,
          "value": "-5",
          "contexts": [],
          "usage": "likelihood",
          "snippet": "likelihood: number; // 1-5",
          "suggestedName": "CONSTANT_NEGATIVE_5"
        },
        {
          "line": 77,
          "value": "-5",
          "contexts": [],
          "usage": "impact",
          "snippet": "impact: number; // 1-5",
          "suggestedName": "CONSTANT_NEGATIVE_5"
        },
        {
          "line": 105,
          "value": "-1",
          "contexts": [],
          "usage": "weight",
          "snippet": "weight: number; // 0-1, sum to 1",
          "suggestedName": "NOT_FOUND_INDEX"
        },
        {
          "line": 115,
          "value": "-10",
          "contexts": [],
          "usage": "value",
          "snippet": "value: number; // 1-10",
          "suggestedName": "CONSTANT_NEGATIVE_10"
        }
      ]
    },
    {
      "file": "src\\hooks\\useRAG.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 48,
          "value": "1536",
          "contexts": [
            "dimension"
          ],
          "usage": "dimension",
          "snippet": "dimension: 1536, // OpenAI embedding dimension, metric: 'cosine'",
          "suggestedName": "DIMENSION_1536PX"
        },
        {
          "line": 53,
          "value": "1000",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "chunkSize",
          "snippet": "chunkSize: options.chunkSize || 1000,",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        },
        {
          "line": 54,
          "value": "200",
          "contexts": [],
          "usage": "chunkOverlap",
          "snippet": "chunkOverlap: options.chunkOverlap || 200,",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 55,
          "value": "5",
          "contexts": [],
          "usage": "retrievalTopK",
          "snippet": "retrievalTopK: options.retrievalTopK || 5",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\components\\LandingPage.tsx",
      "count": 4,
      "topNumbers": [
        {
          "line": 121,
          "value": "2",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "variant",
          "snippet": "<Badge variant=\"secondary\">2 min ago/>",
          "suggestedName": "TIMEOUT_2_MS"
        },
        {
          "line": 154,
          "value": "5",
          "contexts": [],
          "usage": "key",
          "snippet": "{[...Array<any>(5)].map((_, i) => (\\n    <Star const key={i};",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 158,
          "value": "10",
          "contexts": [],
          "usage": "value",
          "snippet": "Trusted by 10,000+ developers</span>",
          "suggestedName": "CONSTANT_10"
        },
        {
          "line": 158,
          "value": "000",
          "contexts": [],
          "usage": "value",
          "snippet": "Trusted by 10,000+ developers</span>",
          "suggestedName": "CONSTANT_000"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\card-enhanced.tsx",
      "count": 4,
      "topNumbers": [
        {
          "line": 46,
          "value": "1.02",
          "contexts": [],
          "usage": "_hoverAnimation",
          "snippet": "const _hoverAnimation = hover ? { scale: 1.02,",
          "suggestedName": "CONSTANT_1_02"
        },
        {
          "line": 47,
          "value": "-4",
          "contexts": [],
          "usage": "y",
          "snippet": "y: -4,",
          "suggestedName": "CONSTANT_NEGATIVE_4"
        },
        {
          "line": 60,
          "value": "20",
          "contexts": [],
          "usage": "initial",
          "snippet": "style={{ ...getVariantStyles(, ...glowStyles } initial={{ opacity: 0, y: 20 }",
          "suggestedName": "CONSTANT_20"
        },
        {
          "line": 63,
          "value": "0.3",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "transition",
          "snippet": "const transition={{ duration: 0.3, ease: 'easeOut' }",
          "suggestedName": "TIMEOUT_0_3_MS"
        }
      ]
    },
    {
      "file": "src\\components\\health\\SystemMetrics.tsx",
      "count": 4,
      "topNumbers": [
        {
          "line": 17,
          "value": "45",
          "contexts": [],
          "usage": "defaultMetrics",
          "snippet": "const defaultMetrics: SystemMetricsData = { cpu: 45,",
          "suggestedName": "CONSTANT_45"
        },
        {
          "line": 18,
          "value": "62",
          "contexts": [],
          "usage": "memory",
          "snippet": "memory: 62,",
          "suggestedName": "CONSTANT_62"
        },
        {
          "line": 19,
          "value": "78",
          "contexts": [],
          "usage": "disk",
          "snippet": "disk: 78,",
          "suggestedName": "CONSTANT_78"
        },
        {
          "line": 20,
          "value": "23",
          "contexts": [],
          "usage": "network",
          "snippet": "network: 23",
          "suggestedName": "CONSTANT_23"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\ProgressSection.tsx",
      "count": 4,
      "topNumbers": [
        {
          "line": 16,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!checkpoint || issues.length === 0) return 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 16,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (!checkpoint || issues.length === 0) return 0;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 17,
          "value": "100",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return Math.round((checkpoint.completedIssues.length / issues.length) * 100);",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 33,
          "value": "60000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "value",
          "snippet": "{Math.round((Date.now() - checkpoint.startTime) / 60000)} minutes elapsed",
          "suggestedName": "MILLISECONDS_PER_MINUTE"
        }
      ]
    },
    {
      "file": "src\\app\\terms\\page.tsx",
      "count": 4,
      "topNumbers": [
        {
          "line": 17,
          "value": "2",
          "contexts": [],
          "usage": "className",
          "snippet": "<h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">2. Use License</h2>",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 28,
          "value": "3",
          "contexts": [
            "limit"
          ],
          "usage": "className",
          "snippet": "<h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">3. User Accounts</h2>",
          "suggestedName": "MAX_CLASSNAME_3"
        },
        {
          "line": 39,
          "value": "4",
          "contexts": [],
          "usage": "className",
          "snippet": "<h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">4. Privacy Policy</h2>",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 47,
          "value": "5",
          "contexts": [],
          "usage": "className",
          "snippet": "<h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">5. Contact Information</h2>",
          "suggestedName": "CONSTANT_5"
        }
      ]
    },
    {
      "file": "src\\app\\pricing\\page.tsx",
      "count": 4,
      "topNumbers": [
        {
          "line": 32,
          "value": "29",
          "contexts": [],
          "usage": "price",
          "snippet": "price: 29,",
          "suggestedName": "CONSTANT_29"
        },
        {
          "line": 48,
          "value": "99",
          "contexts": [],
          "usage": "price",
          "snippet": "price: 99,",
          "suggestedName": "CONSTANT_99"
        },
        {
          "line": 151,
          "value": "14",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "Yes, we offer a 14-day free trial for Pro and Enterprise plans.",
          "suggestedName": "TIMEOUT_14_MS"
        },
        {
          "line": 171,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "Yes, we offer a 30-day money-back guarantee for all paid plans.",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\app\\community\\page.tsx",
      "count": 4,
      "topNumbers": [
        {
          "line": 25,
          "value": "8934",
          "contexts": [],
          "usage": "members",
          "snippet": "members: 8934,",
          "suggestedName": "CONSTANT_8934"
        },
        {
          "line": 31,
          "value": "5621",
          "contexts": [],
          "usage": "members",
          "snippet": "members: 5621,",
          "suggestedName": "CONSTANT_5621"
        },
        {
          "line": 37,
          "value": "3287",
          "contexts": [],
          "usage": "members",
          "snippet": "members: 3287,",
          "suggestedName": "CONSTANT_3287"
        },
        {
          "line": 43,
          "value": "2156",
          "contexts": [],
          "usage": "members",
          "snippet": "members: 2156,",
          "suggestedName": "CONSTANT_2156"
        }
      ]
    },
    {
      "file": "src\\app\\api\\visual\\generate\\route.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 11,
          "value": "512",
          "contexts": [
            "dimension"
          ],
          "usage": "dimensions",
          "snippet": "dimensions = { width: 512, height: 512 }",
          "suggestedName": "DIMENSIONS_512PX"
        },
        {
          "line": 11,
          "value": "512",
          "contexts": [
            "dimension"
          ],
          "usage": "dimensions",
          "snippet": "dimensions = { width: 512, height: 512 }",
          "suggestedName": "DIMENSIONS_512PX"
        },
        {
          "line": 31,
          "value": "500",
          "contexts": [
            "http",
            "percentage"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Generation failed' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 54,
          "value": "500",
          "contexts": [
            "http",
            "percentage"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to get generation' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\visual\\analyze\\route.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 22,
          "value": "0.92",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 0.92,",
          "suggestedName": "CONSTANT_0_92"
        },
        {
          "line": 32,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Analysis failed' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 51,
          "value": "0.89",
          "contexts": [],
          "usage": "confidence",
          "snippet": "confidence: 0.89",
          "suggestedName": "CONSTANT_0_89"
        },
        {
          "line": 59,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to get analysis' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\health\\route.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 28,
          "value": "100",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "memoryPercentage",
          "snippet": "const memoryPercentage = (memoryUsage.heapUsed / memoryUsage.heapTotal) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        },
        {
          "line": 55,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "}, { status: 500 });",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 74,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "}, { status: 500 });",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 80,
          "value": "200",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "return new NextResponse(null, { status: 200 });",
          "suggestedName": "HTTP_STATUS_OK"
        }
      ]
    },
    {
      "file": "src\\app\\api\\admin\\users\\route.ts",
      "count": 4,
      "topNumbers": [
        {
          "line": 18,
          "value": "2",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: i % 2 === 0 ? 'active' : 'inactive',",
          "suggestedName": "HTTP_STATUS_2"
        },
        {
          "line": 28,
          "value": "1247",
          "contexts": [
            "limit"
          ],
          "usage": "total",
          "snippet": "total: 1247,",
          "suggestedName": "MAX_TOTAL_1247"
        },
        {
          "line": 29,
          "value": "1247",
          "contexts": [
            "limit"
          ],
          "usage": "pages",
          "snippet": "pages: Math.ceil(1247 / limit)",
          "suggestedName": "MAX_PAGES_1247"
        },
        {
          "line": 44,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\utils\\validation.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 21,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return phoneRegex.test(phone) && phone.replace(/\\D/g, '').length >= 10;",
          "suggestedName": "MAX_VALUE_10"
        },
        {
          "line": 26,
          "value": "8",
          "contexts": [],
          "usage": "passwordRegex",
          "snippet": "const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;",
          "suggestedName": "CONSTANT_8"
        },
        {
          "line": 160,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "isValid: Object.keys(errors).length === 0,",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\config.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 171,
          "value": "0",
          "contexts": [],
          "usage": "_equalIndex",
          "snippet": "}; const _equalIndex = trimmedLine.indexOf('='); if (equalIndex > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 172,
          "value": "0",
          "contexts": [],
          "usage": "_key",
          "snippet": "const _key = trimmedLine.substring(0, equalIndex).trim(, let value = trimmedLine.substring(equalIndex + 1).trim(); // Handle environment variable substitution;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 172,
          "value": "1",
          "contexts": [],
          "usage": "_key",
          "snippet": "const _key = trimmedLine.substring(0, equalIndex).trim(, let value = trimmedLine.substring(equalIndex + 1).trim(); // Handle environment variable substitution;",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\tutorials\\core\\validation.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 46,
          "value": "0.1",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random() > 0.1;",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 58,
          "value": "0.2",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random() > 0.2;",
          "suggestedName": "CONSTANT_0_2"
        },
        {
          "line": 66,
          "value": "0.1",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random() > 0.1;",
          "suggestedName": "TEN_PERCENT"
        }
      ]
    },
    {
      "file": "src\\lib\\collaboration\\CommentManager.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 68,
          "value": "36",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2) + Date.now().toString(36);",
          "suggestedName": "CONSTANT_36"
        },
        {
          "line": 68,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2) + Date.now().toString(36);",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 68,
          "value": "36",
          "contexts": [],
          "usage": "value",
          "snippet": "return Math.random().toString(36).substring(2) + Date.now().toString(36);",
          "suggestedName": "CONSTANT_36"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\specialized\\QAAgent.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 240,
          "value": "2",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "if (msg.severity === 2) {i}ssues.critical++;",
          "suggestedName": "TIMEOUT_2_MS"
        },
        {
          "line": 254,
          "value": "80",
          "contexts": [],
          "usage": "value",
          "snippet": "if (analysis.coverage.lines < 80) {",
          "suggestedName": "CONSTANT_80"
        },
        {
          "line": 275,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (failures.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\runners\\base-agent.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 64,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "failed",
          "snippet": "logger.error('Heartbeat, failed:', error)}, 30000) // 30 seconds",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 64,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "failed",
          "snippet": "logger.error('Heartbeat, failed:', error)}, 30000) // 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        },
        {
          "line": 75,
          "value": "5000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 5000))}",
          "suggestedName": "FIVE_SECONDS_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\docker\\ContainerOrchestrator.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 27,
          "value": "10",
          "contexts": [
            "limit"
          ],
          "usage": "maxContainers",
          "snippet": "maxContainers: 10,",
          "suggestedName": "MAX_MAXCONTAINERS_10"
        },
        {
          "line": 32,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "healthCheckInterval",
          "snippet": "healthCheckInterval: 30000, // 30 seconds",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 32,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "healthCheckInterval",
          "snippet": "healthCheckInterval: 30000, // 30 seconds",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\docker\\orchestrator\\DockerfileTemplateManager.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 27,
          "value": "1001",
          "contexts": [],
          "usage": "value",
          "snippet": "RUN addgroup -g 1001 -S agent && \\\\",
          "suggestedName": "CONSTANT_1001"
        },
        {
          "line": 28,
          "value": "1001",
          "contexts": [],
          "usage": "value",
          "snippet": "adduser -S -u 1001 -G agent agent",
          "suggestedName": "CONSTANT_1001"
        },
        {
          "line": 34,
          "value": "3",
          "contexts": [
            "time"
          ],
          "usage": "interval",
          "snippet": "HEALTHCHECK --interval=30s --timeout=3s --start-period=40s --retries=3 \\\\",
          "suggestedName": "TIMEOUT_3_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\docker\\orchestrator\\ContainerManager.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 122,
          "value": "1024",
          "contexts": [
            "limit"
          ],
          "usage": "1024",
          "snippet": "return cpuLimit ? cpuLimit * 1024 : 512; // Default to 0.5 CPU",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 122,
          "value": "512",
          "contexts": [
            "limit"
          ],
          "usage": "1024",
          "snippet": "return cpuLimit ? cpuLimit * 1024 : 512; // Default to 0.5 CPU",
          "suggestedName": "MAX_1024_512"
        },
        {
          "line": 122,
          "value": "0.5",
          "contexts": [
            "limit"
          ],
          "usage": "1024",
          "snippet": "return cpuLimit ? cpuLimit * 1024 : 512; // Default to 0.5 CPU",
          "suggestedName": "HALF"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\bmad\\architecture\\data-model-designer.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 11,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace('{components}', JSON.stringify(components, null, 2))",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 15,
          "value": "0.3",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.3,",
          "suggestedName": "CONSTANT_0_3"
        },
        {
          "line": 50,
          "value": "50",
          "contexts": [],
          "usage": "value",
          "snippet": "diagram += '=' .repeat(50) + '\\n\\n';",
          "suggestedName": "CONSTANT_50"
        }
      ]
    },
    {
      "file": "src\\components\\WelcomeScreen.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 103,
          "value": "300",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 300)",
          "suggestedName": "CONSTANT_300"
        },
        {
          "line": 117,
          "value": "-300",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "className",
          "snippet": "<Card key={persona.id} className={`cursor-pointer transition-all duration-300 hover: shadow-lg hover:scale-105 ${",
          "suggestedName": "TIMEOUT__300_MS"
        },
        {
          "line": 117,
          "value": "-105",
          "contexts": [
            "time",
            "percentage"
          ],
          "usage": "className",
          "snippet": "<Card key={persona.id} className={`cursor-pointer transition-all duration-300 hover: shadow-lg hover:scale-105 ${",
          "suggestedName": "TIMEOUT__105_MS"
        }
      ]
    },
    {
      "file": "src\\components\\ProgressTracker.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 55,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{index < steps.length - 1  && (",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 104,
          "value": "1",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "{Math.round((steps.findIndex(s => getStepStatus(s.id, currentStep) === 'current') / (steps.length - 1)) * 100)}%</span>",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 104,
          "value": "100",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "{Math.round((steps.findIndex(s => getStepStatus(s.id, currentStep) === 'current') / (steps.length - 1)) * 100)}%</span>",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\form-enhanced\\StateIcon.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 19,
          "value": "16",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "return <XCircleIcon size={16} className=\"text-red-500\" />;",
          "suggestedName": "MAX_SIZE_16"
        },
        {
          "line": 21,
          "value": "16",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "return <CheckIcon size={16} className=\"text-green-500\" />;",
          "suggestedName": "MAX_SIZE_16"
        },
        {
          "line": 23,
          "value": "16",
          "contexts": [
            "limit",
            "dimension"
          ],
          "usage": "size",
          "snippet": "return <AlertTriangleIcon size={16} className=\"text-yellow-500\" />;",
          "suggestedName": "MAX_SIZE_16"
        }
      ]
    },
    {
      "file": "src\\components\\layout\\ResponsiveLayout.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 14,
          "value": "640",
          "contexts": [
            "dimension"
          ],
          "usage": "_width",
          "snippet": "const _width = window.innerWidth, if (width < 640) {;",
          "suggestedName": "_WIDTH_640PX"
        },
        {
          "line": 16,
          "value": "1024",
          "contexts": [
            "dimension"
          ],
          "usage": "value",
          "snippet": "}; else if (width < 1024) {",
          "suggestedName": "BYTES_PER_KB"
        },
        {
          "line": 17,
          "value": "1536",
          "contexts": [
            "dimension",
            "port"
          ],
          "usage": "value",
          "snippet": "setViewport('tablet')} else if (width < 1536) {",
          "suggestedName": "VALUE_1536PX"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\AdminPanel.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 50,
          "value": "50",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "value",
          "snippet": "adminService.getSystemStats(, adminService.getUsers(1, 50),",
          "suggestedName": "TIMEOUT_50_MS"
        },
        {
          "line": 51,
          "value": "20",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "value",
          "snippet": "adminService.getContentForModeration(1, 20, adminService.getSystemConfiguration(),",
          "suggestedName": "MAX_VALUE_20"
        },
        {
          "line": 52,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "adminService.getAdminActivity(1, 50);",
          "suggestedName": "MAX_VALUE_50"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\utils.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 37,
          "value": "2",
          "contexts": [],
          "usage": "priorityOrder",
          "snippet": "const priorityOrder = { critical: 0, high: 1, medium: 2, low: 3 };",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 37,
          "value": "3",
          "contexts": [],
          "usage": "priorityOrder",
          "snippet": "const priorityOrder = { critical: 0, high: 1, medium: 2, low: 3 };",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 44,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "i",
          "snippet": "for (let i = 0; i < sortedIssues.length; i += maxIssuesPerBatch) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\SafetyGuidelines.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 11,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "• <strong>Small batches</strong>: Process only 3-5 issues at a time",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 11,
          "value": "-5",
          "contexts": [],
          "usage": "value",
          "snippet": "• <strong>Small batches</strong>: Process only 3-5 issues at a time",
          "suggestedName": "CONSTANT_NEGATIVE_5"
        },
        {
          "line": 14,
          "value": "30",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "• <strong>Regular breaks</strong>: 30-second pause between batches",
          "suggestedName": "DAYS_PER_MONTH_APPROX"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\IssuesList.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 13,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (issues.length === 0) return null;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 24,
          "value": "-3",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "className={`flex items-center gap-3 p-2 rounded ${",
          "suggestedName": "TIMEOUT__3_MS"
        },
        {
          "line": 24,
          "value": "-2",
          "contexts": [
            "time"
          ],
          "usage": "className",
          "snippet": "className={`flex items-center gap-3 p-2 rounded ${",
          "suggestedName": "TIMEOUT__2_MS"
        }
      ]
    },
    {
      "file": "src\\app\\layout.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 57,
          "value": "1200",
          "contexts": [
            "dimension"
          ],
          "usage": "width",
          "snippet": "width: 1200,",
          "suggestedName": "WIDTH_1200PX"
        },
        {
          "line": 58,
          "value": "630",
          "contexts": [
            "dimension"
          ],
          "usage": "height",
          "snippet": "height: 630,",
          "suggestedName": "HEIGHT_630PX"
        },
        {
          "line": 75,
          "value": "5",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "maximumScale",
          "snippet": "maximumScale: 5,",
          "suggestedName": "TIMEOUT_5_MS"
        }
      ]
    },
    {
      "file": "src\\app\\press\\page.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 122,
          "value": "555",
          "contexts": [],
          "usage": "className",
          "snippet": "<p className=\"text-gray-600\">+1 (555) 123-4567</p>",
          "suggestedName": "CONSTANT_555"
        },
        {
          "line": 122,
          "value": "123",
          "contexts": [],
          "usage": "className",
          "snippet": "<p className=\"text-gray-600\">+1 (555) 123-4567</p>",
          "suggestedName": "CONSTANT_123"
        },
        {
          "line": 122,
          "value": "-4567",
          "contexts": [],
          "usage": "className",
          "snippet": "<p className=\"text-gray-600\">+1 (555) 123-4567</p>",
          "suggestedName": "CONSTANT_NEGATIVE_4567"
        }
      ]
    },
    {
      "file": "src\\app\\form-builder\\page.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 78,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{formElements.length === 0 ? (",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 93,
          "value": "3",
          "contexts": [],
          "usage": "rows",
          "snippet": "rows={3} />",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 124,
          "value": "3",
          "contexts": [],
          "usage": "rows",
          "snippet": "rows={3} />",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\app\\docs\\[slug]\\page.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 28,
          "value": "1",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "<h3>Step 1: Create Your Account</h3>",
          "suggestedName": "SECOND_INDEX"
        },
        {
          "line": 31,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "<h3>Step 2: Set Up Your First Project</h3>",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 34,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "<h3>Step 3: Explore Features</h3>",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\app\\demo\\design-system\\page.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 48,
          "value": "111827",
          "contexts": [],
          "usage": "className",
          "snippet": "<p className=\"text-xs text-gray-500\">#111827</p>",
          "suggestedName": "CONSTANT_111827"
        },
        {
          "line": 99,
          "value": "2",
          "contexts": [],
          "usage": "className",
          "snippet": "<h2 className=\"text-3xl font-bold text-gray-900\">Heading 2</h2>",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 103,
          "value": "3",
          "contexts": [],
          "usage": "className",
          "snippet": "<h3 className=\"text-2xl font-bold text-gray-900\">Heading 3</h3>",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\app\\demo\\data-flexibility\\page.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 15,
          "value": "2",
          "contexts": [],
          "usage": "id",
          "snippet": "{ id: 2, name: 'Bob Smith', email: 'bob@example.com', role: 'user' },",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 16,
          "value": "3",
          "contexts": [],
          "usage": "id",
          "snippet": "{ id: 3, name: 'Carol Davis', email: 'carol@example.com', role: 'editor' }",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 106,
          "value": "3",
          "contexts": [],
          "usage": "Insight",
          "snippet": "<strong>AI Insight:</strong> This data shows 3 users with different roles.",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\app\\collaborate\\page.tsx",
      "count": 3,
      "topNumbers": [
        {
          "line": 25,
          "value": "5",
          "contexts": [],
          "usage": "members",
          "snippet": "members: 5,",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 33,
          "value": "3",
          "contexts": [],
          "usage": "members",
          "snippet": "members: 3,",
          "suggestedName": "CONSTANT_3"
        },
        {
          "line": 41,
          "value": "2",
          "contexts": [],
          "usage": "members",
          "snippet": "members: 2,",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\app\\api\\semantic\\index\\route.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 31,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Invalid request', details: error.errors }, { status: 400",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 35,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Indexing failed', message: error instanceof Error ? error.message : 'Unknown error' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 53,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Delete failed', message: error instanceof Error ? error.message : 'Unknown error' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\email\\test\\route.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 25,
          "value": "503",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 503",
          "suggestedName": "HTTP_STATUS_503"
        },
        {
          "line": 52,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 74,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\agents\\pulse-config\\route.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 13,
          "value": "500",
          "contexts": [
            "http",
            "percentage"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to update pulse configuration' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 20,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "config",
          "snippet": "const config = { interval: 30000,",
          "suggestedName": "THIRTY_SECONDS_MS"
        },
        {
          "line": 27,
          "value": "500",
          "contexts": [
            "http",
            "percentage"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to get pulse configuration' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\agent-chat\\route.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 7,
          "value": "300",
          "contexts": [
            "time",
            "limit",
            "percentage"
          ],
          "usage": "maxDuration",
          "snippet": "export const maxDuration = 300; // 5 minutes for agent processing",
          "suggestedName": "TIMEOUT_300_MS"
        },
        {
          "line": 7,
          "value": "5",
          "contexts": [
            "time",
            "limit",
            "percentage"
          ],
          "usage": "maxDuration",
          "snippet": "export const maxDuration = 300; // 5 minutes for agent processing",
          "suggestedName": "TIMEOUT_5_MS"
        },
        {
          "line": 52,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 500 }",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\admin\\direct-auth\\route.ts",
      "count": 3,
      "topNumbers": [
        {
          "line": 13,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to get auth status' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 32,
          "value": "401",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Invalid password' }, { status: 401",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        },
        {
          "line": 37,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Authentication failed' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\lib\\validate-env.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 32,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (errors.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 45,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return errors.length === 0",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\admin-auth.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 104,
          "value": "8",
          "contexts": [
            "time"
          ],
          "usage": "expiresIn",
          "snippet": "return jwt.sign(payload, this.jwtSecret, { expiresIn: '8h', // 8 hour session,",
          "suggestedName": "TIMEOUT_8_MS"
        },
        {
          "line": 130,
          "value": "7",
          "contexts": [],
          "usage": "value",
          "snippet": "return authHeader.substring(7)}",
          "suggestedName": "DAYS_PER_WEEK"
        }
      ]
    },
    {
      "file": "src\\lib\\validation\\index.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 12,
          "value": "3",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "_CreateProjectSchema",
          "snippet": "export const _CreateProjectSchema = z.object({ name: z.string().min(3).max(50, type: z.enum(['web', 'mobile', 'desktop', 'api', 'fullstack']),",
          "suggestedName": "MAX__CREATEPROJECTSCHEMA_3"
        },
        {
          "line": 12,
          "value": "50",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "_CreateProjectSchema",
          "snippet": "export const _CreateProjectSchema = z.object({ name: z.string().min(3).max(50, type: z.enum(['web', 'mobile', 'desktop', 'api', 'fullstack']),",
          "suggestedName": "MAX__CREATEPROJECTSCHEMA_50"
        }
      ]
    },
    {
      "file": "src\\lib\\validation\\decorators.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 32,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "statusCode",
          "snippet": "statusCode: 400,",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 255,
          "value": "400",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "return res.status(400).json(apiError);",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        }
      ]
    },
    {
      "file": "src\\lib\\tutorials\\tutorials\\project-creation.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 13,
          "value": "150",
          "contexts": [],
          "usage": "points",
          "snippet": "points: 150,",
          "suggestedName": "CONSTANT_150"
        },
        {
          "line": 60,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "expected",
          "snippet": "expected: 50, // Minimum characters",
          "suggestedName": "MAX_EXPECTED_50"
        }
      ]
    },
    {
      "file": "src\\lib\\tutorials\\tutorials\\ai-assistant.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 13,
          "value": "200",
          "contexts": [],
          "usage": "points",
          "snippet": "points: 200,",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 60,
          "value": "10",
          "contexts": [],
          "usage": "expected",
          "snippet": "expected: 10,",
          "suggestedName": "CONSTANT_10"
        }
      ]
    },
    {
      "file": "src\\lib\\docs\\generators\\api-generator.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 101,
          "value": "2",
          "contexts": [
            "http"
          ],
          "usage": "value",
          "snippet": "content += JSON.stringify(endpoint.response, null, 2);",
          "suggestedName": "HTTP_STATUS_2"
        },
        {
          "line": 115,
          "value": "2",
          "contexts": [
            "http"
          ],
          "usage": "expectedOutput",
          "snippet": "expectedOutput: JSON.stringify(endpoint.response, null, 2)",
          "suggestedName": "HTTP_STATUS_2"
        }
      ]
    },
    {
      "file": "src\\lib\\database\\services\\activity-service.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 78,
          "value": "2",
          "contexts": [],
          "usage": "projects",
          "snippet": "projects: 2,",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 79,
          "value": "15",
          "contexts": [
            "percentage"
          ],
          "usage": "aiGenerations",
          "snippet": "aiGenerations: 15,",
          "suggestedName": "PERCENTAGE_15"
        }
      ]
    },
    {
      "file": "src\\lib\\collaboration\\AuthenticationService.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 28,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (users.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 48,
          "value": "-4",
          "contexts": [],
          "usage": "name",
          "snippet": "name: 'User ' + userId.slice(-4),",
          "suggestedName": "CONSTANT_NEGATIVE_4"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\docker\\orchestrator\\DockerImageBuilder.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 55,
          "value": "200",
          "contexts": [],
          "usage": "value",
          "snippet": "res.writeHead(200);",
          "suggestedName": "HTTP_STATUS_OK"
        },
        {
          "line": 59,
          "value": "3000",
          "contexts": [],
          "usage": "value",
          "snippet": "server.listen(3000);`;",
          "suggestedName": "CONSTANT_3000"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\bmad\\architecture\\component-designer.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 14,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": ".replace('{userStories}', JSON.stringify(userStories, null, 2));",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 17,
          "value": "0.4",
          "contexts": [],
          "usage": "temperature",
          "snippet": "temperature: 0.4,",
          "suggestedName": "CONSTANT_0_4"
        }
      ]
    },
    {
      "file": "src\\components\\providers.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 14,
          "value": "60",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "staleTime",
          "snippet": "staleTime: 60 * 1000, // 1 minute",
          "suggestedName": "SECONDS_PER_MINUTE"
        },
        {
          "line": 14,
          "value": "1000",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "staleTime",
          "snippet": "staleTime: 60 * 1000, // 1 minute",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\components\\EnvVariableEditor.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 99,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return Object.keys(errors).length === 0",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 143,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (toAdd.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\ClientRequirementsCapture.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 102,
          "value": "8",
          "contexts": [],
          "usage": "rows",
          "snippet": "const rows={8};",
          "suggestedName": "CONSTANT_8"
        },
        {
          "line": 182,
          "value": "1",
          "contexts": [],
          "usage": "value",
          "snippet": "{index + 1}</div>",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\AgentPulseMonitor.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 82,
          "value": "2000",
          "contexts": [
            "time",
            "http"
          ],
          "usage": "interval",
          "snippet": "const interval = setInterval(fetchStatus, 2000);",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 186,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "<Badge>{count || 0}</Badge>",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\utils\\DynamicImport.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 102,
          "value": "0.1",
          "contexts": [
            "limit"
          ],
          "usage": "threshold",
          "snippet": "threshold: 0.1,",
          "suggestedName": "TEN_PERCENT"
        },
        {
          "line": 130,
          "value": "0.1",
          "contexts": [
            "limit"
          ],
          "usage": "threshold",
          "snippet": "threshold = 0.1,",
          "suggestedName": "TEN_PERCENT"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\button-enhanced.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 243,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "const strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        },
        {
          "line": 277,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "setTimeout(() => setCopied(false, 2000)",
          "suggestedName": "TIMEOUT_2000_MS"
        }
      ]
    },
    {
      "file": "src\\components\\settings\\white-label\\AdvancedTab.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 109,
          "value": "6",
          "contexts": [],
          "usage": "rows",
          "snippet": "rows={6}",
          "suggestedName": "CONSTANT_6"
        },
        {
          "line": 120,
          "value": "4",
          "contexts": [],
          "usage": "rows",
          "snippet": "rows={4}",
          "suggestedName": "CONSTANT_4"
        }
      ]
    },
    {
      "file": "src\\components\\forms\\ValidatedProjectForm.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 111,
          "value": "4",
          "contexts": [],
          "usage": "rows",
          "snippet": "const rows={4}",
          "suggestedName": "CONSTANT_4"
        },
        {
          "line": 270,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "isValid: Object.keys(errors).length === 0",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\backend\\BackendSelector.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 216,
          "value": "1337",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "http",
          "snippet": "<li>Access Strapi admin at, http: //localhost:1337/admin</li>",
          "suggestedName": "MAX_HTTP_1337"
        },
        {
          "line": 223,
          "value": "8080",
          "contexts": [
            "http"
          ],
          "usage": "http",
          "snippet": "<li>Access NocoDB at, http://localhost:8080</li>",
          "suggestedName": "HTTP_STATUS_8080"
        }
      ]
    },
    {
      "file": "src\\components\\analytics\\advanced\\RevenueTab.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 45,
          "value": "400",
          "contexts": [
            "dimension"
          ],
          "usage": "width",
          "snippet": "<ResponsiveContainer width=\"100%\" height={400}>",
          "suggestedName": "HTTP_STATUS_BAD_REQUEST"
        },
        {
          "line": 56,
          "value": "2",
          "contexts": [
            "dimension"
          ],
          "usage": "strokeWidth",
          "snippet": "strokeWidth={2}",
          "suggestedName": "STROKEWIDTH_2PX"
        }
      ]
    },
    {
      "file": "src\\apps\\ui-builder\\components\\BuilderCanvas.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 28,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{components.length === 0 ? (\r</div>",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 32,
          "value": "0",
          "contexts": [],
          "usage": "tabIndex",
          "snippet": "<div; key={c.id} onClick={() => handleComponentClick(c)}</div role=\"button\" tabIndex={0}>",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\app\\settings\\white-label\\page.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 51,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "resolve",
          "snippet": "await new Promise(resolve => setTimeout(resolve, 2000));",
          "suggestedName": "TIMEOUT_2000_MS"
        },
        {
          "line": 75,
          "value": "2",
          "contexts": [],
          "usage": "exportData",
          "snippet": "const exportData = JSON.stringify(config, null, 2);",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\app\\prompts\\page.tsx",
      "count": 2,
      "topNumbers": [
        {
          "line": 14,
          "value": "2",
          "contexts": [],
          "usage": "id",
          "snippet": "{ id: 2, title: 'Bug Fix Helper', content: 'Help me debug this issue...' },",
          "suggestedName": "CONSTANT_2"
        },
        {
          "line": 54,
          "value": "4",
          "contexts": [],
          "usage": "rows",
          "snippet": "rows={4}",
          "suggestedName": "CONSTANT_4"
        }
      ]
    },
    {
      "file": "src\\app\\marketplace\\utils\\filters.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 42,
          "value": "0",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "averageRating",
          "snippet": "const averageRating = items.reduce((sum, item) => sum + item.rating, 0) / items.length;",
          "suggestedName": "FIRST_INDEX"
        },
        {
          "line": 47,
          "value": "1000",
          "contexts": [
            "limit"
          ],
          "usage": "totalDownloads",
          "snippet": "totalDownloads: totalDownloads > 1000 ? `${Math.round(totalDownloads / 1000)}K+` : totalDownloads.toString(),",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\app\\api\\mcp\\status\\route.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 15,
          "value": "5",
          "contexts": [],
          "usage": "connections",
          "snippet": "connections: 5,",
          "suggestedName": "CONSTANT_5"
        },
        {
          "line": 25,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "}, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\env\\status\\route.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 19,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to get environment status' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        },
        {
          "line": 34,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to update environment variable' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\cycle-detection\\route.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 35,
          "value": "0.95",
          "contexts": [],
          "usage": "relevance",
          "snippet": "relevance: 0.95",
          "suggestedName": "CONSTANT_0_95"
        },
        {
          "line": 45,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Cycle detection failed' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\admin\\users\\[id]\\route.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 17,
          "value": "404",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'User not found' }, { status: 404",
          "suggestedName": "HTTP_STATUS_NOT_FOUND"
        },
        {
          "line": 34,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Failed to update user' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\admin\\debug\\route.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 13,
          "value": "403",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Access denied' }, { status: 403",
          "suggestedName": "HTTP_STATUS_FORBIDDEN"
        },
        {
          "line": 32,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Debug information unavailable' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\admin\\auth\\login\\route.ts",
      "count": 2,
      "topNumbers": [
        {
          "line": 22,
          "value": "401",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 401",
          "suggestedName": "HTTP_STATUS_UNAUTHORIZED"
        },
        {
          "line": 30,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\services\\analytics-providers.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 76,
          "value": "1000",
          "contexts": [],
          "usage": "time",
          "snippet": "time: event.timestamp.getTime() / 1000,",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\packages\\self-check\\module-checker.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 32,
          "value": "0",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "return { status: missingModules.length === 0",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\packages\\self-check\\dependency-auditor.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 25,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (Object.keys(outdated) {.}length === 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\token-optimization-engine.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 168,
          "value": "0.85",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "isNearCapacity(threshold: number = 0.85): boolean {",
          "suggestedName": "MAX_NUMBER_0_85"
        }
      ]
    },
    {
      "file": "src\\lib\\project-storage.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 203,
          "value": "2",
          "contexts": [],
          "usage": "content",
          "snippet": "content: typeof content === 'string' ? content : JSON.stringify(content, null, 2, type: path.endsWith('.json') ? 'json'  : null",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\lib\\env-config.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 14,
          "value": "32",
          "contexts": [
            "limit"
          ],
          "usage": "NEXTAUTH_URL",
          "snippet": "NEXTAUTH_URL: z.string().url(, NEXTAUTH_SECRET: z.string().min(32, // OAuth (optional)",
          "suggestedName": "MAX_NEXTAUTH_URL_32"
        }
      ]
    },
    {
      "file": "src\\lib\\collaboration.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 52,
          "value": "50",
          "contexts": [
            "limit"
          ],
          "usage": "number",
          "snippet": "static async getProjectChanges(projectId: string, limit: number = 50): Promise<any[]> {",
          "suggestedName": "MAX_NUMBER_50"
        }
      ]
    },
    {
      "file": "src\\lib\\tutorials\\tutorials\\getting-started.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 13,
          "value": "100",
          "contexts": [],
          "usage": "points",
          "snippet": "points: 100,",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\tutorials\\tutorials\\deployment.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 13,
          "value": "250",
          "contexts": [],
          "usage": "points",
          "snippet": "points: 250,",
          "suggestedName": "CONSTANT_250"
        }
      ]
    },
    {
      "file": "src\\lib\\tutorials\\tutorials\\advanced-features.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 13,
          "value": "300",
          "contexts": [],
          "usage": "points",
          "snippet": "points: 300,",
          "suggestedName": "CONSTANT_300"
        }
      ]
    },
    {
      "file": "src\\lib\\ide\\kiro-client.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 131,
          "value": "100",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "KiroProjectSchema",
          "snippet": "export const KiroProjectSchema = z.object({ name: z.string().min(1).max(100, description: z.string().optional(, type: z.enum(['web', 'mobile', 'desktop', 'api', 'library']),",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\lib\\collaboration\\SocketEventHandler.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 166,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (updatedSockets.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\backend\\types.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 108,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "number",
          "snippet": "public statusCode: number = 500;",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\lib\\backend\\adapter-factory.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 42,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "if (currentConfig) { return $2  };",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\types.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 25,
          "value": "1024",
          "contexts": [
            "limit",
            "port"
          ],
          "usage": "cpu",
          "snippet": "export interface ResourceLimits { cpu: number;      // CPU shares (e.g., 1024)",
          "suggestedName": "BYTES_PER_KB"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\docker\\orchestrator\\NetworkManager.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 48,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "networks",
          "snippet": "const networks = output.trim().split('\\n').filter(name => name.length > 0);",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\docker\\orchestrator\\HealthCheckManager.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 9,
          "value": "30000",
          "contexts": [
            "time"
          ],
          "usage": "number",
          "snippet": "constructor(containers: Map<string, ContainerizedAgent>, checkInterval: number = 30000) {",
          "suggestedName": "THIRTY_SECONDS_MS"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\communication\\MessageValidator.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 64,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "return field && data[field] && data[field].toString().trim().length > 0;",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\lib\\agents\\communication\\MessageRouter.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 66,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (participants.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\hooks\\useSemanticSearch.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 133,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "_timer",
          "snippet": "const _timer = setTimeout(indexCurrentPage, 1000);",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\hooks\\usePerformance.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 4,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "renderCount",
          "snippet": "const renderCount = useRef(0);",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\PWAInstallPrompt.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 28,
          "value": "30000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 30000);",
          "suggestedName": "CONSTANT_30000"
        }
      ]
    },
    {
      "file": "src\\components\\EnvStatusDashboard.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 84,
          "value": "100",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "value",
          "snippet": "{ (status.summary.valid / status.summary.total) * 100;",
          "suggestedName": "DEFAULT_PAGE_SIZE"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\dropdown-menu.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 53,
          "value": "4",
          "contexts": [],
          "usage": "sideOffset",
          "snippet": ">(({ className, sideOffset = 4, ...props }, ref) => (\\n    <DropdownMenuPrimitive.Portal    />.Content;</DropdownMenuPrimitive>",
          "suggestedName": "CONSTANT_4"
        }
      ]
    },
    {
      "file": "src\\components\\ui\\form-enhanced\\TextareaEnhanced.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 27,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "currentLength",
          "snippet": "const currentLength = typeof value === 'string' ? value.length : 0;",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\settings\\white-label\\BrandingTab.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 42,
          "value": "3",
          "contexts": [],
          "usage": "rows",
          "snippet": "rows={3}",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\components\\layout\\Footer.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 73,
          "value": "2024",
          "contexts": [],
          "usage": "value",
          "snippet": "© 2024 AI Guided SaaS. All rights reserved.",
          "suggestedName": "CONSTANT_2024"
        }
      ]
    },
    {
      "file": "src\\components\\ide\\kiro\\BasicInfoForm.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 36,
          "value": "3",
          "contexts": [],
          "usage": "rows",
          "snippet": "rows={3}",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\components\\health\\AlertsPanel.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 33,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{alerts.length === 0 ? (",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\error\\ErrorBoundary.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 127,
          "value": "2000",
          "contexts": [
            "time"
          ],
          "usage": "copied",
          "snippet": "setTimeout(() => this.setState({ copied: false }), 2000);",
          "suggestedName": "TIMEOUT_2000_MS"
        }
      ]
    },
    {
      "file": "src\\components\\common\\LoadingStates.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 13,
          "value": "3",
          "contexts": [],
          "usage": "SkeletonText",
          "snippet": "export function SkeletonText({ lines = 3 }: { lines?: number }) {",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\components\\builder\\NoCodeBuilder.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 54,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{components.length === 0 && (",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\analytics\\advanced\\EngagementTab.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 25,
          "value": "1",
          "contexts": [],
          "usage": "className",
          "snippet": "<span className=\"text-sm font-medium\">{index + 1}</span>",
          "suggestedName": "SECOND_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\ProcessingLog.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 10,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (processingLog.length === 0) return null;",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\HeaderSection.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 49,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{issues.length > 0 && !isProcessing && (",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\components\\admin\\safe-mode\\CurrentBatchSection.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 12,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "if (currentBatch.length === 0) return null;",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\apps\\ui-builder\\components\\PreviewPane.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 10,
          "value": "0",
          "contexts": [
            "limit"
          ],
          "usage": "value",
          "snippet": "{components.length === 0 ? (\r</div>",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\apps\\ui-builder\\components\\DeploymentPanel.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 9,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 1000)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\apps\\ui-builder\\components\\ComponentPropsEditor.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 24,
          "value": "3",
          "contexts": [],
          "usage": "value",
          "snippet": "{{3}",
          "suggestedName": "CONSTANT_3"
        }
      ]
    },
    {
      "file": "src\\apps\\ui-builder\\components\\AssistantPrompt.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 36,
          "value": "0",
          "contexts": [
            "limit",
            "percentage"
          ],
          "usage": "value",
          "snippet": "if (generatedComponents.length > 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\app\\settings\\marketplace\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 86,
          "value": "-4",
          "contexts": [],
          "usage": "className",
          "snippet": "<h4 className=\"font-medium\">OpenAI GPT-4</h4>",
          "suggestedName": "CONSTANT_NEGATIVE_4"
        }
      ]
    },
    {
      "file": "src\\app\\projects\\[id]\\editor\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 17,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 1000);",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\app\\projects\\new-guided\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 24,
          "value": "2000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 2000);",
          "suggestedName": "CONSTANT_2000"
        }
      ]
    },
    {
      "file": "src\\app\\marketplace\\components\\MarketplaceGrid.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 13,
          "value": "0",
          "contexts": [
            "time",
            "limit"
          ],
          "usage": "value",
          "snippet": "if (items.length === 0) {",
          "suggestedName": "FIRST_INDEX"
        }
      ]
    },
    {
      "file": "src\\app\\docs\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 32,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 1000);",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\app\\cookies\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 19,
          "value": "2025",
          "contexts": [],
          "usage": "updated",
          "snippet": "Last updated: January 2025",
          "suggestedName": "CONSTANT_2025"
        }
      ]
    },
    {
      "file": "src\\app\\community\\guidelines\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 146,
          "value": "2025",
          "contexts": [],
          "usage": "updated",
          "snippet": "Last updated: January 2025",
          "suggestedName": "CONSTANT_2025"
        }
      ]
    },
    {
      "file": "src\\app\\auth\\signup\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 24,
          "value": "1000",
          "contexts": [
            "time"
          ],
          "usage": "value",
          "snippet": "setTimeout(() => setIsLoading(false), 1000)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\app\\api\\cron\\cache-warm\\route.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 36,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "status: 500,",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\auth\\session\\route.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 29,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "{ status: 500 }",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\agents\\pulse-status\\route.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 31,
          "value": "500",
          "contexts": [
            "http"
          ],
          "usage": "status",
          "snippet": "}, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\api\\admin\\route.ts",
      "count": 1,
      "topNumbers": [
        {
          "line": 13,
          "value": "500",
          "contexts": [
            "limit",
            "http"
          ],
          "usage": "error",
          "snippet": "return NextResponse.json({ error: 'Admin service unavailable' }, { status: 500",
          "suggestedName": "HTTP_STATUS_INTERNAL_SERVER_ERROR"
        }
      ]
    },
    {
      "file": "src\\app\\admin\\mcp\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 33,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 1000)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    },
    {
      "file": "src\\app\\admin\\debug\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 16,
          "value": "2",
          "contexts": [],
          "usage": "value",
          "snippet": "{JSON.stringify(debugInfo, null, 2)}",
          "suggestedName": "CONSTANT_2"
        }
      ]
    },
    {
      "file": "src\\app\\admin\\analytics\\page.tsx",
      "count": 1,
      "topNumbers": [
        {
          "line": 30,
          "value": "1000",
          "contexts": [],
          "usage": "value",
          "snippet": "}, 1000)",
          "suggestedName": "MILLISECONDS_PER_SECOND"
        }
      ]
    }
  ],
  "summary": {
    "averagePerFile": "8.33",
    "filesWithMostMagicNumbers": [
      "src\\lib\\design-system\\theme.ts (106)",
      "src\\lib\\analytics.ts (101)",
      "src\\lib\\design-system.ts (83)",
      "src\\app\\settings\\resources\\page.tsx (83)",
      "src\\lib\\automation\\workflows\\notification-system.ts (73)",
      "src\\lib\\analytics\\PredictiveAnalytics.ts (67)",
      "src\\lib\\automation\\workflows\\testing-automation.ts (65)",
      "src\\lib\\agents\\archon\\AgentRefinerAgent.ts (63)",
      "src\\components\\collaboration\\CollaborationDashboard.tsx (63)",
      "src\\lib\\claude-code-integration.ts (62)"
    ]
  }
}