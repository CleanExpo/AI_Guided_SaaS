{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Environment Configuration Schema",
  "description": "JSON Schema for validating environment variable configurations",
  "type": "object",
  "required": ["version", "services", "environments", "validation"],
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Semantic version of the configuration"
    },
    "lastUpdated": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of last update"
    },
    "services": {
      "type": "object",
      "description": "Service configurations",
      "patternProperties": {
        "^[a-z]+$": {
          "type": "object",
          "required": ["name", "category", "status", "variables"],
          "properties": {
            "name": {
              "type": "string",
              "description": "Human-readable service name"
            },
            "category": {
              "type": "string",
              "enum": ["database", "cache", "ai", "auth", "deployment", "payments", "monitoring"],
              "description": "Service category"
            },
            "status": {
              "type": "string",
              "enum": ["active", "optional", "deprecated", "disabled"],
              "description": "Service status"
            },
            "variables": {
              "type": "object",
              "description": "Environment variables for this service",
              "patternProperties": {
                "^[A-Z_]+$": {
                  "type": "object",
                  "required": ["required", "type", "description", "sensitive"],
                  "properties": {
                    "required": {
                      "type": "boolean",
                      "description": "Whether this variable is required"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["string", "number", "boolean"],
                      "description": "Variable data type"
                    },
                    "pattern": {
                      "type": "string",
                      "description": "Regex pattern for validation"
                    },
                    "enum": {
                      "type": "array",
                      "description": "Allowed values",
                      "items": {
                        "type": "string"
                      }
                    },
                    "minLength": {
                      "type": "number",
                      "description": "Minimum string length"
                    },
                    "maxLength": {
                      "type": "number",
                      "description": "Maximum string length"
                    },
                    "description": {
                      "type": "string",
                      "description": "Variable description"
                    },
                    "example": {
                      "type": "string",
                      "description": "Example value"
                    },
                    "default": {
                      "type": "string",
                      "description": "Default value if not provided"
                    },
                    "sensitive": {
                      "type": "boolean",
                      "description": "Whether this contains sensitive data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "environments": {
      "type": "object",
      "description": "Environment-specific configurations",
      "properties": {
        "development": {
          "$ref": "#/definitions/environment"
        },
        "staging": {
          "$ref": "#/definitions/environment"
        },
        "production": {
          "$ref": "#/definitions/environment"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/environment"
      }
    },
    "validation": {
      "type": "object",
      "required": ["strictMode", "allowExtraVars", "warnOnMissing", "errorOnInvalid"],
      "properties": {
        "strictMode": {
          "type": "boolean",
          "description": "Enable strict validation mode"
        },
        "allowExtraVars": {
          "type": "boolean",
          "description": "Allow variables not defined in schema"
        },
        "warnOnMissing": {
          "type": "boolean",
          "description": "Warn about missing optional variables"
        },
        "errorOnInvalid": {
          "type": "boolean",
          "description": "Error on invalid variable values"
        }
      }
    }
  },
  "definitions": {
    "environment": {
      "type": "object",
      "required": ["description"],
      "properties": {
        "description": {
          "type": "string",
          "description": "Environment description"
        },
        "overrides": {
          "type": "object",
          "description": "Variable overrides for this environment",
          "patternProperties": {
            "^[A-Z_]+$": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}