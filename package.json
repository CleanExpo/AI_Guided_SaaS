{
  "name": "ai-guided-saas",
  "version": "1.0.0",
  "type": "module",
  "private": true,
  "scripts": {
    "setup:node20": "node scripts/setup-node-20.cjs",
    "verify:node20": "node scripts/verify-node-20.cjs",
    "check:node20": "node scripts/node20-final-check.cjs",
    "preinstall": "node -e \"process.exit(process.version.includes('v20') ? 0 : 1)\" || echo 'Please use Node v20. Run: nvm use 20.19.4'",
    "dev": "next dev",
    "prebuild": "node scripts/vercel-build-env.cjs",
    "build": "next build",
    "build:dev": "cross-env NODE_ENV=development next build",
    "build:validate": "node scripts/validate-env-build.cjs && cross-env SKIP_ENV_VALIDATION=true next build",
    "build:esbuild": "node build.mjs",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "typecheck": "tsc --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:lighthouse": "lhci autorun",
    "test:integration": "jest --testPathPattern=integration",
    "test:accessibility": "jest --testPathPattern=accessibility",
    "validate": "npm run typecheck && npm run lint && npm run test",
    "validate:full": "npm run typecheck && npm run lint && npm run test:coverage && npm run test:accessibility",
    "deploy:check": "tsx scripts/deploy-production.ts",
    "pre-deploy": "node scripts/vercel-pre-deployment-check.js",
    "deploy:staging": "vercel",
    "deploy:production": "vercel --prod",
    "deploy:vercel": "tsx scripts/deploy-vercel.ts",
    "deploy:preview": "tsx scripts/deploy-vercel.ts preview",
    "deploy:prod": "tsx scripts/deploy-vercel.ts production",
    "analyze": "cross-env ANALYZE=true next build",
    "error-prevention": "node scripts/error-prevention-pipeline.js",
    "fix:typescript": "node scripts/fix-typescript-comprehensive.cjs",
    "fix:typescript:phase2": "node scripts/fix-remaining-typescript-errors.cjs",
    "fix:typescript:systematic": "tsx scripts/comprehensive-typescript-fix.ts",
    "claude:init": "echo \"üß† Initializing Claude Code integration...\"",
    "claude:sync": "echo \"üîÑ Syncing documentation...\"",
    "claude:compact": "echo \"üóúÔ∏è Optimizing context window...\"",
    "claude:status": "echo \"üìä Checking Claude Code status...\"",
    "self-check": "ts-node ./scripts/run-self-check.ts",
    "health": "npm run self-check",
    "health:quick": "npm run typecheck && npm run lint",
    "build:sync": "ts-node scripts/build-sync-agent.ts",
    "build:full": "npm run build:sync && npm run build",
    "mcp:start": "node scripts/start-all-mcp-servers.cjs",
    "mcp:status": "tsx scripts/mcp-status.ts",
    "mcp:context7": "npx @upstash/context7-mcp",
    "mcp:eslint": "npx @eslint/mcp",
    "mcp:sequential": "node ./mcp/wsl-sequential-thinking-server.cjs",
    "mcp:master-dev": "cd mcp/master-dev-analysis-agent && npm run build && npm start",
    "mcp:master-dev:dev": "cd mcp/master-dev-analysis-agent && npm run dev",
    "mcp:build-doctor": "cd mcp/build-doctor-mcp && npm run build && npm start",
    "mcp:build-doctor:dev": "cd mcp/build-doctor-mcp && npm run dev",
    "build-doctor": "cd mcp/build-doctor-mcp && npm run build && node dist/cli.js",
    "deploy:safe": "npm run build:sync && npm run deploy:production",
    "purple:purge": "ts-node scripts/build-sync-agent.ts --color-only",
    "agents:orchestrate": "node scripts/activate-enhanced-orchestration.js",
    "agents:status": "echo \"üìä Checking agent status...\" && node scripts/activate-enhanced-orchestration.js --status",
    "agents:pr18": "echo \"üéØ Activating PR #18 acceleration...\" && node scripts/activate-enhanced-orchestration.js",
    "agents:init": "tsx scripts/initialize-agent-system.ts",
    "agents:load": "tsx scripts/load-deployment-agents.ts",
    "agents:deploy": "tsx scripts/run-production-deployment.ts",
    "agents:test": "tsx scripts/test-agent-workflow.ts",
    "agents:monitor": "echo \"üíì Monitoring agents...\" && node scripts/monitor-agents.cjs",
    "fix:eslint": "eslint . --fix",
    "fix:prettier": "prettier --write \"src/**/*.{ts,tsx,js,jsx}\"",
    "production:gaps": "tsx scripts/production-framework/analyze-production-gaps.ts",
    "semantic:start": "node scripts/start-semantic-search.bat",
    "semantic:stop": "docker-compose -f docker-compose.semantic.yml down",
    "semantic:logs": "docker-compose -f docker-compose.semantic.yml logs -f",
    "semantic:index": "tsx scripts/index-project-semantic.ts",
    "serena:start": "cd serena && python -m serena_mcp_server --transport sse --port 9121",
    "mcp:start": "node scripts/start-all-mcp-servers.cjs",
    "mcp:start:old": "concurrently \"npm run serena:start\" \"node mcp/wsl-sequential-thinking-server.cjs\"",
    "production:fix-typescript": "tsx scripts/production-framework/fix-typescript-errors.ts",
    "production:fix-typescript-systematic": "tsx scripts/production-framework/fix-typescript-errors.ts --systematic",
    "fix:syntax": "node scripts/syntax-surgeon.cjs",
    "fix:syntax:v2": "node scripts/syntax-surgeon-v2.cjs",
    "fix:types": "tsx scripts/fix-type-errors.ts",
    "analyze:errors": "tsx scripts/analyze-typescript-errors.ts",
    "production:readiness": "tsx scripts/production-framework/production-readiness-check.ts",
    "production:readiness-full": "tsx scripts/production-framework/production-readiness-check.ts --comprehensive",
    "production:daily-check": "tsx scripts/production-framework/daily-health-check.ts",
    "fix:all": "node scripts/fix-all-errors-loop.cjs",
    "clean:deps": "node scripts/remove-unused-deps.cjs",
    "optimize:starter-pack": "node scripts/optimize-for-starter-pack.cjs",
    "setup": "node scripts/quick-start.cjs",
    "setup:db": "node scripts/setup-database.cjs",
    "db:push": "prisma db push",
    "db:generate": "prisma generate",
    "fix:mcp": "node scripts/fix-mcp-permanent.cjs",
    "verify:mcp": "node scripts/verify-mcp-integrity.cjs",
    "health:check": "node scripts/health-check-exhaustive.cjs",
    "health:simple": "node scripts/health-check-simple.cjs",
    "health:full": "npm run health:check && npm run build",
    "update:memory": "tsx scripts/update-claude-memory.ts",
    "docs:analyze": "ts-node scripts/autonomous-doc-finder.ts",
    "docs:mcp-agent": "ts-node scripts/mcp-doc-agent.ts",
    "docs:fix": "ts-node scripts/autonomous-fix-applicator.ts",
    "docs:integrate": "ts-node scripts/mcp-autonomous-integration.ts",
    "agentic:revolution": "npm run docs:integrate",
    "env:validate": "ts-node scripts/env-cli.ts validate",
    "env:check": "ts-node scripts/env-cli.ts check",
    "env:sync": "ts-node scripts/env-cli.ts sync",
    "env:history": "ts-node scripts/env-cli.ts history",
    "env:compact": "ts-node scripts/env-cli.ts compact",
    "env:setup": "ts-node scripts/env-cli.ts setup",
    "env:pre-deploy": "ts-node scripts/env-cli.ts pre-deploy",
    "verify:env": "tsx scripts/verify-env.ts",
    "sync:env": "tsx scripts/sync-vercel-env.ts",
    "sync:env:prod": "tsx scripts/sync-vercel-env.ts production",
    "sync:env:preview": "tsx scripts/sync-vercel-env.ts preview",
    "agents:orchestrate:demo": "tsx scripts/production-agent-orchestration.ts",
    "fix:critical-build-blockers": "node scripts/fix-critical-build-blockers.cjs",
    "fix:incremental": "node scripts/fix-incremental.cjs",
    "eval:init": "tsx scripts/eval-init.ts",
    "eval:run": "playwright test tests/evaluation-suite.spec.ts --config=playwright-eval.config.ts",
    "eval:dashboard": "playwright test tests/evaluation-suite.spec.ts --config=playwright-eval.config.ts --grep=Dashboard",
    "eval:prompts": "playwright test tests/evaluation-suite.spec.ts --config=playwright-eval.config.ts --grep=Prompts",
    "eval:folders": "playwright test tests/evaluation-suite.spec.ts --config=playwright-eval.config.ts --grep=Folders",
    "eval:continuous": "tsx scripts/eval-continuous.ts",
    "eval:report": "tsx scripts/eval-report.ts",
    "eval:trends": "tsx scripts/eval-trends.ts",
    "eval:improve": "tsx scripts/eval-improve.ts",
    "eval:cleanup": "tsx scripts/eval-cleanup.ts",
    "eval:monitor": "tsx scripts/monitor-evaluation.ts",
    "eval:monitor:old": "tsx scripts/monitor-scores.ts",
    "eval:auto-improve": "tsx scripts/eval-improve.ts --auto",
    "eval:pipeline": "npm run eval:run && npm run eval:auto-improve && npm run eval:report",
    "mcp:start:all": "node scripts/start-all-mcp.cjs",
    "mcp:status": "tsx scripts/mcp-status.ts",
    "tmux:attach": "./tmux-control.sh attach",
    "tmux:frontend": "./tmux-control.sh frontend",
    "tmux:backend": "./tmux-control.sh backend",
    "tmux:monitoring": "./tmux-control.sh monitoring"
  },
  "claudeCode": {
    "evaluationConfig": {
      "targetScores": {
        "dashboard": 8,
        "prompts": 8,
        "folders": 8
      },
      "continuousInterval": 30,
      "autoImproveThreshold": 7,
      "alertThreshold": 5
    }
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.57.0",
    "@babel/runtime": "^7.28.2",
    "@faker-js/faker": "^9.9.0",
    "@modelcontextprotocol/sdk": "^1.17.0",
    "@monaco-editor/react": "^4.7.0",
    "@next-auth/supabase-adapter": "^0.2.1",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/supabase-js": "^2.52.1",
    "@tanstack/react-query": "^5.83.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^20.19.9",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@types/redis": "^4.0.10",
    "@types/stripe": "^8.0.416",
    "@types/uuid": "^10.0.0",
    "@upstash/context7-mcp": "^1.0.14",
    "@vercel/analytics": "^1.5.0",
    "@xyflow/react": "^12.8.2",
    "ai": "^4.3.19",
    "autoprefixer": "^10.4.20",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^3.0.6",
    "esbuild": "^0.25.8",
    "file-saver": "^2.0.5",
    "framer-motion": "^12.23.9",
    "gray-matter": "^4.0.3",
    "jsonwebtoken": "^9.0.2",
    "jszip": "^3.10.1",
    "lightningcss": "^1.30.1",
    "lottie-react": "^2.4.1",
    "lucide-react": "^0.525.0",
    "marked": "^16.1.1",
    "next": "^15.4.4",
    "next-auth": "^4.24.11",
    "next-themes": "^0.4.6",
    "openai": "^5.10.2",
    "postcss": "^8.4.49",
    "react": "^19.1.0",
    "react-dnd": "^16.0.1",
    "react-dnd-html5-backend": "^16.0.1",
    "react-dom": "^19.1.0",
    "react-intersection-observer": "^9.16.0",
    "react-is": "^18.2.0",
    "react-markdown": "^10.1.0",
    "react-resizable-panels": "^3.0.3",
    "react-syntax-highlighter": "^15.6.1",
    "recharts": "^3.1.0",
    "redis": "^5.6.1",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "stripe": "^18.3.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.4.17",
    "tailwindcss-animate": "^1.0.7",
    "typescript": "^5.8.3",
    "uuid": "^11.1.0",
    "web-vitals": "^5.0.3",
    "winston": "^3.17.0",
    "zod": "^3.25.76",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/mcp": "^0.1.0",
    "@lhci/cli": "^0.15.1",
    "@modelcontextprotocol/server-github": "^2025.4.8",
    "@modelcontextprotocol/server-memory": "^2025.4.25",
    "@playwright/test": "^1.54.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/file-saver": "^2.0.7",
    "@types/glob": "^8.1.0",
    "@types/inquirer": "^9.0.8",
    "@types/jest": "^30.0.0",
    "@types/next-auth": "^3.13.0",
    "@types/winston": "^2.4.4",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "ajv": "^8.17.1",
    "axios": "^1.11.0",
    "chalk": "^5.4.1",
    "commander": "^14.0.0",
    "concurrently": "^9.2.0",
    "cross-env": "^7.0.3",
    "eslint": "^9.31.0",
    "eslint-config-next": "15.4.3",
    "glob": "^10.4.5",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "ora": "^8.2.0",
    "playwright": "^1.54.1",
    "prettier": "^3.6.2",
    "prismjs": "^1.30.0",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.3"
  },
  "engines": {
    "node": ">=20.0.0"
  }
}
